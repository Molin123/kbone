{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/cache.js","webpack:///./src/util/tool.js","webpack:///./src/util/pool.js","webpack:///./src/node/element.js","webpack:///./src/event/event-target.js","webpack:///./src/event/event.js","webpack:///./src/node/node.js","webpack:///./src/bom/location.js","webpack:///./src/document.js","webpack:///./src/event/custom-event.js","webpack:///./src/node/class-list.js","webpack:///./src/node/style.js","webpack:///./src/node/attribute.js","webpack:///./src/node/text-node.js","webpack:///./src/node/comment.js","webpack:///./src/index.js","webpack:///./src/window.js","webpack:///./src/tree/tree.js","webpack:///./src/tree/query-selector.js","webpack:///./src/node/style-list.js","webpack:///./src/tree/parser.js","webpack:///./src/node/element/a.js","webpack:///./src/node/element/image.js","webpack:///./src/node/element/input.js","webpack:///./src/node/element/textarea.js","webpack:///./src/node/element/video.js","webpack:///./src/node/element/canvas.js","webpack:///./src/node/element/select.js","webpack:///./src/node/element/option.js","webpack:///./src/node/element/not-support.js","webpack:///./src/node/element/wx-component.js","webpack:///./src/node/element/wx-custom-component.js","webpack:///./src/bom/cookie.js","webpack:///./src/bom/navigator.js","webpack:///./src/bom/screen.js","webpack:///./src/bom/history.js","webpack:///./src/bom/miniprogram.js","webpack:///./src/bom/storage.js","webpack:///./src/bom/worker.js","webpack:///./src/bom/performance.js","webpack:///./src/bom/xml-http-request.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pageMap","configCache","cookieCache","init","pageId","options","window","document","nodeIdMap","destroy","getDocument","getWindow","getWindowList","keys","map","setNode","nodeId","domNode","parentNode","body","getNode","setConfig","config","getConfig","getCookie","cache","WX_COMPONENT_MAP","forEach","seed","Date","waitFuncSet","Set","NOT_SUPPORT_TAG_NAME_LIST","checkIsWxComponent","tagName","notNeedPrefix","hasPrefix","indexOf","slice","toDash","str","replace","all","toLowerCase","toCamel","$1","toUpperCase","getId","getPageRoute","split","getPageName","pageRoute","pluginMatchRes","match","splitPageRoute","throttle","func","has","add","Promise","resolve","then","delete","catch","console","error","flushThrottleCache","waitFunc","clear","completeURL","url","defaultOrigin","notTransHttps","origin","decodeContent","content","isTagNameSupport","escapeForHtmlGeneration","setData","instance","data","_startInit","_iniCount","$$trigger","calculate","trim","stack","Array","preSign","num","length","isNaN","Number","charCodeAt","push","pop","ans","size","this","$_size","$_cache","Node","ClassList","Style","Attribute","parser","tool","pool","Element","tree","optimization","elementMultiplexing","$$init","type","super","$_tagName","$_children","$_nodeType","nodeType","ELEMENT_NODE","$_unary","voidMap","$_notTriggerUpdate","$_dataset","$_classList","$_style","$_attrs","$$scrollTop","$$scrollTimeStamp","$_initAttrs","attrs","onclick","ontouchstart","ontouchmove","ontouchend","ontouchcancel","onload","onerror","$$destroy","_wxComponent","_wxCustomComponent","child","$$recycle","$__dataset","$__classList","$$create","$_onClassOrStyleUpdate","$__style","$__attrs","$_triggerParentUpdate","attrKeys","datasetName","substr","setAttribute","triggerUpdate","$_triggerWindowUpdate","$_pageId","node","isRemove","id","$$nodeId","$_tree","updateIdMap","childNodes","$_updateChildrenExtra","TEXT_NODE","textContent","html","behavior","className","styleText","style","cssText","src","dataset","$$dealWithAttrsForGenerateHtml","$$isUnary","childrenHtml","$_generateHtml","join","children","attrsMap","attr","element","ownerDocument","$$createElement","$_generateDomTree","appendChild","$$createTextNode","createComment","$$pageId","$_type","slot","getAttribute","reject","$$createSelectorQuery","selectViewport","scrollOffset","res","Error","exec","select","$_nodeId","boundingClientRect","wx","createSelectorQuery","in","$$wxComponent","context","set","args","wxComponent","$$wxCustomComponent","scrollSource","animate","clearAnimation","oldId","getById","toString","$$parse","filter","fragment","DOCUMENT_FRAGMENT_NODE","ast","parse","err","item","$$updateParent","hasTbody","tbody","concat","assign","$$dealWithAttrsForOuterHTML","text","list","parseInt","pageScrollTo","scrollTop","duration","deep","newNode","class","$$dealWithAttrsForCloneNode","attrName","cloneNode","nodes","hasUpdate","removeChild","$_triggerMeUpdate","index","splice","ref","insertIndex","old","replaceIndex","getByTagName","getByClassName","selector","query","valueType","undefined","isArray","JSON","oldValue","oldKeys","removeAttribute","handler","removeEventListener","addEventListener","remove","namespace","warn","hasAttribute","otherElement","checkElement","left","top","Event","CustomEvent","compareTouchList","a","b","len","aItem","bItem","identifier","pageX","pageY","clientX","clientY","EventTarget","oninput","onfocus","onblur","onchange","$_miniprogramEvent","$_eventHandlerMap","$__eventHandlerMap","target","eventName","miniprogramEvent","extra","callback","event","$$setTarget","path","defaultView","timeStamp","performance","now","touches","changedTouches","bubbles","$$extra","detail","currentTarget","$$canBubble","$$setCurrentTarget","$$setEventPhase","CAPTURING_PHASE","isCapture","AT_TARGET","isTarget","BUBBLING_PHASE","stopPropagation","NONE","isInit","handlerMap","handlerObj","capture","bubble","handlers","$_getHandlers","onEventName","eventPhase","$$immediateStop","returnValue","$$triggerWindowError","_namespace","namespaceHandlers","last","flag","$$namespace","bubbleHandlers","captureHandlers","evt","$$process","$_name","$_target","$_timeStamp","$_currentTarget","$_eventPhase","$_detail","$_immediateStop","$_canBubble","$_bubbles","$_touches","$_targetTouches","$_changedTouches","$_cancelable","$_preventDefault","touch","$$checkTargetTouches","node1","node2","checkRelation","$_parentNode","CDATA_SECTION_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","Location","$_pageRoute","$_protocol","$_hostname","$_port","$_pathname","$_search","$_hash","$_lastHash","$_lastPathname","$_lastSearch","$_lastHref","$_allowCheck","protocol","hostname","port","pathname","search","hash","$$startCheckHash","test","oldValues","$_getOldValues","$$endCheckHash","$_checkUrl","href","jumpUrl","matchRoute","$$miniprogram","getMatchRoute","param","encodeURIComponent","callMethod","isTabBarPage","parseRes","host","hostStart","hostEnd","isEnd","char","searchIndex","hashIndex","firstIndex","needCheckUrlChange","oldURL","newURL","$_enterHistory","isFinite","$_setHrefWithoutEnterHistory","Tree","TextNode","Comment","A","Image","Input","Textarea","Video","Canvas","Select","Option","NotSupport","WxComponent","WxCustomComponent","Cookie","CONSTRUCTOR_MAP","IMG","INPUT","TEXTAREA","VIDEO","CANVAS","SELECT","OPTION","WX_COMPONENT_TRANSFORM_LIST","WX_CUSTOM_COMPONENT_MAP","transformWxComponent2Dom","wxComponentName","groupEvent","$$isGroup","stopImmediatePropagation","querySelectorAll","checked","runtime","cookieStore","usingComponents","pageName","that","$_imageConstructor","width","height","unary","$_cookie","$_config","$_node","$_head","createElement","root","$$children","cookie","getStorageSync","$$cookieInstance","deserialize","URL","$_visibilityState","documentElement","originTagName","constructorClass","$$notNeedPrefix","componentName","start","startSplit","nextSplit","cookies","lastSplitStr","substring","splitStr","location","setCookie","$$createComment","dispatchEvent","Pool","onUpdate","domExtendMultiplexing","$_doUpdate","isUpdate","force","isNotContain","action","styleList","$_disableCheckUpdate","joinText","rules","rule","$_checkUpdate","properties","styleValueReduce","defineProperties","$_element","$_map","$_list","attrValueReduce","$$node","idValue","classValue","styleValue","textMultiplexing","$_content","commentMultiplexing","Window","Document","route","$$adapter","OriginalCustomEvent","Navigator","Screen","History","Miniprogram","SessionStorage","LocalStorage","WorkerImpl","Performance","OriginalXMLHttpRequest","lastRafTime","WINDOW_PROTOTYPE_MAP","navigator","screen","history","localStorage","sessionStorage","XMLHttpRequest","ELEMENT_PROTOTYPE_MAP","attribute","classList","subscribeMap","globalObject","noop","timeOrigin","$_outerHeight","$_outerWidth","$_innerHeight","$_innerWidth","$_location","$_navigator","$_screen","$_history","$_miniprogram","$_localStorage","$_sessionStorage","$_performance","$_nowFetchingWebviewInfoPromise","$_fetchDeviceInfo","$_initInnerEvent","onhashchange","$_elementConstructor","$_customEventConstructor","$_xmlHttpRequestConstructor","generate","worker","$_workerConstructor","Worker","$_sharedWorkerConstructor","SharedWorker","HTMLIFrameElement","state","info","getSystemInfoSync","screenHeight","screenWidth","windowHeight","windowWidth","$$reset","descriptor","main","sub","method","handlersMap","dom","computedStyle","fields","errStack","errLines","message","line","filename","lineno","colno","$$isOfficial","oldOnError","$$getPrototype","$_getAspectInfo","methodInPrototype","$$isHook","beforeFuncs","$$before","afterFuncs","$$after","beforeFunc","apply","afterFunc","$$originalMethod","$$imageConstructor","setTimeout","clearTimeout","setInterval","clearInterval","RegExp","Math","Boolean","String","parseFloat","pixelRatio","$$open","navigateBack","delta","transitionDelay","transitionDuration","animationDelay","animationDuration","nextRafTime","max","timeId","QuerySelector","walkDomTree","tagMap","classMap","idMap","querySelector","walk","childNode","findNode","PSEUDO_CHECK","selected","disabled","enabled","ruleCopy","pseudo","from","checkHit","getCalc","expression","ATTR_CHECK","nodeVal","val","KINSHIP_CHECK","kinshipRule","kinshipNode","foundCurrent","tag","contains","checkPseudo","opr","checkAttr","parseCache","parseCacheKeys","regexp","shift","segment","onProcess","idAll","tagAll","classAll","pseudoAll","pseudoName","pseudoParam","attrAll","attrOpr","attrVal","kinshipAll","kinship","currentRule","nthParsed","lastParse","getParseCache","setParseCache","lastRule","hitNodes","classNodes","classNode","tagNodes","tagNode","checkNode","isMatched","j","prevRule","checkKinship","unique","sort","aList","bList","aParent","bParent","unshift","doctypeReg","startTagReg","endTagReg","attrReg","blockMap","inlineMap","rawTextMap","longAttributeCache","tokenize","isText","execRes","parseEndTag","comment","parseStartTag","indexStart","indexEnd","rest","$2","$3","$4","pos","end","HTMLAnchorElement","$_naturalWidth","$_naturalHeight","$_initRect","widthNum","heightNum","rect","getImageInfo","success","$_resetRect","fail","HTMLInputElement","maxlength","placeholder","mpplaceholderclass","HTMLTextAreaElement","HTMLVideoElement","HTMLCanvasElement","$$getNodesRef","nodesRef","getContext","createPath2D","createImage","createImageData","requestAnimationFrame","cancelAnimationFrame","toDataURL","HTMLSelectElement","$$resetOptions","$$updateSelected","selectedIndex","option","find","$$setAttributeWithoutUpdate","findIndex","HTMLOptionElement","label","onDealWithNotSupportDom","scrollItem","getElementById","propName","$$getBoundingClientRect","rectName","scrollRect","itemRect","$_behavior","realName","$_pageName","cookieStr","parseKeyValue","domain","expires","maxAge","secure","httpOnly","cookieDomain","cookiePath","createTime","$_checkDomain","lastIndex","lastIndexOf","cookieKey","oldCookie","$_checkExpires","setStorage","serialize","includeHttpOnly","domainList","domainItem","domainMap","pathList","pathItem","$_checkPath","pathMap","gap","stringify","log","$_language","$_wxVersion","$_brand","$_model","$_platform","$_system","$_userAgent","language","version","brand","model","platform","system","platformContext","systemVersion","appCodeName","$_width","$_height","$_stack","title","$_currentIndex","current","go","next","$$setHrefWithoutCheck","reload","$_checkOrigin","setNavigationBarTitle","pageUrlRouteMap","$_pageUrl","$_subpackagesMap","entry","router","subpackagesMap","regexpList","pathObj","packageName","matchRes","tabBarMap","Storage","$_keys","newValue","currentWindow","storageArea","$_triggerStorage","getStorageInfoSync","$$keys","setStorageSync","$_updateInfo","removeStorageSync","clearStorageSync","wxWorker","wxWorkerPath","callbackList","sharedWorkerInstCount","workerMap","sharedWorkerMap","getWorkerUrl","fileName","getWorkersDir","isSharedWorker","filePath","$_tryCatch","createWorker","$_onMessage","_hasRegisterCb","onMessage","postMessage","terminate","$_worker","close","sharedWorker","$_timeOrigin","SUPPORT_METHOD","STATUS_TEXT_MAP","100","101","200","201","202","203","204","205","206","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","500","501","502","503","504","505","$_method","$_url","$_data","$_status","$_statusText","$_readyState","UNSENT","$_header","Accept","$_responseType","$_resHeader","$_response","$_timeout","$_startTime","$_withCredentials","$_requestTask","$_requestSuccess","$_requestFail","$_requestComplete","readyState","hasChange","DONE","abort","$_callReadyStateChange","OPENED","header","$$cookie","withCredentials","request","dataType","responseType","complete","statusCode","HEADERS_RECEIVED","$$setCookie","LOADING","errMsg","timeout","$_callRequest"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","const pageMap = {}\nlet configCache = {}\nconst cookieCache = {}\n\n/**\n * 初始化\n */\nfunction init(pageId, options) {\n    pageMap[pageId] = {\n        window: options.window,\n        document: options.document,\n        nodeIdMap: options.nodeIdMap,\n    }\n}\n\n/**\n * 销毁\n */\nfunction destroy(pageId) {\n    delete pageMap[pageId]\n}\n\n/**\n * 获取 document\n */\nfunction getDocument(pageId) {\n    return pageMap[pageId] && pageMap[pageId].document\n}\n\n/**\n * 获取 window\n */\nfunction getWindow(pageId) {\n    return pageMap[pageId] && pageMap[pageId].window\n}\n\n/**\n * 获取 window 列表\n */\nfunction getWindowList() {\n    return Object.keys(pageMap).map(pageId => pageMap[pageId].window)\n}\n\n/**\n * 存储 domNode 映射\n */\nfunction setNode(pageId, nodeId, domNode = null) {\n    const document = pageMap[pageId] && pageMap[pageId].document\n\n    // 运行前调用，不做任何操作\n    if (!document) return\n    // 相当于删除映射\n    if (!domNode) return pageMap[pageId].nodeIdMap[nodeId] = domNode\n\n    let parentNode = domNode.parentNode\n\n    while (parentNode && parentNode !== document.body) {\n        parentNode = parentNode.parentNode\n    }\n\n    pageMap[pageId].nodeIdMap[nodeId] = parentNode === document.body ? domNode : null\n}\n\n/**\n * 根据 nodeId 获取 domNode\n */\nfunction getNode(pageId, nodeId) {\n    return pageMap[pageId] && pageMap[pageId].nodeIdMap[nodeId]\n}\n\n/**\n * 存储全局 config\n */\nfunction setConfig(config) {\n    configCache = config\n}\n\n/**\n * 获取全局 config\n */\nfunction getConfig() {\n    return configCache\n}\n\n/**\n * 获取全局 cookie\n */\nfunction getCookie() {\n    return cookieCache\n}\n\nmodule.exports = {\n    init,\n    destroy,\n    getDocument,\n    getWindow,\n    getWindowList,\n    setNode,\n    getNode,\n    setConfig,\n    getConfig,\n    getCookie,\n}\n","const cache = require('./cache')\n\n/**\n * 判断是否是内置组件\n */\nconst WX_COMPONENT_MAP = {}\nconst WX_COMPONENT_LIST = [\n    'cover-image', 'cover-view', 'match-media', 'movable-area', 'movable-view', 'page-container', 'scroll-view', 'swiper', 'swiper-item', 'view',\n    'icon', 'progress', 'rich-text', 'text',\n    'button', 'checkbox', 'checkbox-group', 'editor', 'form', 'input', 'label', 'picker', 'picker-view', 'picker-view-column', 'radio', 'radio-group', 'slider', 'switch', 'textarea',\n    'functional-page-navigator', 'navigator',\n    'audio', 'camera', 'image', 'live-player', 'live-pusher', 'video', 'voip-room',\n    'map',\n    'canvas',\n    'ad', 'ad-custom', 'official-account', 'open-data', 'web-view',\n    // 特殊补充\n    'capture', 'catch', 'animation'\n]\nWX_COMPONENT_LIST.forEach(name => WX_COMPONENT_MAP[name] = name)\nfunction checkIsWxComponent(tagName, notNeedPrefix) {\n    const hasPrefix = tagName.indexOf('wx-') === 0\n    if (notNeedPrefix) {\n        return hasPrefix ? WX_COMPONENT_MAP[tagName.slice(3)] : WX_COMPONENT_MAP[tagName]\n    } else {\n        return hasPrefix ? WX_COMPONENT_MAP[tagName.slice(3)] : false\n    }\n}\n\n/**\n * 驼峰转连字符\n */\nfunction toDash(str) {\n    return str.replace(/[A-Z]/g, all => `-${all.toLowerCase()}`)\n}\n\n/**\n * 连字符转驼峰\n */\nfunction toCamel(str) {\n    return str.replace(/-([a-zA-Z])/g, (all, $1) => $1.toUpperCase())\n}\n\n/**\n * 获取唯一 id\n */\nlet seed = +new Date()\nfunction getId() {\n    return seed++\n}\n\n/**\n * 从 pageId 中获取小程序页面 route\n */\nfunction getPageRoute(pageId) {\n    return pageId.split('-')[2]\n}\n\n/**\n * 从 pageRoute 中获取小程序页面名称\n */\nfunction getPageName(pageRoute) {\n    const pluginMatchRes = pageRoute.match(/(?:^|\\/)__plugin__\\/(?:.*?)(\\/.*)/)\n    if (pluginMatchRes && pluginMatchRes[1]) {\n        // 插件页面的 route 需要特殊处理\n        pageRoute = pluginMatchRes[1]\n    }\n    const splitPageRoute = pageRoute.split('/')\n    return splitPageRoute[1] === 'pages' ? splitPageRoute[2] : splitPageRoute[1]\n}\n\n/**\n * 节流，一个同步流中只调用一次该函数\n */\nconst waitFuncSet = new Set()\nfunction throttle(func) {\n    return () => {\n        if (waitFuncSet.has(func)) return\n\n        waitFuncSet.add(func)\n\n        Promise.resolve().then(() => {\n            if (waitFuncSet.has(func)) {\n                waitFuncSet.delete(func)\n                func()\n            }\n        }).catch(console.error)\n    }\n}\n\n/**\n * 清空节流缓存\n */\nfunction flushThrottleCache() {\n    waitFuncSet.forEach(waitFunc => waitFunc && waitFunc())\n    waitFuncSet.clear()\n}\n\n/**\n * 补全 url\n */\nfunction completeURL(url, defaultOrigin, notTransHttps) {\n    const config = cache.getConfig()\n\n    // 处理 url 前缀\n    if (url.indexOf('//') === 0) {\n        url = 'https:' + url\n    } else if (url[0] === '/') {\n        url = (config.origin || defaultOrigin) + url\n    }\n\n    if (!notTransHttps && url.indexOf('http:') === 0) {\n        url = url.replace(/^http:/ig, 'https:')\n    }\n\n    return url\n}\n\n/**\n * 解码特殊字符\n */\nfunction decodeContent(content) {\n    return content\n        .replace(/&nbsp;/g, '\\u00A0')\n        .replace(/&ensp;/g, '\\u2002')\n        .replace(/&emsp;/g, '\\u2003')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&quot;/g, '\"')\n        .replace(/&apos;/g, '\\'')\n        .replace(/&amp;/g, '&')\n}\n\n/**\n * 判断该标签在小程序中是否支持\n */\nconst NOT_SUPPORT_TAG_NAME_LIST = ['IFRAME']\nfunction isTagNameSupport(tagName) {\n    return NOT_SUPPORT_TAG_NAME_LIST.indexOf(tagName) === -1\n}\n\n/**\n * 处理 innerHTML/outerHTML 的属性值过滤\n */\nfunction escapeForHtmlGeneration(value) {\n    return value.replace(/\"/g, '&quot;')\n}\n\n/**\n * setData 封装\n */\nfunction setData(instance, data) {\n    const pageId = instance.pageId\n    const window = pageId ? cache.getWindow(pageId) : null\n    if (window && window._startInit) {\n        // 统计 init 阶段的 setData\n        window._iniCount++\n        instance.setData(data, () => {\n            window._iniCount--\n            if (!window._startInit && window._iniCount <= 0) {\n                // 回调全部回来了\n                window.document.$$trigger('DOMContentLoaded')\n                window._iniCount = 0\n            }\n        })\n        return\n    }\n\n    // 普通 setData\n    instance.setData(data)\n}\n\n/**\n * 计算数学表达式\n */\nfunction calculate(s) {\n    s = s.trim()\n    const stack = new Array()\n    let preSign = '+'\n    let num = 0\n    const n = s.length\n    for (let i = 0; i < n; ++i) {\n        if (!isNaN(Number(s[i])) && s[i] !== ' ') {\n            num = num * 10 + s[i].charCodeAt() - '0'.charCodeAt()\n        }\n        if (isNaN(Number(s[i])) || i === n - 1) {\n            switch (preSign) {\n            case '+':\n                stack.push(num)\n                break\n            case '-':\n                stack.push(-num)\n                break\n            case '*':\n                stack.push(stack.pop() * num)\n                break\n            default:\n                stack.push(stack.pop() / num | 0)\n            }\n            preSign = s[i]\n            num = 0\n        }\n    }\n    let ans = 0\n    while (stack.length) {\n        ans += stack.pop()\n    }\n    return ans\n}\n\nmodule.exports = {\n    checkIsWxComponent,\n    toDash,\n    toCamel,\n    getId,\n    getPageRoute,\n    getPageName,\n    throttle,\n    flushThrottleCache,\n    completeURL,\n    decodeContent,\n    isTagNameSupport,\n    escapeForHtmlGeneration,\n    setData,\n    calculate,\n}\n","class Pool {\r\n    constructor(size) {\r\n        this.$_size = size || 3000\r\n        this.$_cache = []\r\n    }\r\n\r\n    /**\r\n     * 添加一个对象\r\n     */\r\n    add(object) {\r\n        if (this.$_cache.length >= this.$_size) return\r\n\r\n        this.$_cache.push(object)\r\n    }\r\n\r\n    /**\r\n     * 取出一个对象\r\n     */\r\n    get() {\r\n        return this.$_cache.pop()\r\n    }\r\n}\r\n\r\nmodule.exports = Pool\r\n","const Node = require('./node')\nconst ClassList = require('./class-list')\nconst Style = require('./style')\nconst Attribute = require('./attribute')\nconst cache = require('../util/cache')\nconst parser = require('../tree/parser')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\n\nconst pool = new Pool()\n\nclass Element extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Element(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'element'\n\n        super.$$init(options, tree)\n\n        this.$_tagName = options.tagName || ''\n        this.$_children = []\n        this.$_nodeType = options.nodeType || Node.ELEMENT_NODE\n        this.$_unary = !!parser.voidMap[this.$_tagName.toLowerCase()]\n        this.$_notTriggerUpdate = false\n        this.$_dataset = null\n        this.$_classList = null\n        this.$_style = null\n        this.$_attrs = null\n\n        this.$$scrollTop = 0\n        this.$$scrollTimeStamp = 0 // 最近一次滚动事件触发的时间戳\n\n        this.$_initAttrs(options.attrs)\n\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.onclick = null\n        this.ontouchstart = null\n        this.ontouchmove = null\n        this.ontouchend = null\n        this.ontouchcancel = null\n        this.onload = null\n        this.onerror = null\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_tagName = ''\n        this.$_children.length = 0\n        this.$_nodeType = Node.ELEMENT_NODE\n        this.$_unary = null\n        this.$_notTriggerUpdate = false\n        this.$_dataset = null\n        this.$_classList = null\n        this.$_style = null\n        this.$_attrs = null\n\n        this._wxComponent = null\n        this._wxCustomComponent = null\n\n        this.$$scrollTop = 0\n        this.$$scrollTimeStamp = 0\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$_children.forEach(child => child.$$recycle())\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 延迟创建内部属性对象\n     */\n    set $_dataset(value) {\n        this.$__dataset = value\n    }\n\n    get $_dataset() {\n        if (!this.$__dataset) this.$__dataset = Object.create(null)\n        return this.$__dataset\n    }\n\n    set $_classList(value) {\n        if (!value && this.$__classList) this.$__classList.$$recycle()\n        this.$__classList = value\n    }\n\n    get $_classList() {\n        if (!this.$__classList) this.$__classList = ClassList.$$create(this.$_onClassOrStyleUpdate.bind(this))\n        return this.$__classList\n    }\n\n    set $_style(value) {\n        if (!value && this.$__style) this.$__style.$$recycle()\n        this.$__style = value\n    }\n\n    get $_style() {\n        if (!this.$__style) this.$__style = Style.$$create(this.$_onClassOrStyleUpdate.bind(this))\n        return this.$__style\n    }\n\n    set $_attrs(value) {\n        if (!value && this.$__attrs) this.$__attrs.$$recycle()\n        this.$__attrs = value\n    }\n\n    get $_attrs() {\n        if (!this.$__attrs) this.$__attrs = Attribute.$$create(this, this.$_triggerParentUpdate.bind(this))\n        return this.$__attrs\n    }\n\n    /**\n     * 初始化属性\n     */\n    $_initAttrs(attrs = {}) {\n        // 防止一开始就创建 $_attrs\n        const attrKeys = Object.keys(attrs)\n        if (!attrKeys.length) return\n\n        this.$_notTriggerUpdate = true // 初始化不触发更新\n\n        attrKeys.forEach(name => {\n            if (name.indexOf('data-') === 0) {\n                // dataset\n                const datasetName = tool.toCamel(name.substr(5))\n                this.$_dataset[datasetName] = attrs[name]\n            } else {\n                // 其他属性\n                this.setAttribute(name, attrs[name])\n            }\n        })\n\n        this.$_notTriggerUpdate = false // 重启触发更新\n    }\n\n    /**\n     * 监听 class 或 style 属性值变化\n     */\n    $_onClassOrStyleUpdate() {\n        if (this.$__attrs) this.$_attrs.triggerUpdate()\n        this.$_triggerParentUpdate()\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        if (this.parentNode && !this.$_notTriggerUpdate) {\n            this.parentNode.$$trigger('$$childNodesUpdate')\n            this.$_triggerWindowUpdate()\n        }\n        if (!this.$_notTriggerUpdate) this.$$trigger('$$domNodeUpdate')\n    }\n\n    /**\n     * 更新子组件树\n     */\n    $_triggerMeUpdate() {\n        if (!this.$_notTriggerUpdate) {\n            this.$$trigger('$$childNodesUpdate')\n            this.$_triggerWindowUpdate()\n        }\n    }\n\n    /**\n     * 触发全局更新事件\n     */\n    $_triggerWindowUpdate() {\n        const window = cache.getWindow(this.$_pageId)\n        window.$$trigger('$$domTreeUpdate')\n    }\n\n    /**\n     * 更新子节点变动引起的映射表修改\n     */\n    $_updateChildrenExtra(node, isRemove) {\n        const id = node.id\n\n        // 更新 nodeId - dom 映射表\n        if (isRemove) {\n            cache.setNode(this.$_pageId, node.$$nodeId, null)\n        } else {\n            cache.setNode(this.$_pageId, node.$$nodeId, node)\n        }\n\n        // 更新 id - dom 映射表\n        if (id) {\n            if (isRemove) {\n                this.$_tree.updateIdMap(id, null)\n            } else {\n                this.$_tree.updateIdMap(id, node)\n            }\n        }\n\n        if (node.childNodes && node.childNodes.length) {\n            for (const child of node.childNodes) {\n                this.$_updateChildrenExtra(child, isRemove)\n            }\n        }\n    }\n\n    /**\n     * 遍历 dom 树，生成 html\n     */\n    $_generateHtml(node) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            // 文本节点\n            return node.textContent\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n            // 元素\n            const tagName = node.tagName.toLowerCase()\n            let html = `<${tagName}`\n\n            // 属性\n            if (node.behavior) html += ` behavior=\"${tool.escapeForHtmlGeneration(node.behavior)}\"`\n            if (node.id) html += ` id=\"${tool.escapeForHtmlGeneration(node.id)}\"`\n            if (node.className) html += ` class=\"${tool.escapeForHtmlGeneration(node.className)}\"`\n\n            const styleText = node.style.cssText\n            if (styleText) html += ` style=\"${tool.escapeForHtmlGeneration(styleText)}\"`\n\n            const src = node.src\n            if (src) html += ` src=${tool.escapeForHtmlGeneration(src)}`\n\n            const dataset = node.dataset\n            Object.keys(dataset).forEach(name => {\n                html += ` data-${tool.toDash(name)}=\"${tool.escapeForHtmlGeneration(dataset[name])}\"`\n            })\n\n            html = this.$$dealWithAttrsForGenerateHtml(html, node)\n\n            if (node.$$isUnary) {\n                // 空标签\n                return `${html} />`\n            } else {\n                const childrenHtml = node.childNodes.map(child => this.$_generateHtml(child)).join('')\n                return `${html}>${childrenHtml}</${tagName}>`\n            }\n        }\n    }\n\n    /**\n     * 遍历 ast，生成 dom 树\n     */\n    $_generateDomTree(node) {\n        const {\n            type,\n            tagName = '',\n            attrs = [],\n            children = [],\n            content = '',\n        } = node\n\n        const nodeId = `b-${tool.getId()}` // 运行时生成，使用 b- 前缀\n\n        if (type === 'element') {\n            // 元素\n            const attrsMap = {}\n\n            // 属性列表转化成 map\n            for (const attr of attrs) {\n                const name = attr.name\n                let value = attr.value\n\n                if (name === 'style') value = value && value.replace('\"', '\\'') || ''\n\n                attrsMap[name] = value\n            }\n\n            const element = this.ownerDocument.$$createElement({\n                tagName, attrs: attrsMap, nodeId\n            })\n\n            for (let child of children) {\n                child = this.$_generateDomTree(child)\n\n                if (child) element.appendChild(child)\n            }\n\n            return element\n        } else if (type === 'text') {\n            // 文本\n            return this.ownerDocument.$$createTextNode({\n                content: tool.decodeContent(content), nodeId\n            })\n        } else if (type === 'comment') {\n            // 注释\n            return this.ownerDocument.createComment()\n        }\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$$nodeId,\n            pageId: this.$$pageId,\n            type: this.$_type,\n            tagName: this.$_tagName,\n            id: this.id,\n            className: this.className,\n            style: this.$__style ? this.style.cssText : '',\n            slot: this.getAttribute('slot'),\n        }\n    }\n\n    /**\n     * 是否空标签\n     */\n    get $$isUnary() {\n        return this.$_unary\n    }\n\n    /**\n     * 所属小程序自定义组件实例\n     */\n    get $$wxComponent() {\n        return this._wxComponent\n    }\n\n    /**\n     * 如果该节点是第三方自定义组件，返回对应的实例\n     */\n    get $$wxCustomComponent() {\n        return this._wxCustomComponent\n    }\n\n    /**\n     * 获取子节点列表\n     */\n    get $$children() {\n        return this.$_children\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForGenerateHtml(html) {\n        // 具体实现逻辑由子类实现\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML() {\n        // ignore，具体实现逻辑由子类实现\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        // 具体实现逻辑由子类实现\n        return {}\n    }\n\n    /**\n     * 小程序端的 getBoundingClientRect 实现\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.scrollOffset.html\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.boundingClientRect.html\n     */\n    $$getBoundingClientRect() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'BODY') {\n                window.$$createSelectorQuery().selectViewport().scrollOffset(res => (res ? resolve(res) : reject(new Error('body not found in webview')))).exec()\n            } else {\n                window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).boundingClientRect(res => (res ? resolve(res) : reject(new Error('element not found in webview')))).exec()\n            }\n        })\n    }\n\n    /**\n     * 获取对应小程序组件的 context 对象\n     */\n    $$getContext() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'CANVAS') {\n                // TODO，为了兼容基础库的一个 bug，暂且如此实现\n                wx.createSelectorQuery().in(this.$$wxComponent).select(`.node-${this.$_nodeId}`).context(res => (res && res.context ? resolve(res.context) : reject()))\n                    .exec()\n            } else {\n                window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).context(res => (res && res.context ? resolve(res.context) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 获取对应节点的 NodesRef 对象\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.html\n     */\n    $$getNodesRef() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'CANVAS') {\n                // TODO，为了兼容基础库的一个 bug，暂且如此实现\n                resolve(wx.createSelectorQuery().in(this.$$wxComponent).select(`.node-${this.$_nodeId}`))\n            } else {\n                resolve(window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`))\n            }\n        })\n    }\n\n    /**\n     * 设置属性，但不触发更新\n     */\n    $$setAttributeWithoutUpdate(name, value) {\n        if (typeof name !== 'string') return\n\n        this.$_notTriggerUpdate = true\n        this.$_attrs.set(name, value)\n        this.$_notTriggerUpdate = false\n    }\n\n    /**\n     * 关键帧/滚动驱动动画接口\n     * https://developers.weixin.qq.com/miniprogram/dev/framework/view/animation.html\n     */\n    $$animate(...args) {\n        const wxComponent = this.$$wxCustomComponent || this.$$wxComponent\n        if (!wxComponent) {\n            console.error('this element has not been attached yet')\n        } else {\n            if (typeof args[2] === 'object' && args[2].scrollSource) {\n                args[2].scrollSource = `.miniprogram-root >>> ${args[2].scrollSource}`\n            }\n            wxComponent.animate(`.node-${this.$_nodeId}`, ...args)\n        }\n    }\n\n    /**\n     * 关键帧/滚动驱动动画清除接口\n     * https://developers.weixin.qq.com/miniprogram/dev/framework/view/animation.html\n     */\n    $$clearAnimation(...args) {\n        const wxComponent = this.$$wxCustomComponent || this.$$wxComponent\n        if (!wxComponent) {\n            console.error('this element has not been attached yet')\n        } else {\n            if (typeof args[2] === 'object' && args[2].scrollSource) {\n                args[2].scrollSource = `.miniprogram-root >>> ${args[2].scrollSource}`\n            }\n            wxComponent.clearAnimation(`.node-${this.$_nodeId}`, ...args)\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get id() {\n        if (!this.$__attrs) return ''\n\n        return this.$_attrs.get('id')\n    }\n\n    set id(id) {\n        if (typeof id !== 'string') return\n\n        id = id.trim()\n        const oldId = this.$_attrs.get('id')\n        this.$_attrs.set('id', id)\n\n        if (id === oldId) return\n\n        // 更新 tree\n        if (this.$_tree.getById(oldId) === this) this.$_tree.updateIdMap(oldId, null)\n        if (id) this.$_tree.updateIdMap(id, this)\n        this.$_triggerParentUpdate()\n    }\n\n    get tagName() {\n        return this.$_tagName.toUpperCase()\n    }\n\n    get className() {\n        if (!this.$__classList) return ''\n\n        return this.$_classList.toString()\n    }\n\n    set className(className) {\n        if (typeof className !== 'string') return\n\n        this.$_classList.$$parse(className)\n    }\n\n    get classList() {\n        return this.$_classList\n    }\n\n    get nodeName() {\n        return this.tagName\n    }\n\n    get nodeType() {\n        return this.$_nodeType\n    }\n\n    get childNodes() {\n        return this.$_children\n    }\n\n    get children() {\n        return this.$_children.filter(child => child.nodeType === Node.ELEMENT_NODE)\n    }\n\n    get firstChild() {\n        return this.$_children[0]\n    }\n\n    get lastChild() {\n        return this.$_children[this.$_children.length - 1]\n    }\n\n    get innerHTML() {\n        return this.$_children.map(child => this.$_generateHtml(child)).join('')\n    }\n\n    set innerHTML(html) {\n        if (typeof html !== 'string') return\n\n        const fragment = this.ownerDocument.$$createElement({\n            tagName: 'documentfragment',\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n            nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n        })\n\n        // 解析成 ast\n        let ast = null\n        try {\n            ast = parser.parse(html)\n        } catch (err) {\n            console.error(err)\n        }\n\n        if (!ast) return\n\n        // 生成 dom 树\n        ast.forEach(item => {\n            const node = this.$_generateDomTree(item)\n            if (node) fragment.appendChild(node)\n        })\n\n        // 删除所有子节点\n        this.$_children.forEach(node => {\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n        })\n        this.$_children.length = 0\n\n        // 追加新子节点\n        if (this.$_tagName === 'table') {\n            // table 节点需要判断是否存在 tbody\n            let hasTbody = false\n\n            for (const child of fragment.childNodes) {\n                if (child.tagName === 'TBODY') {\n                    hasTbody = true\n                    break\n                }\n            }\n\n            if (!hasTbody) {\n                const tbody = this.ownerDocument.$$createElement({\n                    tagName: 'tbody',\n                    attrs: {},\n                    nodeType: Node.ELEMENT_NODE,\n                    nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n                })\n\n                tbody.appendChild(fragment)\n                this.appendChild(tbody)\n            }\n        } else {\n            this.appendChild(fragment)\n        }\n    }\n\n    get outerHTML() {\n        return this.$_generateHtml(this)\n    }\n\n    set outerHTML(html) {\n        if (typeof html !== 'string') return\n\n        // 解析成 ast，只取第一个作为当前节点\n        let ast = null\n        try {\n            ast = parser.parse(html)[0]\n        } catch (err) {\n            console.error(err)\n        }\n\n        if (ast) {\n            // 生成 dom 树\n            const node = this.$_generateDomTree(ast)\n\n            // 删除所有子节点\n            this.$_children.forEach(node => {\n                node.$$updateParent(null)\n\n                // 更新映射表\n                this.$_updateChildrenExtra(node, true)\n            })\n            this.$_children.length = 0\n\n            this.$_notTriggerUpdate = true // 先不触发更新\n\n            // 追加新子节点\n            const children = [].concat(node.childNodes)\n            for (const child of children) {\n                this.appendChild(child)\n            }\n\n            this.$_tagName = node.tagName.toLowerCase()\n            this.id = node.id || ''\n            this.className = node.className || ''\n            this.style.cssText = node.style.cssText || ''\n            this.src = node.src || ''\n            this.$_dataset = Object.assign({}, node.dataset)\n\n            this.$$dealWithAttrsForOuterHTML(node)\n\n            this.$_notTriggerUpdate = false // 重启触发更新\n            this.$_triggerParentUpdate()\n        }\n    }\n\n    get innerText() {\n        // WARN：此处处理成和 textContent 一致，不去判断是否会渲染出来的情况\n        return this.textContent\n    }\n\n    set innerText(text) {\n        this.textContent = text\n    }\n\n    get textContent() {\n        return this.$_children.map(child => child.textContent).join('')\n    }\n\n    set textContent(text) {\n        text = '' + text\n\n        // 删除所有子节点\n        this.$_children.forEach(node => {\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n        })\n        this.$_children.length = 0\n\n        // 空串不新增 textNode 节点\n        if (!text) return\n\n        const nodeId = `b-${tool.getId()}` // 运行时生成，使用 b- 前缀\n        const child = this.ownerDocument.$$createTextNode({content: text, nodeId})\n\n        this.appendChild(child)\n    }\n\n    get style() {\n        return this.$_style\n    }\n\n    set style(value) {\n        this.$_style.cssText = value\n    }\n\n    get dataset() {\n        return this.$_dataset\n    }\n\n    get attributes() {\n        return this.$_attrs.list\n    }\n\n    get src() {\n        if (!this.$__attrs) return ''\n\n        return this.$_attrs.get('src')\n    }\n\n    set src(value) {\n        value = '' + value\n        this.$_attrs.set('src', value)\n    }\n\n    get scrollTop() {\n        // 只有配置了 windowScroll 才能拿到准确值；如果没有配置，则需要通过 document.body.$$getBoundingClientRect 来获取准确值\n        return this.$$scrollTop\n    }\n\n    set scrollTop(value) {\n        if (this.$_tagName !== 'html') return // 只有 document.documentElement 支持设置 scrollTop\n        if (+new Date() - this.$$scrollTimeStamp < 500) return // 为了兼容 mp-webpack-plugin@0.9.14 及以前的版本，在滚动事件触发后的 500ms 内，设置 scrollTop 不予处理\n\n        value = parseInt(value, 10)\n        wx.pageScrollTo({scrollTop: value, duration: 0})\n        this.$$scrollTop = value\n    }\n\n    cloneNode(deep) {\n        const dataset = {}\n        Object.keys(this.$_dataset).forEach(name => {\n            dataset[`data-${tool.toDash(name)}`] = this.$_dataset[name]\n        })\n\n        const newNode = this.ownerDocument.$$createElement({\n            tagName: this.$_tagName,\n            attrs: {\n                id: this.id,\n                class: this.className,\n                style: this.style.cssText,\n                src: this.src,\n\n                ...dataset,\n                ...this.$$dealWithAttrsForCloneNode(),\n            },\n            nodeType: this.$_nodeType,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n\n        // 属性\n        if (this.$__attrs) {\n            const attrsMap = this.$_attrs.map\n            Object.keys(attrsMap).forEach(attrName => newNode.setAttribute(attrName, attrsMap[attrName]))\n        }\n\n        if (deep) {\n            // 深克隆\n            for (const child of this.$_children) {\n                newNode.appendChild(child.cloneNode(deep))\n            }\n        }\n\n        return newNode\n    }\n\n    appendChild(node) {\n        if (!(node instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = [].concat(node.childNodes)\n        } else {\n            nodes = [node]\n        }\n\n        if (!nodes.length) hasUpdate = true // 列表为空也要触发 update，因为可能走 innerHTML 强行置空\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            this.$_children.push(node)\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n\n            hasUpdate = true\n        }\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return node\n    }\n\n    removeChild(node) {\n        if (!(node instanceof Node)) return\n\n        const index = this.$_children.indexOf(node)\n\n        if (index >= 0) {\n            // 已经插入，需要删除\n            this.$_children.splice(index, 1)\n\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n\n            // 触发 webview 端更新\n            this.$_triggerMeUpdate()\n        }\n\n        return node\n    }\n\n    insertBefore(node, ref) {\n        if (!(node instanceof Node)) return\n        if (ref && !(ref instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = []\n            for (let i = 0; i < node.childNodes.length; i++) {\n                // 因为是逐个插入，所以需要逆序\n                nodes.push(node.childNodes[i])\n            }\n        } else {\n            nodes = [node]\n        }\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            const insertIndex = ref ? this.$_children.indexOf(ref) : -1\n\n            if (insertIndex === -1) {\n                // 插入到末尾\n                this.$_children.push(node)\n            } else {\n                // 插入到 ref 之前\n                this.$_children.splice(insertIndex, 0, node)\n            }\n\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n\n            hasUpdate = true\n        }\n\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return node\n    }\n\n    replaceChild(node, old) {\n        if (!(node instanceof Node) || !(old instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = []\n            for (let i = node.childNodes.length - 1; i >= 0; i--) {\n                // 因为是逐个插入，所以需要逆序\n                nodes.push(node.childNodes[i])\n            }\n        } else {\n            nodes = [node]\n        }\n\n        const replaceIndex = this.$_children.indexOf(old)\n        if (replaceIndex !== -1) this.$_children.splice(replaceIndex, 1)\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            if (replaceIndex === -1) {\n                // 插入到末尾\n                this.$_children.push(node)\n            } else {\n                // 替换到 old\n                this.$_children.splice(replaceIndex, 0, node)\n            }\n\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n            this.$_updateChildrenExtra(old, true)\n\n            hasUpdate = true\n        }\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return old\n    }\n\n    hasChildNodes() {\n        return this.$_children.length > 0\n    }\n\n    getElementsByTagName(tagName) {\n        if (typeof tagName !== 'string') return []\n\n        return this.$_tree.getByTagName(tagName, this)\n    }\n\n    getElementsByClassName(className) {\n        if (typeof className !== 'string') return []\n\n        return this.$_tree.getByClassName(className, this)\n    }\n\n    querySelector(selector) {\n        if (typeof selector !== 'string') return\n\n        return this.$_tree.query(selector, this)[0] || null\n    }\n\n    querySelectorAll(selector) {\n        if (typeof selector !== 'string') return []\n\n        return this.$_tree.query(selector, this)\n    }\n\n    setAttribute(name, value) {\n        if (typeof name !== 'string') return\n\n        // 保留对象/数组/布尔值/undefined 原始内容，方便处理小程序内置组件的使用\n        const valueType = typeof value\n        if (valueType !== 'object' && valueType !== 'boolean' && valueType !== 'function' && value !== undefined && !Array.isArray(value)) value = '' + value\n\n        if (name === 'kbone-attribute-map' || name === 'kbone-event-map') {\n            value = value || {}\n            if (typeof value === 'string') value = JSON.parse(value) // 确保存入的是对象\n            const oldValue = this.getAttribute(name)\n            const keys = Object.keys(value)\n            const oldKeys = oldValue ? Object.keys(oldValue) : null\n\n            if (name === 'kbone-attribute-map') {\n                // 特殊属性，用于批量设置属性\n                keys.forEach(key => this.setAttribute(key, value[key]))\n                if (oldKeys) {\n                    oldKeys.forEach(key => {\n                        if (!Object.prototype.hasOwnProperty.call(value, key)) this.removeAttribute(key)\n                    })\n                }\n            } else {\n                // 特殊属性，用于批量监听事件\n                const window = cache.getWindow(this.$_pageId)\n\n                if (oldKeys) {\n                    oldKeys.forEach(key => {\n                        // 先删除所有旧的 handler\n                        let handler = oldValue[key]\n                        handler = typeof handler !== 'function' ? window[handler] : handler\n                        this.removeEventListener(key, handler)\n                    })\n                }\n                keys.forEach(key => {\n                    let handler = value[key]\n                    handler = typeof handler !== 'function' ? window[handler] : handler\n                    this.addEventListener(key, handler)\n                })\n            }\n        }\n\n        if (name === 'id') {\n            // id 要提前到此处特殊处理\n            this.id = value\n        } else {\n            this.$_attrs.set(name, value)\n        }\n    }\n\n    getAttribute(name) {\n        if (typeof name !== 'string') return ''\n        if (name.indexOf('data-') === 0) {\n            // dataset 属性\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!this.$__dataset) return undefined\n\n            return this.dataset[datasetName]\n        } else {\n            if (!this.$__attrs) return name === 'id' || name === 'style' || name === 'class' ? '' : undefined\n\n            return this.$_attrs.get(name)\n        }\n    }\n\n    hasAttribute(name) {\n        if (typeof name !== 'string') return false\n        if (!this.$__attrs) return false\n\n        return this.$_attrs.has(name)\n    }\n\n    removeAttribute(name) {\n        if (typeof name !== 'string') return false\n\n        return this.$_attrs.remove(name)\n    }\n\n    setAttributeNS(namespace, name, value) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        this.setAttribute(name, value)\n    }\n\n    getAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.getAttribute(name)\n    }\n\n    hasAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.hasAttribute(name)\n    }\n\n    removeAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.removeAttribute(name)\n    }\n\n    contains(otherElement) {\n        const stack = []\n        let checkElement = this\n\n        while (checkElement) {\n            if (checkElement === otherElement) return true\n\n            const childNodes = checkElement.childNodes\n            if (childNodes && childNodes.length) childNodes.forEach(child => stack.push(child))\n\n            checkElement = stack.pop()\n        }\n\n        return false\n    }\n\n    getBoundingClientRect() {\n        // 不作任何实现，只作兼容使用\n        console.warn('getBoundingClientRect is not supported, please use dom.$$getBoundingClientRect instead of it')\n        return {\n            left: 0,\n            top: 0,\n        }\n    }\n}\n\nmodule.exports = Element\n","const Event = require('./event')\nconst CustomEvent = require('./custom-event')\n\n/**\n * 比较 touch 列表\n */\nfunction compareTouchList(a, b) {\n    if (a.length !== b.length) return false\n\n    for (let i, len = a.length; i < len; i++) {\n        const aItem = a[i]\n        const bItem = b[i]\n\n        if (aItem.identifier !== bItem.identifier) return false\n        if (aItem.pageX !== bItem.pageX || aItem.pageY !== bItem.pageY || aItem.clientX !== bItem.clientX || aItem.clientY !== bItem.clientY) return false\n    }\n\n    return true\n}\n\nclass EventTarget {\n    constructor(...args) {\n        this.$$init(...args)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init() {\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.ontouchstart = null\n        this.ontouchmove = null\n        this.ontouchend = null\n        this.ontouchcancel = null\n        this.oninput = null\n        this.onfocus = null\n        this.onblur = null\n        this.onchange = null\n\n        this.$_miniprogramEvent = null // 记录已触发的小程序事件\n        this.$_eventHandlerMap = null\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        Object.keys(this).forEach(key => {\n            // 处理 on 开头的属性\n            if (key.indexOf('on') === 0) this[key] = null\n            // 处理外部挂进来的私有的属性\n            if (key[0] === '_') this[key] = null\n            if (key[0] === '$' && (key[1] !== '_' && key[1] !== '$')) this[key] = null\n        })\n\n        this.$_miniprogramEvent = null\n        this.$_eventHandlerMap = null\n    }\n\n    set $_eventHandlerMap(value) {\n        this.$__eventHandlerMap = value\n    }\n\n    get $_eventHandlerMap() {\n        if (!this.$__eventHandlerMap) this.$__eventHandlerMap = Object.create(null)\n        return this.$__eventHandlerMap\n    }\n\n    /**\n     * 触发事件捕获、冒泡流程\n     */\n    static $$process(target, eventName, miniprogramEvent, extra, callback) {\n        let event\n\n        if (eventName instanceof CustomEvent || eventName instanceof Event) {\n            // 传入的是事件对象\n            event = eventName\n            eventName = event.type\n            event.$$setTarget(target)\n        }\n\n        eventName = eventName.toLowerCase()\n\n        const path = [target]\n        let parentNode = target.parentNode\n\n        while (parentNode && parentNode.tagName !== 'HTML') {\n            path.push(parentNode)\n            parentNode = parentNode.parentNode\n        }\n\n        if (path[path.length - 1].tagName === 'BODY') {\n            // 如果最后一个节点是 document.body，则追加 document.documentElement\n            path.push(parentNode)\n        }\n\n        if (!event) {\n            // 此处特殊处理，不直接返回小程序的 event 对象\n            const document = target.ownerDocument\n            const window = document ? document.defaultView : null\n            event = new Event({\n                name: eventName,\n                target,\n                timeStamp: window ? window.performance.now() : miniprogramEvent.timeStamp,\n                touches: miniprogramEvent.touches,\n                changedTouches: miniprogramEvent.changedTouches,\n                bubbles: true, // 默认都可以冒泡\n                $$extra: extra,\n            })\n            // 保留原始事件的 detail\n            if (miniprogramEvent.detail) event.detail = Object.assign({}, miniprogramEvent.detail, event.detail || {})\n        }\n\n        // 捕获\n        for (let i = path.length - 1; i >= 0; i--) {\n            const currentTarget = path[i]\n\n            if (!event.$$canBubble) break // 判定冒泡是否结束\n            if (currentTarget === target) continue\n\n            // wx-capture 节点事件单独触发\n            if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'capture') continue\n\n            event.$$setCurrentTarget(currentTarget)\n            event.$$setEventPhase(Event.CAPTURING_PHASE)\n\n            currentTarget.$$trigger(eventName, {\n                event,\n                isCapture: true,\n            })\n            if (callback) callback(currentTarget, event, true)\n        }\n\n        // 目标\n        if (event.$$canBubble) {\n            event.$$setCurrentTarget(target)\n            event.$$setEventPhase(Event.AT_TARGET)\n\n            // 捕获和冒泡阶段监听的事件都要触发\n            target.$$trigger(eventName, {\n                event,\n                isCapture: true,\n                isTarget: true,\n            })\n            if (callback) callback(target, event, true)\n\n            target.$$trigger(eventName, {\n                event,\n                isCapture: false,\n                isTarget: true,\n            })\n            if (callback) callback(target, event, false)\n        }\n\n        if (event.bubbles) {\n            // 冒泡\n            for (const currentTarget of path) {\n                if (!event.$$canBubble) break // 判定冒泡是否结束\n                if (currentTarget === target) continue\n\n                // wx-capture 节点事件单独触发\n                if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'capture') continue\n\n                event.$$setCurrentTarget(currentTarget)\n                event.$$setEventPhase(Event.BUBBLING_PHASE)\n\n                currentTarget.$$trigger(eventName, {\n                    event,\n                    isCapture: false,\n                })\n                if (callback) callback(currentTarget, event, false)\n\n                // wx-catch 节点事件要结束冒泡\n                if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'catch') event.stopPropagation()\n            }\n        }\n\n        // 重置事件\n        event.$$setCurrentTarget(null)\n        event.$$setEventPhase(Event.NONE)\n\n        return event\n    }\n\n    /**\n     * 获取 handlers\n     */\n    $_getHandlers(eventName, isCapture, isInit) {\n        const handlerMap = this.$_eventHandlerMap\n\n        if (isInit) {\n            const handlerObj = handlerMap[eventName] = handlerMap[eventName] || {}\n\n            handlerObj.capture = handlerObj.capture || []\n            handlerObj.bubble = handlerObj.bubble || []\n\n            return isCapture ? handlerObj.capture : handlerObj.bubble\n        } else {\n            const handlerObj = handlerMap[eventName]\n\n            if (!handlerObj) return null\n\n            return isCapture ? handlerObj.capture : handlerObj.bubble\n        }\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, {\n        event, args = [], isCapture, isTarget\n    } = {}) {\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture)\n        const onEventName = `on${eventName}`\n\n        if (!event) {\n            const document = this.ownerDocument\n            const window = document ? document.defaultView : null\n            event = new Event({\n                timeStamp: window ? window.performance.now() : Date.now(),\n                touches: [],\n                changedTouches: [],\n                name: eventName,\n                target: this,\n                eventPhase: Event.AT_TARGET,\n            })\n        }\n\n        if ((!isCapture || !isTarget) && typeof this[onEventName] === 'function') {\n            // 触发 onXXX 绑定的事件\n            if (event && event.$$immediateStop) return\n            try {\n                event.returnValue = this[onEventName].call(this || null, event, ...args)\n            } catch (err) {\n                console.error(err)\n                this.$$triggerWindowError(err)\n            }\n        }\n\n        if (!handlers) return\n\n        // 触发 addEventListener 绑定的事件\n        if (handlers.length) {\n            [...handlers].forEach(handler => {\n                if (event && event.$$immediateStop) return\n                try {\n                    handler.call(this || null, event, ...args)\n                } catch (err) {\n                    console.error(err)\n                    this.$$triggerWindowError(err)\n                }\n            })\n        }\n\n        // 触发 addEventListener 绑定到命名空间下的事件\n        if (handlers._namespace) {\n            Object.keys(handlers._namespace).forEach(namespace => {\n                const namespaceHandlers = handlers._namespace[namespace]\n                if (namespaceHandlers && namespaceHandlers.length) {\n                    [...namespaceHandlers].forEach(handler => {\n                        if (event && event.$$immediateStop) return\n                        try {\n                            handler.call(this || null, event, ...args)\n                        } catch (err) {\n                            console.error(err)\n                            this.$$triggerWindowError(err)\n                        }\n                    })\n                }\n            })\n        }\n    }\n\n    /**\n     * 检查该事件是否可以触发\n     */\n    $$checkEvent(miniprogramEvent) {\n        const last = this.$_miniprogramEvent\n        const now = miniprogramEvent\n\n        let flag = false\n\n        if (!last || last.timeStamp !== now.timeStamp) {\n            // 时间戳不同\n            flag = true\n        } else {\n            if (last.touches && now.touches && !compareTouchList(last.touches, now.touches)) {\n                // 存在不同的 touches\n                flag = true\n            } else if ((!last.touches && now.touches) || (last.touches && !now.touches)) {\n                // 存在一方没有 touches\n                flag = true\n            }\n\n            if (last.changedTouches && now.changedTouches && !compareTouchList(last.changedTouches, now.changedTouches)) {\n                // 存在不同的 changedTouches\n                flag = true\n            } else if ((!last.changedTouches && now.changedTouches) || (last.changedTouches && !now.changedTouches)) {\n                // 存在一方没有 changedTouches\n                flag = true\n            }\n        }\n\n        if (flag) this.$_miniprogramEvent = now\n        return flag\n    }\n\n    /**\n     * 清空某个事件的所有句柄\n     */\n    $$clearEvent(eventName, options) {\n        if (typeof eventName !== 'string') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture)\n\n        if (!handlers) return\n\n        if (handlers.length) handlers.length = 0\n        if (handlers._namespace) handlers._namespace[namespace] = null\n    }\n\n    /**\n     * 是否存在事件句柄，只考虑通过 addEventListener 绑定的句柄\n     */\n    $$hasEventHandler(eventName) {\n        eventName = eventName.toLowerCase()\n        const bubbleHandlers = this.$_getHandlers(eventName, false)\n        const captureHandlers = this.$_getHandlers(eventName, true)\n        return (bubbleHandlers && bubbleHandlers.length) || (captureHandlers && captureHandlers.length)\n    }\n\n    /**\n     * 触发 window error 事件\n     */\n    $$triggerWindowError(err) {\n        const document = this.ownerDocument\n        const window = document ? document.defaultView : null\n        if (window) {\n            window.$$trigger('error', {\n                event: err,\n            })\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    addEventListener(eventName, handler, options) {\n        if (typeof eventName !== 'string' || typeof handler !== 'function') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture, true)\n\n        if (namespace) {\n            // 存在命名空间\n            handlers._namespace = handlers._namespace || {}\n            handlers._namespace[namespace] = handlers._namespace[namespace] || []\n            handlers._namespace[namespace].push(handler)\n        } else {\n            handlers.push(handler)\n        }\n    }\n\n    removeEventListener(eventName, handler, options) {\n        if (typeof eventName !== 'string' || typeof handler !== 'function') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture, false)\n\n        if (!handlers) return\n\n        if (namespace) {\n            // 存在命名空间\n            if (!handlers._namespace || !handlers._namespace[namespace]) return\n\n            const index = handlers._namespace[namespace].indexOf(handler)\n            if (index >= 0) handlers._namespace[namespace].splice(index, 1)\n        } else {\n            const index = handlers.indexOf(handler)\n            if (index >= 0) handlers.splice(index, 1)\n        }\n    }\n\n    dispatchEvent(evt) {\n        if (evt instanceof CustomEvent) {\n            EventTarget.$$process(this, evt)\n        }\n\n        // 因为不支持 preventDefault，所以永远返回 true\n        return true\n    }\n}\n\nmodule.exports = EventTarget\n","/**\n * 检查节点间的关系\n */\nfunction checkRelation(node1, node2) {\n    if (node1 === node2) return true\n\n    while (node1) {\n        if (node1 === node2) return true\n\n        node1 = node1.parentNode\n    }\n\n    return false\n}\n\nclass Event {\n    constructor(options) {\n        this.$_name = options.name.toLowerCase()\n        this.$_target = options.target\n        this.$_timeStamp = options.timeStamp || Date.now()\n        this.$_currentTarget = options.currentTarget || options.target\n        this.$_eventPhase = options.eventPhase || Event.NONE\n        this.$_detail = options.detail || null\n        this.$_immediateStop = false\n        this.$_canBubble = true\n        this.$_bubbles = options.bubbles || false\n        this.$_touches = null\n        this.$_targetTouches = null\n        this.$_changedTouches = null\n        this.$_cancelable = true\n        this.$_preventDefault = false\n\n        // 补充字段\n        const extra = options.$$extra\n        if (extra) {\n            Object.keys(extra).forEach(key => {\n                this[key] = extra[key]\n            })\n        }\n\n        // 处理 touches\n        if (options.touches && options.touches.length) {\n            this.$_touches = options.touches.map(touch => ({...touch, target: options.target}))\n\n            this.$$checkTargetTouches()\n        } else if (options.touches) {\n            this.$_touches = []\n            this.$_targetTouches = []\n        }\n\n        // 处理 changedTouches\n        if (options.changedTouches && options.changedTouches.length) {\n            this.$_changedTouches = options.changedTouches.map(touch => ({...touch, target: options.target}))\n        } else if (options.changedTouches) {\n            this.$_changedTouches = []\n        }\n    }\n\n    /**\n     * 返回事件是否立即停止\n     */\n    get $$immediateStop() {\n        return this.$_immediateStop\n    }\n\n    /**\n     * 返回事件时否还可以冒泡\n     */\n    get $$canBubble() {\n        return this.$_canBubble\n    }\n\n    /**\n     * 返回事件是否阻止默认行为\n     */\n    get $$preventDefault() {\n        return this.$_preventDefault\n    }\n\n    /**\n     * 设置 target\n     */\n    $$setTarget(target) {\n        this.$_target = target\n    }\n\n    /**\n     * 设置 currentTarget\n     */\n    $$setCurrentTarget(currentTarget) {\n        this.$_currentTarget = currentTarget\n        this.$$checkTargetTouches()\n    }\n\n    /**\n     * 设置事件所处阶段\n     */\n    $$setEventPhase(eventPhase) {\n        this.$_eventPhase = eventPhase\n    }\n\n    /**\n     * 检查 targetTouches\n     */\n    $$checkTargetTouches() {\n        if (this.$_touches && this.$_touches.length) {\n            this.$_targetTouches = this.$_touches.filter(touch => checkRelation(touch.target, this.$_currentTarget))\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get bubbles() {\n        return this.$_bubbles\n    }\n\n    get cancelable() {\n        return this.$_cancelable\n    }\n\n    get target() {\n        return this.$_target\n    }\n\n    get currentTarget() {\n        return this.$_currentTarget\n    }\n\n    get eventPhase() {\n        return this.$_eventPhase\n    }\n\n    get type() {\n        return this.$_name\n    }\n\n    get timeStamp() {\n        return this.$_timeStamp\n    }\n\n    get touches() {\n        return this.$_touches\n    }\n\n    get targetTouches() {\n        return this.$_targetTouches\n    }\n\n    get changedTouches() {\n        return this.$_changedTouches\n    }\n\n    set detail(value) {\n        this.$_detail = value\n    }\n\n    get detail() {\n        return this.$_detail\n    }\n\n    get returnValue() {\n        return !this.$_preventDefault\n    }\n\n    set returnValue(value) {\n        if (value !== undefined) {\n            this.$_preventDefault = !value\n        }\n    }\n\n    preventDefault() {\n        // 目前仅支持 a 标签的点击阻止\n        this.$_preventDefault = true\n    }\n\n    stopPropagation() {\n        if (this.eventPhase === Event.NONE) return\n\n        this.$_canBubble = false\n    }\n\n    stopImmediatePropagation() {\n        if (this.eventPhase === Event.NONE) return\n\n        this.$_immediateStop = true\n        this.$_canBubble = false\n    }\n\n    initEvent(name = '', bubbles) {\n        if (typeof name !== 'string') return\n\n        this.$_name = name.toLowerCase()\n        this.$_bubbles = bubbles === undefined ? this.$_bubbles : !!bubbles\n    }\n}\n\n// 静态属性\nEvent.NONE = 0\nEvent.CAPTURING_PHASE = 1\nEvent.AT_TARGET = 2\nEvent.BUBBLING_PHASE = 3\n\nmodule.exports = Event\n","const EventTarget = require('../event/event-target')\nconst cache = require('../util/cache')\n\nclass Node extends EventTarget {\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init()\n\n        this.$_nodeId = options.nodeId // 唯一标识\n        this.$_type = options.type\n        this.$_parentNode = null\n        this.$_tree = tree\n        this.$_pageId = tree.pageId\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_nodeId = null\n        this.$_type = null\n        this.$_parentNode = null\n        this.$_tree = null\n        this.$_pageId = null\n    }\n\n    /**\n     * 内部 nodeId\n     */\n    get $$nodeId() {\n        return this.$_nodeId\n    }\n\n    /**\n     * 内部 pageId\n     */\n    get $$pageId() {\n        return this.$_pageId\n    }\n\n    /**\n     * 更新 parentNode\n     */\n    $$updateParent(parentNode = null) {\n        this.$_parentNode = parentNode\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get parentNode() {\n        return this.$_parentNode\n    }\n\n    get nodeValue() {\n        return null\n    }\n\n    get previousSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index > 0) {\n            return childNodes[index - 1]\n        }\n\n        return null\n    }\n\n    get previousElementSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index > 0) {\n            for (let i = index - 1; i >= 0; i--) {\n                if (childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                    return childNodes[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    get nextSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        return childNodes[index + 1] || null\n    }\n\n    get nextElementSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index < childNodes.length - 1) {\n            for (let i = index + 1, len = childNodes.length; i < len; i++) {\n                if (childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                    return childNodes[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    get ownerDocument() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get childNodes() {\n        return []\n    }\n\n    hasChildNodes() {\n        return false\n    }\n\n    remove() {\n        if (!this.parentNode || !this.parentNode.removeChild) return this\n\n        return this.parentNode.removeChild(this)\n    }\n}\n\n// 静态属性\nNode.ELEMENT_NODE = 1\nNode.TEXT_NODE = 3\nNode.CDATA_SECTION_NODE = 4\nNode.PROCESSING_INSTRUCTION_NODE = 7\nNode.COMMENT_NODE = 8\nNode.DOCUMENT_NODE = 9\nNode.DOCUMENT_TYPE_NODE = 10\nNode.DOCUMENT_FRAGMENT_NODE = 11\n\nmodule.exports = Node\n","/**\n * 暂不对 ipv6 地址做支持\n */\nconst EventTarget = require('../event/event-target')\nconst tool = require('../util/tool')\nconst cache = require('../util/cache')\n\nclass Location extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        this.$_pageId = pageId\n        this.$_pageRoute = tool.getPageRoute(pageId) // 小程序页面路由\n\n        this.$_protocol = 'https:'\n        this.$_hostname = ''\n        this.$_port = ''\n        this.$_pathname = '/'\n        this.$_search = ''\n        this.$_hash = ''\n\n        this.$_lastHash = ''\n        this.$_lastPathname = ''\n        this.$_lastSearch = ''\n        this.$_lastHref = ''\n        this.$_allowCheck = true // 是否检查 url 和 hash 变化\n    }\n\n    /**\n     * 获取 url 中旧的需要进行检测的部分\n     */\n    $_getOldValues() {\n        return {\n            protocol: this.$_protocol,\n            hostname: this.$_hostname,\n            port: this.$_port,\n            pathname: this.$_pathname,\n            search: this.$_search,\n            hash: this.$_hash,\n        }\n    }\n\n    /**\n     * 设置 href，不进入 history\n     */\n    $_setHrefWithoutEnterHistory(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$$startCheckHash()\n\n        if (!/^(([a-zA-Z0-9]+:)|(\\/\\/))/i.test(value)) {\n            // 没有带协议\n            if (value.indexOf('/') === 0) {\n                // 以 / 开头，直接替换整个 pathname、search、hash\n                value = `${this.origin}${value}`\n            } else if (value.indexOf('#') === 0) {\n                // 以 # 开头，直接替换整个 hash\n                value = `${this.origin}${this.$_pathname}${this.$_search}${value}`\n            } else {\n                // 非以 / 开头，则替换 pathname 的最后一段、search、hash\n                let pathname = this.$_pathname.split('/')\n                pathname.pop()\n                pathname = pathname.join('/')\n\n                value = `${this.origin}${pathname}/${value}`\n            }\n        }\n\n        const {\n            protocol, hostname, port, hash, search, pathname\n        } = Location.$$parse(value)\n        const oldValues = this.$_getOldValues()\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n\n        this.$$endCheckHash()\n        this.$_checkUrl(oldValues)\n    }\n\n    /**\n     * 进入 history\n     */\n    $_enterHistory() {\n        this.$$trigger('$_addToHistory', {\n            event: {\n                href: this.href,\n            }\n        })\n    }\n\n    /**\n     * 检查 url 变化是否需要跳转\n     */\n    $_checkUrl(oldValues) {\n        if (!this.$_allowCheck) return false\n\n        const window = cache.getWindow(this.$_pageId)\n\n        if (this.$_protocol !== oldValues.protocol || this.$_hostname !== oldValues.hostname || this.$_port !== oldValues.port) {\n            // 只能跳转相同 protocol、hostname 和 port 的 url\n            const jumpUrl = this.href\n\n            // 和 web 端不同，这里恢复成原状\n            this.$_protocol = oldValues.protocol\n            this.$_hostname = oldValues.hostname\n            this.$_port = oldValues.port\n            this.$_pathname = oldValues.pathname\n            this.$_search = oldValues.search\n            this.$_hash = oldValues.hash\n\n            window.$$trigger('pageaccessdenied', {\n                event: {\n                    url: jumpUrl,\n                    type: 'jump',\n                },\n            })\n\n            return false\n        }\n\n        if (this.$_pathname !== oldValues.pathname || this.$_search !== oldValues.search) {\n            const matchRoute = window.$$miniprogram.getMatchRoute(this.$_pathname)\n\n            if (matchRoute) {\n                let param = ['type=jump', `targeturl=${encodeURIComponent(this.href)}`]\n                if (this.$_search) param.push(`search=${encodeURIComponent(this.$_search)}`)\n                if (this.$_hash) param.push(`hash=${encodeURIComponent(this.$_hash)}`)\n\n                param = '?' + param.join('&')\n\n                const callMethod = window.$$miniprogram.isTabBarPage(matchRoute) ? 'switchTab' : 'redirectTo'\n                wx[callMethod]({\n                    url: `${matchRoute}${param}`,\n                })\n\n                if (callMethod === 'switchTab') {\n                    // switchTab 不会销毁页面实例，所以也需要恢复成原状\n                    this.$_protocol = oldValues.protocol\n                    this.$_hostname = oldValues.hostname\n                    this.$_port = oldValues.port\n                    this.$_pathname = oldValues.pathname\n                    this.$_search = oldValues.search\n                    this.$_hash = oldValues.hash\n                }\n\n                return true\n            } else {\n                const jumpUrl = this.href\n\n                // 和 web 端不同，这里恢复成原状\n                this.$_protocol = oldValues.protocol\n                this.$_hostname = oldValues.hostname\n                this.$_port = oldValues.port\n                this.$_pathname = oldValues.pathname\n                this.$_search = oldValues.search\n                this.$_hash = oldValues.hash\n\n                window.$$trigger('pagenotfound', {\n                    event: {\n                        url: jumpUrl,\n                        type: 'jump',\n                    },\n                })\n\n                return false\n            }\n        }\n\n        return true\n    }\n\n    /**\n     * 打开一个新页面\n     */\n    $$open(url) {\n        url = tool.completeURL(url, this.origin, true)\n\n        const window = cache.getWindow(this.$_pageId)\n        const parseRes = Location.$$parse(url)\n\n        if (parseRes.protocol !== this.$_protocol || parseRes.hostname !== this.$_hostname || parseRes.port !== this.$_port) {\n            // 只能打开相同 protocol、hostname 和 port 的 url\n            return window.$$trigger('pageaccessdenied', {\n                event: {\n                    url,\n                    type: 'open',\n                },\n            })\n        }\n\n        const matchRoute = window.$$miniprogram.getMatchRoute(parseRes.pathname || '/')\n\n        if (matchRoute) {\n            let param = ['type=open', `targeturl=${encodeURIComponent(url)}`]\n            if (this.$_search) param.push(`search=${encodeURIComponent(parseRes.search || '')}`)\n            if (this.$_hash) param.push(`hash=${encodeURIComponent(parseRes.hash || '')}`)\n\n            param = '?' + param.join('&')\n\n            const callMethod = window.$$miniprogram.isTabBarPage(matchRoute) ? 'switchTab' : 'navigateTo'\n            wx[callMethod]({\n                url: `${matchRoute}${param}`,\n            })\n        } else {\n            window.$$trigger('pagenotfound', {\n                event: {\n                    url,\n                    type: 'open',\n                },\n            })\n        }\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(url = '') {\n        const {\n            protocol, hostname, port, pathname, hash, search\n        } = Location.$$parse(url)\n\n        this.$_protocol = protocol || 'https:'\n        this.$_hostname = hostname || ''\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n    }\n\n    /**\n     * 解析 href\n     */\n    static $$parse(href = '') {\n        href = href.trim()\n\n        // protocol\n        let protocol = /^[a-zA-Z0-9]+:/i.exec(href)\n        if (protocol) {\n            protocol = protocol[0].toLowerCase()\n            href = href.slice(protocol.length)\n        }\n\n        // 跳过 //\n        if (href.indexOf('//') === 0) {\n            href = href.slice(2)\n        }\n\n        let hostStart = 0\n        let hostEnd = -1\n        let isEnd = false\n        let host\n        for (let i = 0, len = href.length; i < len; i++) {\n            const char = href[i]\n            if ('\\t\\n\\r \"%\\';<>\\\\^`{|}'.indexOf(char) >= 0) {\n                // RFC 2396：不允许在 hostname 中使用的字符\n                if (hostEnd === -1) hostEnd = i\n            } else if ('#/?'.indexOf(char) >= 0) {\n                // host 结束符\n                if (hostEnd === -1) hostEnd = i\n                isEnd = true\n            } else if (char === '@') {\n                hostStart = i + 1\n                hostEnd = -1\n            }\n\n            if (isEnd) break\n        }\n\n        if (hostEnd === -1) {\n            host = href.slice(hostStart)\n            href = ''\n        } else {\n            host = href.slice(hostStart, hostEnd)\n            href = href.slice(hostEnd)\n        }\n\n\n        // port\n        let port = /:[0-9]*$/.exec(host)\n        if (port) {\n            port = port[0]\n            host = host.slice(0, host.length - port.length)\n\n            if (port !== ':') port = port.slice(1)\n        } else {\n            port = ''\n        }\n\n        // hostname\n        for (let i = 0, len = host.length; i < len; i++) {\n            const char = host[i]\n            const isValid = (char >= 'a' && char <= 'z') || (char >= 'A' && char <= 'Z') || (char >= '0' && char <= '9') || '.-+_'.indexOf(char) >= 0 || char.charCodeAt(0) > 127\n\n            // 不合法的 host 字符\n            if (!isValid) {\n                host = host.slice(0, i)\n\n                href = `/${host.slice(i)}${href}`\n            }\n        }\n        const hostname = host.length > 255 ? '' : host.toLowerCase()\n\n        // hash\n        let hash\n        let searchIndex = -1\n        let hashIndex = -1\n        for (let i = 0, len = href.length; i < len; i++) {\n            if (href[i] === '#') {\n                hash = href.slice(i)\n                hashIndex = i\n                break\n            } else if (href[i] === '?' && searchIndex === -1) {\n                searchIndex = i\n            }\n        }\n        hash = hash === '#' ? '' : hash\n\n        // search\n        let search\n        if (searchIndex !== -1) {\n            if (hashIndex === -1) {\n                search = href.slice(searchIndex)\n            } else {\n                search = href.slice(searchIndex, hashIndex)\n            }\n        }\n        search = search === '?' ? '' : search\n\n        // pathname\n        let pathname\n        const firstIndex = searchIndex !== -1 && (hashIndex === -1 || searchIndex < hashIndex) ? searchIndex : hashIndex\n        if (firstIndex > 0) {\n            pathname = href.slice(0, firstIndex)\n        } else if (firstIndex === -1 && href.length > 0) {\n            pathname = href\n        }\n        if (hostname && !pathname) {\n            pathname = '/'\n        }\n\n        return {\n            protocol,\n            hostname,\n            port,\n            pathname,\n            hash,\n            search,\n        }\n    }\n\n    /**\n     * 不触发检查的方式替换 href\n     */\n    $$setHrefWithoutCheck(value) {\n        this.$_allowCheck = false\n        this.replace(value)\n        this.$_allowCheck = true\n    }\n\n    /**\n     * 开始检查 hash 变化\n     */\n    $$startCheckHash() {\n        if (!this.$_allowCheck) return\n\n        this.$_lastHash = this.$_hash\n        this.$_lastPathname = this.$_pathname\n        this.$_lastSearch = this.$_search\n        this.$_lastHref = this.href\n    }\n\n    /**\n     * 检查 hash 变化\n     */\n    $$endCheckHash(needCheckUrlChange) {\n        if (!this.$_allowCheck) return\n\n        if ((needCheckUrlChange || (this.$_lastPathname === this.$_pathname && this.$_lastSearch === this.$_search)) && this.$_lastHash !== this.$_hash) {\n            this.$$trigger('hashchange', {\n                event: {\n                    oldURL: this.$_lastHref,\n                    newURL: this.href,\n                }\n            })\n        }\n\n        this.$_lastHash = ''\n        this.$_lastPathname = ''\n        this.$_lastSearch = ''\n        this.$_lastHref = ''\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get protocol() {\n        return this.$_protocol\n    }\n\n    set protocol(value) {\n        if (!value || typeof value !== 'string') return\n\n        const parseRes = /^([a-z0-9.+-]+)(:)?$/i.exec(value)\n        const oldValues = this.$_getOldValues()\n\n        if (parseRes) {\n            if (parseRes[2] === ':') {\n                this.$_protocol = value\n            } else {\n                this.$_protocol = `${parseRes[1]}:`\n            }\n\n            if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n        }\n    }\n\n    get host() {\n        return (this.$_hostname || '') + (this.$_port ? ':' + this.$_port : '')\n    }\n\n    set host(value) {\n        if (!value || typeof value !== 'string') return\n\n        const {hostname, port} = Location.$$parse(`//${value}`)\n        const oldValues = this.$_getOldValues()\n\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get hostname() {\n        return this.$_hostname\n    }\n\n    set hostname(value) {\n        if (!value || typeof value !== 'string') return\n\n        const {hostname} = Location.$$parse(`//${value}`)\n        const oldValues = this.$_getOldValues()\n\n        this.$_hostname = hostname || this.$_hostname\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get port() {\n        return this.$_port\n    }\n\n    set port(value) {\n        value = +value\n\n        if (typeof value !== 'number' || !isFinite(value) || value <= 0) return\n\n        const port = value === 80 ? '' : value + ''\n        const oldValues = this.$_getOldValues()\n\n        this.$_port = port\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get origin() {\n        return `${this.$_protocol}//${this.host}`\n    }\n\n    set origin(value) {\n        if (!value || typeof value !== 'string') return\n        if (!/^(([a-zA-Z0-9]+:)|(\\/\\/))/i.test(value)) return // 没有带协议\n\n        const {protocol, hostname, port} = Location.$$parse(value)\n        const oldValues = this.$_getOldValues()\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get pathname() {\n        return this.$_pathname\n    }\n\n    set pathname(value) {\n        if (typeof value !== 'string') return\n\n        const oldValues = this.$_getOldValues()\n\n        if (!value || value === '/') {\n            this.$_pathname = '/'\n        } else {\n            if (value[0] !== '/') value = `/${value}`\n\n            const {pathname} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_pathname = pathname || '/'\n        }\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get search() {\n        return this.$_search\n    }\n\n    set search(value) {\n        if (typeof value !== 'string') return\n\n        const oldValues = this.$_getOldValues()\n\n        if (!value || value === '?') {\n            this.$_search = ''\n        } else {\n            if (value[0] !== '?') value = `?${value}`\n\n            const {search} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_search = search || ''\n        }\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get hash() {\n        return this.$_hash\n    }\n\n    set hash(value) {\n        if (typeof value !== 'string') return\n\n        this.$$startCheckHash()\n\n        if (!value || value === '#') {\n            this.$_hash = ''\n        } else {\n            if (value[0] !== '#') value = `#${value}`\n\n            const {hash} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_hash = hash || ''\n        }\n\n        this.$$endCheckHash()\n        this.$_enterHistory()\n    }\n\n    get href() {\n        return `${this.$_protocol}//${this.host}${this.$_pathname}${this.$_search}${this.$_hash}`\n    }\n\n    set href(value) {\n        this.$_setHrefWithoutEnterHistory(value)\n        this.$_enterHistory()\n    }\n\n    reload() {\n        const window = cache.getWindow(this.$_pageId)\n        let param = ['type=jump', `targeturl=${encodeURIComponent(this.href)}`]\n        if (this.$_search) param.push(`search=${encodeURIComponent(this.$_search)}`)\n        if (this.$_hash) param.push(`hash=${encodeURIComponent(this.$_hash)}`)\n\n        param = '?' + param.join('&')\n\n        const callMethod = window.$$miniprogram.isTabBarPage(this.$_pageRoute) ? 'switchTab' : 'redirectTo'\n        wx[callMethod]({\n            url: `${this.$_pageRoute}${param}`,\n        })\n    }\n\n    replace(value) {\n        // 和直接赋值 location.href 不同，不需要进入 history\n        this.$_setHrefWithoutEnterHistory(value)\n    }\n\n    toString() {\n        return this.href\n    }\n}\n\nmodule.exports = Location\n","const EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\nconst Tree = require('./tree/tree')\nconst Node = require('./node/node')\nconst Element = require('./node/element')\nconst TextNode = require('./node/text-node')\nconst Comment = require('./node/comment')\nconst tool = require('./util/tool')\nconst cache = require('./util/cache')\nconst A = require('./node/element/a')\nconst Image = require('./node/element/image')\nconst Input = require('./node/element/input')\nconst Textarea = require('./node/element/textarea')\nconst Video = require('./node/element/video')\nconst Canvas = require('./node/element/canvas')\nconst Select = require('./node/element/select')\nconst Option = require('./node/element/option')\nconst NotSupport = require('./node/element/not-support')\nconst WxComponent = require('./node/element/wx-component')\nconst WxCustomComponent = require('./node/element/wx-custom-component')\nconst Cookie = require('./bom/cookie')\n\nconst CONSTRUCTOR_MAP = {\n    A,\n    IMG: Image,\n    INPUT: Input,\n    TEXTAREA: Textarea,\n    VIDEO: Video,\n    CANVAS: Canvas,\n    SELECT: Select,\n    OPTION: Option,\n}\nconst WX_COMPONENT_TRANSFORM_LIST = ['checkbox', 'checkbox-group', 'input', 'label', 'radio', 'radio-group', 'textarea', 'canvas'] // 需要从 wx-xxx 转回 xxx 节点\nlet WX_CUSTOM_COMPONENT_MAP = {}\n\n/**\n * 将部分 wx-xxx 组件转换成普通 dom 节点\n */\nfunction transformWxComponent2Dom(wxComponentName, options, tree) {\n    let groupEvent = null\n    if (wxComponentName === 'radio' || wxComponentName === 'checkbox') {\n        options.attrs.type = wxComponentName\n        wxComponentName = 'input'\n    } else if (wxComponentName === 'radio-group' || wxComponentName === 'checkbox-group') {\n        groupEvent = wxComponentName.split('-')[0]\n        wxComponentName = 'div'\n    }\n    options.tagName = wxComponentName\n    delete options.attrs.behavior\n    const normalElement = CONSTRUCTOR_MAP[wxComponentName.toUpperCase()] || Element\n    const element = normalElement.$$create(options, tree)\n\n    if (groupEvent) {\n        // group 组件转成 div，监听底下的表单组件来做处理\n        element.addEventListener('change', evt => {\n            if (!evt.$$isGroup) evt.stopImmediatePropagation()\n        })\n        element.addEventListener(`$$${groupEvent}Change`, evt => {\n            const detail = {}\n            if (groupEvent === 'radio') {\n                (element.querySelectorAll('input[type=radio]') || []).forEach(item => {\n                    if (item !== evt.target) item.setAttribute('checked', false)\n                })\n                detail.value = evt.target.value\n            } else if (groupEvent === 'checkbox') {\n                detail.value = (element.querySelectorAll('input[type=checkbox]') || [])\n                    .filter(item => item.checked)\n                    .map(item => item.value)\n            }\n\n            element.$$trigger('change', {\n                event: new Event({\n                    timeStamp: evt.timeStamp,\n                    touches: evt.touches,\n                    changedTouches: evt.changedTouches,\n                    name: 'change',\n                    target: element,\n                    eventPhase: Event.AT_TARGET,\n                    detail,\n                    $$extra: {$$isGroup: true},\n                }),\n                currentTarget: element,\n            })\n        })\n    }\n\n    return element\n}\n\n\nclass Document extends EventTarget {\n    constructor(pageId, nodeIdMap) {\n        super()\n\n        const config = cache.getConfig()\n        const runtime = config.runtime || {}\n        const cookieStore = runtime.cookieStore\n        WX_CUSTOM_COMPONENT_MAP = runtime.usingComponents || {}\n\n        this.$_pageId = pageId\n        const pageRoute = tool.getPageRoute(pageId)\n        const pageName = tool.getPageName(pageRoute)\n\n        // 用于封装特殊标签和对应构造器\n        const that = this\n        this.$_imageConstructor = function HTMLImageElement(width, height) {\n            return Image.$$create({\n                tagName: 'img',\n                nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n                attrs: {},\n                width,\n                height,\n            }, that.$_tree)\n        }\n\n        this.$_pageId = pageId\n        this.$_tree = new Tree(pageId, {\n            type: 'element',\n            tagName: 'body',\n            attrs: {},\n            unary: false,\n            nodeId: 'e-body',\n            children: [],\n        }, nodeIdMap, this)\n        this.$_cookie = new Cookie(pageName)\n        this.$_config = null\n\n        // documentElement\n        this.$_node = this.$$createElement({\n            tagName: 'html',\n            attrs: {},\n            nodeId: `a-${tool.getId()}`, // 运行前生成，使用 a- 前缀\n        })\n        this.$_node.$$updateParent(this) // documentElement 的 parentNode 是 document\n\n        // head 元素\n        this.$_head = this.createElement('head')\n\n        // 更新 body 的 parentNode\n        this.$_tree.root.$$updateParent(this.$_node)\n        this.$_node.$$children.push(this.$_tree.root)\n\n        // 持久化 cookie\n        if (cookieStore !== 'memory' && cookieStore !== 'globalmemory') {\n            try {\n                const key = cookieStore === 'storage' ? `PAGE_COOKIE_${pageName}` : 'PAGE_COOKIE'\n                const cookie = wx.getStorageSync(key)\n                if (cookie) this.$$cookieInstance.deserialize(cookie)\n            } catch (err) {\n                // ignore\n            }\n        }\n    }\n\n    /**\n     * Image 构造器\n     */\n    get $$imageConstructor() {\n        return this.$_imageConstructor\n    }\n\n    get $$pageId() {\n        return this.$_pageId\n    }\n\n    /**\n     * 完整的 cookie，包括 httpOnly 也能获取到\n     */\n    get $$cookie() {\n        return this.$_cookie.getCookie(this.URL, true)\n    }\n\n    /**\n     * 获取 cookie 实例\n     */\n    get $$cookieInstance() {\n        return this.$_cookie\n    }\n\n    /**\n     * 创建内置组件的时候是否支持不用前缀写法\n     */\n    get $$notNeedPrefix() {\n        if (!this.$_config) this.$_config = cache.getConfig()\n        return this.$_config && this.$_config.runtime && this.$_config.runtime.wxComponent === 'noprefix'\n    }\n\n    /**\n     * 设置页面显示状态\n     */\n    set $$visibilityState(value) {\n        this.$_visibilityState = value\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, options) {\n        this.documentElement.$$trigger(eventName, options)\n    }\n\n    /**\n     * 内部所有节点创建都走此接口，统一把控\n     */\n    $$createElement(options, tree) {\n        const originTagName = options.tagName\n        const tagName = originTagName.toUpperCase()\n        let wxComponentName = null\n        tree = tree || this.$_tree\n\n        const constructorClass = CONSTRUCTOR_MAP[tagName]\n        if (constructorClass) {\n            return constructorClass.$$create(options, tree)\n        } else if (tagName === 'WX-COMPONENT') {\n            options.attrs = options.attrs || {}\n            const behavior = options.attrs.behavior\n            if (behavior && WX_COMPONENT_TRANSFORM_LIST.indexOf(behavior) !== -1) return transformWxComponent2Dom(behavior, options, tree) // 需要转成普通 dom\n            else return WxComponent.$$create(options, tree)\n        // eslint-disable-next-line no-cond-assign\n        } else if (wxComponentName = tool.checkIsWxComponent(originTagName, this.$$notNeedPrefix)) {\n            // 内置组件的特殊写法，转成 wx-component 节点\n            options.attrs = options.attrs || {}\n            if (WX_COMPONENT_TRANSFORM_LIST.indexOf(wxComponentName) !== -1) return transformWxComponent2Dom(wxComponentName, options, tree) // 需要转成普通 dom\n            else {\n                options.tagName = 'wx-component'\n                options.attrs.behavior = wxComponentName\n                return WxComponent.$$create(options, tree)\n            }\n        } else if (WX_CUSTOM_COMPONENT_MAP[originTagName]) {\n            // 自定义组件的特殊写法，转成 wx-custom-component 节点\n            options.tagName = 'wx-custom-component'\n            options.attrs = options.attrs || {}\n            options.componentName = originTagName\n            return WxCustomComponent.$$create(options, tree)\n        } else if (!tool.isTagNameSupport(tagName)) {\n            return NotSupport.$$create(options, tree)\n        } else {\n            return Element.$$create(options, tree)\n        }\n    }\n\n    /**\n     * 内部所有文本节点创建都走此接口，统一把控\n     */\n    $$createTextNode(options, tree) {\n        return TextNode.$$create(options, tree || this.$_tree)\n    }\n\n    /**\n     * 内部所有注释节点创建都走此接口，统一把控\n     */\n    $$createComment(options, tree) {\n        return Comment.$$create(options, tree || this.$_tree)\n    }\n\n    /**\n     * 处理 Set-Cookie 头串\n     */\n    $$setCookie(str) {\n        if (str && typeof str === 'string') {\n            let start = 0\n            let startSplit = 0\n            let nextSplit = str.indexOf(',', startSplit)\n            const cookies = []\n\n            while (nextSplit >= 0) {\n                const lastSplitStr = str.substring(start, nextSplit)\n                const splitStr = str.substr(nextSplit)\n\n                if (/^,\\s*([^,=;\\x00-\\x1F]+)=([^;\\n\\r\\0\\x00-\\x1F]*).*/.test(splitStr)) {\n                // 分割成功，则上一片是完整 cookie\n                    cookies.push(lastSplitStr)\n                    start = nextSplit + 1\n                }\n\n                startSplit = nextSplit + 1\n                nextSplit = str.indexOf(',', startSplit)\n            }\n\n            // 塞入最后一片 cookie\n            cookies.push(str.substr(start))\n\n            cookies.forEach(cookie => this.cookie = cookie)\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeType() {\n        return Node.DOCUMENT_NODE\n    }\n\n    get documentElement() {\n        return this.$_node\n    }\n\n    get body() {\n        return this.$_tree.root\n    }\n\n    get nodeName() {\n        return '#document'\n    }\n\n    get head() {\n        return this.$_head\n    }\n\n    get defaultView() {\n        return cache.getWindow(this.$_pageId) || null\n    }\n\n    get URL() {\n        if (this.defaultView) return this.defaultView.location.href\n\n        return ''\n    }\n\n    get cookie() {\n        return this.$_cookie.getCookie(this.URL)\n    }\n\n    set cookie(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$_cookie.setCookie(value, this.URL)\n    }\n\n    get visibilityState() {\n        return this.$_visibilityState\n    }\n\n    get hidden() {\n        return this.$_visibilityState === 'visible'\n    }\n\n    get location() {\n        if (this.defaultView) return this.defaultView.location\n\n        return null\n    }\n\n    getElementById(id) {\n        if (typeof id !== 'string') return\n\n        return this.$_tree.getById(id) || null\n    }\n\n    getElementsByTagName(tagName) {\n        if (typeof tagName !== 'string') return []\n\n        return this.$_tree.getByTagName(tagName, this.documentElement)\n    }\n\n    getElementsByClassName(className) {\n        if (typeof className !== 'string') return []\n\n        return this.$_tree.getByClassName(className, this.documentElement)\n    }\n\n    getElementsByName(name) {\n        if (typeof name !== 'string') return []\n\n        return this.$_tree.query(`*[name=${name}]`, this.documentElement)\n    }\n\n    querySelector(selector) {\n        if (typeof selector !== 'string') return\n\n        return this.$_tree.query(selector, this.documentElement)[0] || null\n    }\n\n    querySelectorAll(selector) {\n        if (typeof selector !== 'string') return []\n\n        return this.$_tree.query(selector, this.documentElement)\n    }\n\n    createElement(tagName) {\n        if (typeof tagName !== 'string') return\n\n        tagName = tagName.trim()\n        if (!tagName) return\n\n        return this.$$createElement({\n            tagName,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createElementNS(ns, tagName) {\n        // 不支持真正意义上的 createElementNS，转成调用 createElement\n        return this.createElement(tagName)\n    }\n\n    createTextNode(content) {\n        content = '' + content\n\n        return this.$$createTextNode({\n            content,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createComment() {\n        // 忽略注释内容的传入\n        return this.$$createComment({\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createDocumentFragment() {\n        return Element.$$create({\n            tagName: 'documentfragment',\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n            nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n        }, this.$_tree)\n    }\n\n    createEvent() {\n        const window = cache.getWindow(this.$_pageId)\n\n        return new window.CustomEvent()\n    }\n\n    addEventListener(eventName, handler, options) {\n        this.documentElement.addEventListener(eventName, handler, options)\n    }\n\n    removeEventListener(eventName, handler, isCapture) {\n        this.documentElement.removeEventListener(eventName, handler, isCapture)\n    }\n\n    dispatchEvent(evt) {\n        this.documentElement.dispatchEvent(evt)\n    }\n}\n\nmodule.exports = Document\n","const Event = require('./event')\n\nclass CustomEvent extends Event {\n    constructor(name = '', options = {}) {\n        super({\n            name,\n            ...options,\n        })\n    }\n}\n\nmodule.exports = CustomEvent\n","/**\n * babel extends 无法直接继承 Array，所以换种方法来继承：https://babeljs.io/docs/en/caveats/#classes\n */\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nfunction ClassList(onUpdate) {\n    this.$$init(onUpdate)\n}\n\n/**\n * 创建实例\n */\nClassList.$$create = function(onUpdate) {\n    const config = cache.getConfig()\n\n    if (config.optimization.domExtendMultiplexing) {\n    // 复用 dom 扩展对象\n        const instance = pool.get()\n\n        if (instance) {\n            instance.$$init(onUpdate)\n            return instance\n        }\n    }\n\n    return new ClassList(onUpdate)\n}\n\nClassList.prototype = Object.assign([], {\n    /**\n     * 初始化实例\n     */\n    $$init(onUpdate) {\n        this.$_doUpdate = onUpdate\n    },\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_doUpdate = null\n        this.length = 0\n    },\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    },\n\n    /**\n     * 解析 className\n     */\n    $$parse(className = '') {\n        this.length = 0 // 置空当前内容\n\n        className = className.trim()\n        className = className ? className.split(/\\s+/) : []\n\n        for (const item of className) {\n            this.push(item)\n        }\n\n        this.$_doUpdate()\n    },\n\n    /**\n     * 对外属性和方法\n     */\n    item(index) {\n        return this[index]\n    },\n\n    contains(className) {\n        if (typeof className !== 'string') return false\n\n        return this.indexOf(className) !== -1\n    },\n\n    add(...args) {\n        let isUpdate = false\n\n        for (let className of args) {\n            if (typeof className !== 'string') continue\n\n            className = className.trim()\n\n            if (className && this.indexOf(className) === -1) {\n                this.push(className)\n                isUpdate = true\n            }\n        }\n\n        if (isUpdate) this.$_doUpdate()\n    },\n\n    remove(...args) {\n        let isUpdate = false\n\n        for (let className of args) {\n            if (typeof className !== 'string') continue\n\n            className = className.trim()\n\n            if (!className) continue\n\n            const index = this.indexOf(className)\n            if (index >= 0) {\n                this.splice(index, 1)\n                isUpdate = true\n            }\n        }\n\n        if (isUpdate) this.$_doUpdate()\n    },\n\n    toggle(className, force) {\n        if (typeof className !== 'string') return false\n\n        className = className.trim()\n\n        if (!className) return false\n\n        const isNotContain = this.indexOf(className) === -1\n        let action = isNotContain ? 'add' : 'remove'\n        action = force === true ? 'add' : force === false ? 'remove' : action\n\n        if (action === 'add') {\n            this.add(className)\n        } else {\n            this.remove(className)\n        }\n\n        return force === true || force === false ? force : isNotContain\n    },\n\n    toString() {\n        return this.join(' ')\n    },\n})\n\nmodule.exports = ClassList\n","const styleList = require('./style-list')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\n/**\n * 解析样式串\n */\nfunction parse(styleText) {\n    const rules = {}\n\n    if (styleText) {\n        styleText = tool.decodeContent(styleText)\n        styleText = styleText.replace(/url\\([^)]+\\)/ig, all => all.replace(/;/ig, ':#||#:')) // 先处理值里面的分号\n        styleText.split(';').forEach(rule => {\n            rule = rule.trim()\n            if (!rule) return\n\n            const split = rule.indexOf(':')\n            if (split === -1) return\n\n            const name = tool.toCamel(rule.substr(0, split).trim())\n            rules[name] = rule.substr(split + 1).replace(/:#\\|\\|#:/ig, ';').trim()\n        })\n    }\n\n    return rules\n}\n\nclass Style {\n    constructor(onUpdate) {\n        this.$$init(onUpdate)\n    }\n\n    /**\n     * 创建实例\n     */\n    static $$create(onUpdate) {\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(onUpdate)\n                return instance\n            }\n        }\n\n        return new Style(onUpdate)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init(onUpdate) {\n        this.$_doUpdate = onUpdate || (() => {})\n        this.$_disableCheckUpdate = false // 是否禁止检查更新\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_doUpdate = null\n        this.$_disableCheckUpdate = false\n\n        styleList.forEach(name => {\n            this[`$_${name}`] = undefined\n        })\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 检查更新\n     */\n    $_checkUpdate() {\n        if (!this.$_disableCheckUpdate) {\n            this.$_doUpdate()\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get cssText() {\n        const joinText = styleList.filter(name => this[`$_${name}`]).map(name => `${tool.toDash(name)}:${this['$_' + name]}`).join(';').trim()\n        return joinText ? `${joinText};` : ''\n    }\n\n    set cssText(styleText) {\n        if (typeof styleText !== 'string') return\n\n        styleText = styleText.replace(/\"/g, '\\'')\n\n        // 解析样式\n        const rules = parse(styleText)\n\n        this.$_disableCheckUpdate = true // 将每条规则的设置合并为一次更新\n        for (const name of styleList) {\n            this[name] = rules[name]\n        }\n        this.$_disableCheckUpdate = false\n        this.$_checkUpdate()\n    }\n\n    getPropertyValue(name) {\n        if (typeof name !== 'string') return ''\n\n        name = tool.toCamel(name)\n        return this[name] || ''\n    }\n}\n\n/**\n * 设置各个属性的 getter、setter\n */\nconst properties = {}\nstyleList.forEach(name => {\n    properties[name] = {\n        get() {\n            return this[`$_${name}`] || ''\n        },\n        set(value) {\n            const config = cache.getConfig()\n            const oldValue = this[`$_${name}`]\n            value = value !== undefined ? '' + value : undefined\n\n            // 判断 value 是否需要删减\n            if (value && config.optimization.styleValueReduce && value.length > config.optimization.styleValueReduce) {\n                console.warn(`property \"${name}\" will be deleted, because it's greater than ${config.optimization.styleValueReduce}`)\n                value = undefined\n            }\n\n            this[`$_${name}`] = value\n            if (oldValue !== value) this.$_checkUpdate()\n        },\n    }\n})\nObject.defineProperties(Style.prototype, properties)\n\nmodule.exports = Style\n","const Pool = require('../util/pool')\nconst cache = require('../util/cache')\nconst tool = require('../util/tool')\n\nconst pool = new Pool()\n\nclass Attribute {\n    constructor(element, onUpdate) {\n        this.$$init(element, onUpdate)\n    }\n\n    /**\n     * 创建实例\n     */\n    static $$create(element, onUpdate) {\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(element, onUpdate)\n                return instance\n            }\n        }\n\n        return new Attribute(element, onUpdate)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init(element, onUpdate) {\n        this.$_element = element\n        this.$_doUpdate = onUpdate\n        this.$_map = {}\n        this.$_list = []\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_element = null\n        this.$_doUpdate = null\n        this.$_map = null\n        this.$_list = null\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 属性映射表\n     */\n    get map() {\n        return this.$_map\n    }\n\n    /**\n     * 属性列表，需要动态更新\n     */\n    get list() {\n        return this.$_list\n    }\n\n    /**\n     * 设置属性\n     */\n    set(name, value) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            map.id = value\n        } else if (name === 'class' || (element.tagName === 'WX-COMPONENT' && name === 'className')) {\n            element.className = value\n        } else if (name === 'style') {\n            element.style.cssText = value\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            element.dataset[datasetName] = value\n        } else {\n            const config = cache.getConfig()\n\n            // 判断 value 是否需要删减\n            if (typeof value === 'string' && config.optimization.attrValueReduce && value.length > config.optimization.attrValueReduce) {\n                console.warn(`property \"${name}\" will be deleted, because it's greater than ${config.optimization.attrValueReduce}`)\n                value = ''\n            }\n\n            map[name] = value\n\n            // canvas 如果有 node 对象，需要将 width/height 设置进去\n            if ((name === 'width' || name === 'height') && element.tagName === 'CANVAS' && element.$$node) {\n                element.$$node[name] = value\n            }\n\n            // 其他字段的设置需要触发父组件更新\n            this.$_doUpdate()\n        }\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 取属性\n     */\n    get(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            return map.id || ''\n        } if (name === 'class') {\n            return element.className\n        } else if (name === 'style') {\n            return element.style.cssText\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!element.$__dataset) return undefined\n            return element.dataset[datasetName]\n        } else {\n            return map[name]\n        }\n    }\n\n    /**\n     * 判断属性是否存在\n     */\n    has(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            return !!element.id\n        } else if (name === 'class') {\n            return !!element.className\n        } else if (name === 'style') {\n            return !!element.style.cssText\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!element.$__dataset) return false\n            return Object.prototype.hasOwnProperty.call(element.dataset, datasetName)\n        } else {\n            return Object.prototype.hasOwnProperty.call(map, name)\n        }\n    }\n\n    /**\n     * 删除属性\n     */\n    remove(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            element.id = ''\n        } else if (name === 'class' || name === 'style') {\n            this.set(name, '')\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (element.$__dataset) delete element.dataset[datasetName]\n        } else {\n            // 其他字段的设置需要触发父组件更新\n            delete map[name]\n            this.$_doUpdate()\n        }\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 更新属性列表\n     */\n    triggerUpdate() {\n        const map = this.$_map\n        const list = this.$_list\n\n        // 清空旧的列表\n        list.forEach(item => {\n            delete list[item.name]\n        })\n        delete list.class\n        delete list.style\n        list.length = 0\n\n        // 添加新列表\n        Object.keys(map).forEach(name => {\n            if (name !== 'id') {\n                const item = {name, value: map[name]}\n\n                list.push(item)\n                list[name] = item\n            }\n        })\n\n        const idValue = this.get('id')\n        const classValue = this.get('class')\n        const styleValue = this.get('style')\n        if (idValue) {\n            const item = {name: 'id', value: idValue}\n            list.push(item)\n            list.id = item\n        }\n        if (classValue) {\n            const item = {name: 'class', value: classValue}\n            list.push(item)\n            list.class = item\n        }\n        if (styleValue) {\n            const item = {name: 'style', value: styleValue}\n            list.push(item)\n            list.style = item\n        }\n    }\n}\n\nmodule.exports = Attribute\n","const Node = require('./node')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nclass TextNode extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.textMultiplexing) {\n            // 复用 text 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new TextNode(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'text'\n\n        super.$$init(options, tree)\n\n        this.$_content = options.content || ''\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_content = ''\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.textMultiplexing) {\n            // 复用 text 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        if (this.parentNode) this.parentNode.$$trigger('$$childNodesUpdate')\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$_nodeId,\n            pageId: this.$_pageId,\n            type: this.$_type,\n            content: this.$_content,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeName() {\n        return '#text'\n    }\n\n    get nodeType() {\n        return Node.TEXT_NODE\n    }\n\n    get nodeValue() {\n        return this.textContent\n    }\n\n    set nodeValue(value) {\n        this.textContent = value\n    }\n\n    get textContent() {\n        return this.$_content\n    }\n\n    set textContent(value) {\n        value += ''\n\n        this.$_content = value\n        this.$_triggerParentUpdate()\n    }\n\n    get data() {\n        return this.textContent\n    }\n\n    set data(value) {\n        this.textContent = value\n    }\n\n    cloneNode() {\n        return this.ownerDocument.$$createTextNode({\n            content: this.$_content,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n}\n\nmodule.exports = TextNode\n","const Node = require('./node')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nclass Comment extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.commentMultiplexing) {\n            // 复用 comment 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Comment(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'comment'\n\n        super.$$init(options, tree)\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.commentMultiplexing) {\n            // 复用 comment 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$_nodeId,\n            pageId: this.$_pageId,\n            type: this.$_type,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeName() {\n        return '#comment'\n    }\n\n    get nodeType() {\n        return Node.COMMENT_NODE\n    }\n\n    cloneNode() {\n        return this.ownerDocument.$$createComment({\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n}\n\nmodule.exports = Comment\n","const tool = require('./util/tool')\nconst cache = require('./util/cache')\nconst Window = require('./window')\nconst Document = require('./document')\nconst EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\n\nmodule.exports = {\n    createPage(route, config) {\n        if (config) cache.setConfig(config)\n\n        const pageId = `p-${tool.getId()}-/${route}`\n        const window = new Window(pageId)\n        const nodeIdMap = {}\n        const document = new Document(pageId, nodeIdMap)\n\n        cache.init(pageId, {\n            window,\n            document,\n            nodeIdMap,\n        })\n\n        return {\n            pageId,\n            window,\n            document,\n        }\n    },\n\n    destroyPage(pageId) {\n        cache.destroy(pageId)\n    },\n\n    // 开放给 miniprogram-element\n    $$adapter: {\n        cache,\n        EventTarget,\n        Event,\n        tool,\n    },\n}\n","const Document = require('./document')\nconst EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\nconst OriginalCustomEvent = require('./event/custom-event')\nconst Location = require('./bom/location')\nconst Navigator = require('./bom/navigator')\nconst Screen = require('./bom/screen')\nconst History = require('./bom/history')\nconst Miniprogram = require('./bom/miniprogram')\nconst {SessionStorage, LocalStorage} = require('./bom/storage')\nconst WorkerImpl = require('./bom/worker')\nconst Performance = require('./bom/performance')\nconst OriginalXMLHttpRequest = require('./bom/xml-http-request')\nconst Node = require('./node/node')\nconst Element = require('./node/element')\nconst TextNode = require('./node/text-node')\nconst Comment = require('./node/comment')\nconst ClassList = require('./node/class-list')\nconst Style = require('./node/style')\nconst Attribute = require('./node/attribute')\nconst cache = require('./util/cache')\nconst tool = require('./util/tool')\n\nlet lastRafTime = 0\nconst WINDOW_PROTOTYPE_MAP = {\n    location: Location.prototype,\n    navigator: Navigator.prototype,\n    performance: Performance.prototype,\n    screen: Screen.prototype,\n    history: History.prototype,\n    localStorage: LocalStorage.prototype,\n    sessionStorage: SessionStorage.prototype,\n    XMLHttpRequest: OriginalXMLHttpRequest.prototype,\n    event: Event.prototype,\n}\nconst ELEMENT_PROTOTYPE_MAP = {\n    attribute: Attribute.prototype,\n    classList: ClassList.prototype,\n    style: Style.prototype,\n}\nconst subscribeMap = {}\nconst globalObject = {}\nfunction noop() {}\n\nclass Window extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        const config = cache.getConfig()\n        const timeOrigin = +new Date()\n\n        this.$_pageId = pageId\n\n        this.$_outerHeight = 0\n        this.$_outerWidth = 0\n        this.$_innerHeight = 0\n        this.$_innerWidth = 0\n\n        this.$_location = new Location(pageId)\n        this.$_navigator = new Navigator()\n        this.$_screen = new Screen()\n        this.$_history = new History(this.$_location)\n        this.$_miniprogram = new Miniprogram(pageId)\n        this.$_localStorage = new LocalStorage(pageId)\n        this.$_sessionStorage = new SessionStorage(pageId)\n        this.$_performance = new Performance(timeOrigin)\n\n        this.$_nowFetchingWebviewInfoPromise = null // 正在拉取 webview 端信息的 promise 实例\n\n        this.$_fetchDeviceInfo()\n        this.$_initInnerEvent()\n\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.onhashchange = null\n\n        // HTMLElement 构造器\n        this.$_elementConstructor = function HTMLElement(...args) {\n            return Element.$$create(...args)\n        }\n\n        // CustomEvent 构造器\n        this.$_customEventConstructor = class CustomEvent extends OriginalCustomEvent {\n            constructor(name = '', options = {}) {\n                options.timeStamp = +new Date() - timeOrigin\n                super(name, options)\n            }\n        }\n\n        // XMLHttpRequest 构造器\n        this.$_xmlHttpRequestConstructor = class XMLHttpRequest extends OriginalXMLHttpRequest {constructor() { super(pageId) }}\n\n        // Worker/SharedWorker 构造器\n        if (config.generate && config.generate.worker) {\n            this.$_workerConstructor = class Worker extends WorkerImpl.Worker {constructor(url) { super(url, pageId) }}\n            this.$_sharedWorkerConstructor = class SharedWorker extends WorkerImpl.SharedWorker {constructor(url) { super(url, pageId) }}\n        }\n\n        // react 环境兼容\n        this.HTMLIFrameElement = function() {}\n    }\n\n    /**\n     * 初始化内部事件\n     */\n    $_initInnerEvent() {\n        // 监听 location 的事件\n        this.$_location.addEventListener('hashchange', ({oldURL, newURL}) => {\n            this.$$trigger('hashchange', {\n                event: new Event({\n                    name: 'hashchange',\n                    target: this,\n                    eventPhase: Event.AT_TARGET,\n                    $$extra: {\n                        oldURL,\n                        newURL,\n                    },\n                }),\n                currentTarget: this,\n            })\n        })\n\n        // 监听 history 的事件\n        this.$_history.addEventListener('popstate', ({state}) => {\n            this.$$trigger('popstate', {\n                event: new Event({\n                    name: 'popstate',\n                    target: this,\n                    eventPhase: Event.AT_TARGET,\n                    $$extra: {state},\n                }),\n                currentTarget: this,\n            })\n        })\n\n        // 监听滚动事件\n        this.addEventListener('scroll', () => {\n            const document = this.document\n            // 记录最近一次滚动事件触发的时间戳\n            if (document) document.documentElement.$$scrollTimeStamp = +new Date()\n        })\n    }\n\n    /**\n     * 拉取设备参数\n     */\n    $_fetchDeviceInfo() {\n        try {\n            const info = wx.getSystemInfoSync()\n\n            this.$_outerHeight = info.screenHeight\n            this.$_outerWidth = info.screenWidth\n            this.$_innerHeight = info.windowHeight\n            this.$_innerWidth = info.windowWidth\n\n            this.$_screen.$$reset(info)\n            this.$_navigator.$$reset(info)\n        } catch (err) {\n            // ignore\n        }\n    }\n\n    /**\n     * 拉取处理切面必要的信息\n     */\n    $_getAspectInfo(descriptor) {\n        if (!descriptor || typeof descriptor !== 'string') return\n\n        descriptor = descriptor.split('.')\n        const main = descriptor[0]\n        const sub = descriptor[1]\n        let method = descriptor[1]\n        let type = descriptor[2]\n        let prototype\n\n        // 找出对象原型\n        if (main === 'window') {\n            if (WINDOW_PROTOTYPE_MAP[sub]) {\n                prototype = WINDOW_PROTOTYPE_MAP[sub]\n                method = type\n                type = descriptor[3]\n            } else {\n                prototype = Window.prototype\n            }\n        } else if (main === 'document') {\n            prototype = Document.prototype\n        } else if (main === 'element') {\n            if (ELEMENT_PROTOTYPE_MAP[sub]) {\n                prototype = ELEMENT_PROTOTYPE_MAP[sub]\n                method = type\n                type = descriptor[3]\n            } else {\n                prototype = Element.prototype\n            }\n        } else if (main === 'textNode') {\n            prototype = TextNode.prototype\n        } else if (main === 'comment') {\n            prototype = Comment.prototype\n        }\n\n        return {prototype, method, type}\n    }\n\n    /**\n     * 暴露给小程序用的对象\n     */\n    get $$miniprogram() {\n        return this.$_miniprogram\n    }\n\n    /**\n     * 获取全局共享对象\n     */\n    get $$global() {\n        return globalObject\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        const pageId = this.$_pageId\n\n        WorkerImpl.destroy(pageId)\n        Object.keys(subscribeMap).forEach(name => {\n            const handlersMap = subscribeMap[name]\n            if (handlersMap[pageId]) handlersMap[pageId] = null\n        })\n    }\n\n    /**\n     * 小程序端的 getComputedStyle 实现\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.fields.html\n     */\n    $$getComputedStyle(dom, computedStyle = []) {\n        tool.flushThrottleCache() // 先清空 setData\n        return new Promise((resolve, reject) => {\n            if (dom.tagName === 'BODY') {\n                this.$$createSelectorQuery().select('.miniprogram-root').fields({computedStyle}, res => (res ? resolve(res) : reject())).exec()\n            } else {\n                this.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${dom.$$nodeId}`).fields({computedStyle}, res => (res ? resolve(res) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 强制清空 setData 缓存\n     */\n    $$forceRender() {\n        tool.flushThrottleCache()\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, options = {}) {\n        if (eventName === 'error' && typeof options.event === 'string') {\n            // 此处触发自 App.onError 钩子\n            const errStack = options.event\n            const errLines = errStack.split('\\n')\n            let message = ''\n            for (let i = 0, len = errLines.length; i < len; i++) {\n                const line = errLines[i]\n                if (line.trim().indexOf('at') !== 0) {\n                    message += (line + '\\n')\n                } else {\n                    break\n                }\n            }\n\n            const error = new Error(message)\n            error.stack = errStack\n            options.event = new this.$_customEventConstructor('error', {\n                target: this,\n                $$extra: {\n                    message,\n                    filename: '',\n                    lineno: 0,\n                    colno: 0,\n                    error,\n                },\n            })\n            options.args = [message, error]\n\n            // window.onerror 比较特殊，需要调整参数\n            if (typeof this.onerror === 'function' && !this.onerror.$$isOfficial) {\n                const oldOnError = this.onerror\n                this.onerror = (event, message, error) => {\n                    oldOnError.call(this, message, '', 0, 0, error)\n                }\n                this.onerror.$$isOfficial = true // 标记为官方封装的方法\n            }\n        }\n\n        super.$$trigger(eventName, options)\n    }\n\n    /**\n     * 获取原型\n     */\n    $$getPrototype(descriptor) {\n        if (!descriptor || typeof descriptor !== 'string') return\n\n        descriptor = descriptor.split('.')\n        const main = descriptor[0]\n        const sub = descriptor[1]\n\n        if (main === 'window') {\n            if (WINDOW_PROTOTYPE_MAP[sub]) {\n                return WINDOW_PROTOTYPE_MAP[sub]\n            } else if (!sub) {\n                return Window.prototype\n            }\n        } else if (main === 'document') {\n            if (!sub) {\n                return Document.prototype\n            }\n        } else if (main === 'element') {\n            if (ELEMENT_PROTOTYPE_MAP[sub]) {\n                return ELEMENT_PROTOTYPE_MAP[sub]\n            } else if (!sub) {\n                return Element.prototype\n            }\n        } else if (main === 'textNode') {\n            if (!sub) {\n                return TextNode.prototype\n            }\n        } else if (main === 'comment') {\n            if (!sub) {\n                return Comment.prototype\n            }\n        }\n    }\n\n    /**\n     * 扩展 dom/bom 对象\n     */\n    $$extend(descriptor, options) {\n        if (!descriptor || !options || typeof descriptor !== 'string' || typeof options !== 'object') return\n\n        const prototype = this.$$getPrototype(descriptor)\n        const keys = Object.keys(options)\n\n        if (prototype) keys.forEach(key => prototype[key] = options[key])\n    }\n\n    /**\n     * 对 dom/bom 对象方法追加切面方法\n     */\n    $$addAspect(descriptor, func) {\n        if (!descriptor || !func || typeof descriptor !== 'string' || typeof func !== 'function') return\n\n        const {prototype, method, type} = this.$_getAspectInfo(descriptor)\n\n        // 处理切面\n        if (prototype && method && type) {\n            const methodInPrototype = prototype[method]\n            if (typeof methodInPrototype !== 'function') return\n\n            // 重写原始方法\n            if (!methodInPrototype.$$isHook) {\n                prototype[method] = function(...args) {\n                    const beforeFuncs = prototype[method].$$before || []\n                    const afterFuncs = prototype[method].$$after || []\n\n                    if (beforeFuncs.length) {\n                        for (const beforeFunc of beforeFuncs) {\n                            const isStop = beforeFunc.apply(this, args)\n                            if (isStop) return\n                        }\n                    }\n\n                    const res = methodInPrototype.apply(this, args)\n\n                    if (afterFuncs.length) {\n                        for (const afterFunc of afterFuncs) {\n                            afterFunc.call(this, res)\n                        }\n                    }\n\n                    return res\n                }\n                prototype[method].$$isHook = true\n                prototype[method].$$originalMethod = methodInPrototype\n            }\n\n            // 追加切面方法\n            if (type === 'before') {\n                prototype[method].$$before = prototype[method].$$before || []\n                prototype[method].$$before.push(func)\n            } else if (type === 'after') {\n                prototype[method].$$after = prototype[method].$$after || []\n                prototype[method].$$after.push(func)\n            }\n        }\n    }\n\n    /**\n     * 删除对 dom/bom 对象方法追加前置/后置处理\n     */\n    $$removeAspect(descriptor, func) {\n        if (!descriptor || !func || typeof descriptor !== 'string' || typeof func !== 'function') return\n\n        const {prototype, method, type} = this.$_getAspectInfo(descriptor)\n\n        // 处理切面\n        if (prototype && method && type) {\n            const methodInPrototype = prototype[method]\n            if (typeof methodInPrototype !== 'function' || !methodInPrototype.$$isHook) return\n\n            // 移除切面方法\n            if (type === 'before' && methodInPrototype.$$before) {\n                methodInPrototype.$$before.splice(methodInPrototype.$$before.indexOf(func), 1)\n            } else if (type === 'after' && methodInPrototype.$$after) {\n                methodInPrototype.$$after.splice(methodInPrototype.$$after.indexOf(func), 1)\n            }\n\n            if ((!methodInPrototype.$$before || !methodInPrototype.$$before.length) && (!methodInPrototype.$$after || !methodInPrototype.$$after.length)) {\n                prototype[method] = methodInPrototype.$$originalMethod\n            }\n        }\n    }\n\n    /**\n     * 订阅广播事件\n     */\n    $$subscribe(name, handler) {\n        if (typeof name !== 'string' || typeof handler !== 'function') return\n\n        const pageId = this.$_pageId\n        subscribeMap[name] = subscribeMap[name] || {}\n        subscribeMap[name][pageId] = subscribeMap[name][pageId] || []\n        subscribeMap[name][pageId].push(handler)\n    }\n\n    /**\n     * 取消订阅广播事件\n     */\n    $$unsubscribe(name, handler) {\n        const pageId = this.$_pageId\n\n        if (typeof name !== 'string' || !subscribeMap[name] || !subscribeMap[name][pageId]) return\n\n        const handlers = subscribeMap[name][pageId]\n        if (!handler) {\n            // 取消所有 handler 的订阅\n            handlers.length = 0\n        } else if (typeof handler === 'function') {\n            const index = handlers.indexOf(handler)\n            if (index !== -1) handlers.splice(index, 1)\n        }\n    }\n\n    /**\n     * 发布广播事件\n     */\n    $$publish(name, data) {\n        if (typeof name !== 'string' || !subscribeMap[name]) return\n\n        Object.keys(subscribeMap[name]).forEach(pageId => {\n            const handlers = subscribeMap[name][pageId]\n            if (handlers && handlers.length) {\n                handlers.forEach(handler => {\n                    if (typeof handler !== 'function') return\n\n                    try {\n                        handler.call(null, data)\n                    } catch (err) {\n                        console.error(err)\n                    }\n                })\n            }\n        })\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get document() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get location() {\n        return this.$_location\n    }\n\n    set location(href) {\n        this.$_location.href = href\n    }\n\n    get navigator() {\n        return this.$_navigator\n    }\n\n    get CustomEvent() {\n        return this.$_customEventConstructor\n    }\n\n    get Event() {\n        return Event\n    }\n\n    get self() {\n        return this\n    }\n\n    get localStorage() {\n        return this.$_localStorage\n    }\n\n    get sessionStorage() {\n        return this.$_sessionStorage\n    }\n\n    get screen() {\n        return this.$_screen\n    }\n\n    get history() {\n        return this.$_history\n    }\n\n    get outerHeight() {\n        return this.$_outerHeight\n    }\n\n    get outerWidth() {\n        return this.$_outerWidth\n    }\n\n    get innerHeight() {\n        return this.$_innerHeight\n    }\n\n    get innerWidth() {\n        return this.$_innerWidth\n    }\n\n    get Image() {\n        return this.document ? this.document.$$imageConstructor : noop\n    }\n\n    get setTimeout() {\n        return setTimeout.bind(null)\n    }\n\n    get clearTimeout() {\n        return clearTimeout.bind(null)\n    }\n\n    get setInterval() {\n        return setInterval.bind(null)\n    }\n\n    get clearInterval() {\n        return clearInterval.bind(null)\n    }\n\n    get HTMLElement() {\n        return this.$_elementConstructor\n    }\n\n    get Element() {\n        return Element\n    }\n\n    get Node() {\n        return Node\n    }\n\n    get RegExp() {\n        return RegExp\n    }\n\n    get Math() {\n        return Math\n    }\n\n    get Number() {\n        return Number\n    }\n\n    get Boolean() {\n        return Boolean\n    }\n\n    get String() {\n        return String\n    }\n\n    get Date() {\n        return Date\n    }\n\n    get Symbol() {\n        return Symbol\n    }\n\n    get parseInt() {\n        return parseInt\n    }\n\n    get parseFloat() {\n        return parseFloat\n    }\n\n    get console() {\n        return console\n    }\n\n    get performance() {\n        return this.$_performance\n    }\n\n    get SVGElement() {\n        // 不作任何实现，只作兼容使用\n        console.warn('window.SVGElement is not supported')\n        return function() {}\n    }\n\n    get XMLHttpRequest() {\n        return this.$_xmlHttpRequestConstructor\n    }\n\n    get Worker() {\n        return this.$_workerConstructor\n    }\n\n    get SharedWorker() {\n        return this.$_sharedWorkerConstructor\n    }\n\n    get devicePixelRatio() {\n        return wx.getSystemInfoSync().pixelRatio\n    }\n\n    open(url) {\n        // 不支持 windowName 和 windowFeatures\n        this.location.$$open(url)\n    }\n\n    close() {\n        wx.navigateBack({\n            delta: 1,\n        })\n    }\n\n    getComputedStyle() {\n        // 不作任何实现，只作兼容使用\n        console.warn('window.getComputedStyle is not supported, please use window.$$getComputedStyle instead of it')\n        return {\n            // vue transition 组件使用\n            transitionDelay: '',\n            transitionDuration: '',\n            animationDelay: '',\n            animationDuration: '',\n        }\n    }\n\n    requestAnimationFrame(callback) {\n        if (typeof callback !== 'function') return\n\n        const now = new Date()\n        const nextRafTime = Math.max(lastRafTime + 16, now)\n        return setTimeout(() => {\n            callback(nextRafTime)\n            lastRafTime = nextRafTime\n        }, nextRafTime - now)\n    }\n\n    cancelAnimationFrame(timeId) {\n        return clearTimeout(timeId)\n    }\n\n    // 引入 polyfill 实现可能会引发内存泄漏\n    setImmediate(callback, ...args) {\n        if (typeof callback !== 'function') return\n        return setTimeout(callback, 0, ...args)\n    }\n\n    // 引入 polyfill 实现可能会引发内存泄漏\n    clearImmediate(timeId) {\n        return clearTimeout(timeId)\n    }\n}\n\nmodule.exports = Window\n","const QuerySelector = require('./query-selector')\nconst tool = require('../util/tool')\n\n/**\n * 遍历 dom 树，收集类和标签对应的节点列表\n */\nfunction walkDomTree(node, cache) {\n    const tagMap = cache.tagMap = cache.tagMap || {}\n    const classMap = cache.classMap = cache.classMap || {}\n    const {tagName, classList} = node\n\n    // 标签\n    tagMap[tagName] = tagMap[tagName] || []\n    tagMap[tagName].push(node)\n\n    // 类\n    for (const className of classList) {\n        classMap[className] = classMap[className] || []\n        classMap[className].push(node)\n    }\n\n    const children = node.children || []\n\n    for (const child of children) {\n        // 递归遍历\n        walkDomTree(child, cache)\n    }\n}\n\nclass Tree {\n    constructor(pageId, root, nodeIdMap, document) {\n        this.pageId = pageId\n        this.root = document.$$createElement(root, this)\n        this.nodeIdMap = nodeIdMap\n        this.idMap = {}\n        this.document = document\n\n        this.querySelector = new QuerySelector()\n        if (nodeIdMap) nodeIdMap[root.nodeId] = this.root\n\n        this.walk(root, this.root)\n    }\n\n    /**\n     * 遍历 ast\n     */\n    walk(ast, parentNode) {\n        const children = ast.children\n        const idMap = this.idMap\n        const nodeIdMap = this.nodeIdMap\n        const document = this.document\n\n        if (!children || !children.length) return\n\n        // 遍历子节点\n        for (const child of children) {\n            let childNode\n\n            if (child.type === 'element') {\n                childNode = document.$$createElement(child, this)\n            } else if (child.type === 'text') {\n                childNode = document.$$createTextNode(child, this)\n            }\n\n            // 处理 id 缓存\n            const id = childNode.id\n            if (id && !idMap[id]) {\n                idMap[id] = childNode\n            }\n\n            // 处理 nodeId 缓存\n            if (nodeIdMap) nodeIdMap[child.nodeId] = childNode\n\n            // 插入子节点\n            parentNode.appendChild(childNode)\n\n            // 遍历子节点的 ast\n            this.walk(child, childNode)\n        }\n    }\n\n    /**\n     * 更新 idMap\n     */\n    updateIdMap(id, node) {\n        this.idMap[id] = node\n    }\n\n    /**\n     * 根据 id 获取节点\n     */\n    getById(id) {\n        return this.idMap[id]\n    }\n\n    /**\n     * 根据标签名获取节点列表\n     */\n    getByTagName(tagName, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        if (tool.checkIsWxComponent(tagName.toLowerCase(), false)) {\n            // 内置组件\n            tagName = tagName.toLowerCase().slice(3)\n            return (cache.tagMap['WX-COMPONENT'] || []).filter(findNode => findNode.behavior === tagName)\n        }\n\n        return cache.tagMap[tagName.toUpperCase()] || []\n    }\n\n    /**\n     * 根据类名获取节点列表\n     */\n    getByClassName(className, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return cache.classMap[className] || []\n    }\n\n    /**\n     * 查询符合条件的节点\n     */\n    query(selector, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return this.querySelector.exec(selector, {\n            idMap: this.idMap,\n            tagMap: cache.tagMap,\n            classMap: cache.classMap,\n        })\n    }\n}\n\nmodule.exports = Tree\n","/**\n * 感谢 sizzle：https://github.com/jquery/sizzle/tree/master\n */\nconst tool = require('../util/tool')\n\nconst PSEUDO_CHECK = {\n    checked: node => node.checked || node.selected,\n    disabled: node => node.disabled,\n    enabled: node => !node.disabled,\n    'first-child': node => node.parentNode.children[0] === node,\n    'last-child': node => node.parentNode.children[node.parentNode.children.length - 1] === node,\n    'nth-child': (node, param) => {\n        const children = node.parentNode.children\n        const {a, b} = param\n        const index = children.indexOf(node) + 1\n\n        if (a) {\n            return (index - b) % a === 0\n        } else {\n            return index === b\n        }\n    },\n    'nth-of-type': (node, param, rule) => {\n        const ruleCopy = {...rule}\n        ruleCopy.pseudo = undefined\n        // 除了nth-of-type规则之外 其他全部规则匹配上的兄弟元素\n        // ruleCopy.pseudo = undefined 保证这里不会调用循环\n        const children = Array.from(node.parentNode.children).filter(child => checkHit(child, ruleCopy))\n        const index = children.indexOf(node) + 1\n        if (param === 'even') {\n            return index % 2 === 0\n        } else if (param === 'odd') {\n            return index % 2 === 1\n        }\n        // 处理计算表达式 an+b\n        else if (/^-?\\d+n((\\+|\\-)\\d+)?$/.test(param)) {\n            const getCalc = (n) => {\n                // 完整数学表达式\n                const expression = param.replace('n', `*${n}`)\n                // 计算数学表达式的值\n                return tool.calculate(expression)\n            }\n            if (param[0] === '-') {\n                let res = getCalc(0)\n                for (let i = 1; res > 0; i++) {\n                    if (res === index) {\n                        return true\n                    }\n                    res = getCalc(i)\n                }\n            } else {\n                let res = getCalc(0)\n                for (let i = 1; res <= children.length; i++) {\n                    if (res === index) {\n                        return true\n                    }\n                    res = getCalc(i)\n                }\n            }\n            return false\n        }\n        // 处理全数字\n        else if (/^[\\d]+$/.test(param)) {\n            return index === Number(param)\n        } else {\n            return false\n        }\n    }\n}\n\nconst ATTR_CHECK = {\n    '=': (nodeVal, val) => nodeVal === val,\n    '~=': (nodeVal, val) => nodeVal.split(/\\s+/).indexOf(val) !== -1,\n    '|=': (nodeVal, val) => nodeVal === val || nodeVal.indexOf(val + '-') === 0,\n    '^=': (nodeVal, val) => nodeVal.indexOf(val) === 0,\n    '$=': (nodeVal, val) => nodeVal.substr(nodeVal.length - val.length) === val,\n    '*=': (nodeVal, val) => nodeVal.indexOf(val) !== -1,\n}\n\nconst KINSHIP_CHECK = {\n    ' ': (node, kinshipRule) => {\n        let kinshipNode = node.parentNode\n\n        while (kinshipNode) {\n            if (checkHit(kinshipNode, kinshipRule)) return kinshipNode\n\n            kinshipNode = kinshipNode.parentNode\n        }\n\n        return null\n    },\n    '>': (node, kinshipRule) => {\n        const kinshipNode = node.parentNode\n\n        return checkHit(kinshipNode, kinshipRule) ? kinshipNode : null\n    },\n    '+': (node, kinshipRule) => {\n        const children = node.parentNode\n\n        for (let i = 0, len = children.length; i < len; i++) {\n            const child = children[i]\n\n            if (child === node) {\n                const kinshipNode = children[i - 1]\n\n                return checkHit(kinshipNode, kinshipRule) ? kinshipNode : null\n            }\n        }\n\n        return null\n    },\n    '~': (node, kinshipRule) => {\n        const children = node.parentNode\n        let foundCurrent = false\n\n        for (let i = children.length - 1; i >= 0; i--) {\n            const child = children[i]\n\n            if (foundCurrent && checkHit(child, kinshipRule)) return child\n            if (child === node) foundCurrent = true\n        }\n\n        return null\n    },\n}\n\n/**\n * 检查节点是否符合规则\n */\nfunction checkHit(node, rule) {\n    if (!node) return false\n\n    const {\n        id, class: classList, tag, pseudo, attr\n    } = rule\n\n    // id 选择器\n    if (id) {\n        if (node.id !== id) return false\n    }\n\n    // 类选择器\n    if (classList && classList.length) {\n        for (const className of classList) {\n            if (!node.classList || !node.classList.contains(className)) return false\n        }\n    }\n\n    // 标签选择器\n    if (tag && tag !== '*') {\n        if (tool.checkIsWxComponent(tag.toLowerCase(), false)) {\n            // 内置组件\n            if (node.tagName !== 'WX-COMPONENT' || node.behavior !== tag.slice(3).toLowerCase()) return false\n        } else if (node.tagName !== tag.toUpperCase()) {\n            return false\n        }\n    }\n\n    // 伪类选择器\n    if (pseudo) {\n        for (const {name, param} of pseudo) {\n            const checkPseudo = PSEUDO_CHECK[name]\n            if (!checkPseudo || !checkPseudo(node, param, rule)) return false\n        }\n    }\n\n    // 属性选择器\n    if (attr) {\n        for (const {name, opr, val} of attr) {\n            const nodeVal = node[name] || node.getAttribute(name)\n\n            if (nodeVal === undefined || nodeVal === null) return false\n            if (opr) {\n                // 存在操作符\n                const checkAttr = ATTR_CHECK[opr]\n                if (!checkAttr || !checkAttr(nodeVal, val)) return false\n            }\n        }\n    }\n\n    return true\n}\n\n/**\n * 数组去重\n */\nfunction unique(list) {\n    for (let i = 0; i < list.length; i++) {\n        const a = list[i]\n\n        for (let j = i + 1; j < list.length; j++) {\n            const b = list[j]\n            if (a === b) list.splice(j, 1)\n        }\n    }\n\n    return list\n}\n\n/**\n * 将节点按照文档顺序排列\n */\nfunction sortNodes(list) {\n    list.sort((a, b) => {\n        const aList = [a]\n        const bList = [b]\n        let aParent = a.parentNode\n        let bParent = b.parentNode\n\n        if (aParent === bParent) {\n            // 检查顺序\n            const children = aParent.children\n            return children.indexOf(a) - children.indexOf(b)\n        }\n\n        // a 到根的列表\n        while (aParent) {\n            aList.unshift(aParent)\n            aParent = aParent.parentNode\n        }\n\n        // b 到根的列表\n        while (bParent) {\n            bList.unshift(bParent)\n            bParent = bParent.parentNode\n        }\n\n        // 找到最近共同祖先\n        let i = 0\n        while (aList[i] === bList[i]) i++\n\n        // 检查顺序\n        const children = aList[i - 1].children\n        return children.indexOf(aList[i]) - children.indexOf(bList[i])\n    })\n\n    return list\n}\n\nclass QuerySelector {\n    constructor() {\n        this.parseCache = {} // 解析查询串缓存\n        this.parseCacheKeys = []\n\n        const idReg = '#([\\\\\\\\\\\\w-]+)' // id 选择器\n        const tagReg = '\\\\*|wx-component|[a-zA-Z-]+\\\\w*' // 标签选择器\n        const classReg = '\\\\.([\\\\\\\\\\\\w-]+)' // 类选择器\n        const pseudoReg = ':([\\\\\\\\\\\\w-]+)(?:\\\\(([^\\\\(\\\\)]*|(?:\\\\([^\\\\)]+\\\\)|[^\\\\(\\\\)]*)+)\\\\))?' // 伪类选择器\n        const attrReg = '\\\\[\\\\s*([\\\\\\\\\\\\w-]+)(?:([*^$|~!]?=)[\\'\"]?([^\\'\"\\\\[]+)[\\'\"]?)?\\\\s*\\\\]' // 属性选择器\n        const kinshipReg = '\\\\s*([>\\\\s+~](?!=))\\\\s*' // 亲属选择器\n        this.regexp = new RegExp(`^(?:(${idReg})|(${tagReg})|(${classReg})|(${pseudoReg})|(${attrReg})|(${kinshipReg}))`)\n    }\n\n    /**\n     * 存入解析查询串缓存\n     */\n    setParseCache(key, value) {\n        if (this.parseCacheKeys.length > 50) {\n            delete this.parseCache[this.parseCacheKeys.shift()]\n        }\n\n        this.parseCacheKeys.push(key)\n        this.parseCache[key] = value\n\n        return value\n    }\n\n    /**\n     * 获取解析查询串缓存\n     */\n    getParseCache(key) {\n        return this.parseCache[key]\n    }\n\n    /**\n     * 解析查询串\n     */\n    parse(selector) {\n        const segment = [{tag: '*'}]\n        const regexp = this.regexp\n\n        const onProcess = (all, idAll, id, tagAll, classAll, className, pseudoAll, pseudoName, pseudoParam, attrAll, attrName, attrOpr, attrVal, kinshipAll, kinship) => {\n            if (idAll) {\n                // id 选择器\n                segment[segment.length - 1].id = id\n            } else if (tagAll) {\n                // 标签选择器\n                segment[segment.length - 1].tag = tagAll.toLowerCase()\n            } else if (classAll) {\n                // 类选择器\n                const currentRule = segment[segment.length - 1]\n                currentRule.class = currentRule.class || []\n\n                currentRule.class.push(className)\n            } else if (pseudoAll) {\n                // 伪类选择器\n                const currentRule = segment[segment.length - 1]\n                currentRule.pseudo = currentRule.pseudo || []\n                pseudoName = pseudoName.toLowerCase()\n\n                const pseudo = {name: pseudoName}\n\n                if (pseudoParam) pseudoParam = pseudoParam.trim()\n                if (pseudoName === 'nth-child') {\n                    // 处理 nth-child 伪类，参数统一处理成 an + b 的格式\n                    pseudoParam = pseudoParam.replace(/\\s+/g, '')\n\n                    if (pseudoParam === 'even') {\n                        // 偶数个\n                        pseudoParam = {a: 2, b: 2}\n                    } else if (pseudoParam === 'odd') {\n                        // 奇数个\n                        pseudoParam = {a: 2, b: 1}\n                    } else if (pseudoParam) {\n                        // 其他表达式\n                        const nthParsed = pseudoParam.match(/^(?:(\\d+)|(\\d*)?n([+-]\\d+)?)$/)\n\n                        if (!nthParsed) {\n                            // 解析失败\n                            pseudoParam = {a: 0, b: 1}\n                        } else if (nthParsed[1]) {\n                            // 纯数字\n                            pseudoParam = {a: 0, b: +nthParsed[1]}\n                        } else {\n                            // 表达式\n                            pseudoParam = {\n                                a: nthParsed[2] ? +nthParsed[2] : 1,\n                                b: nthParsed[3] ? +nthParsed[3] : 0,\n                            }\n                        }\n                    } else {\n                        // 默认取第一个\n                        pseudoParam = {a: 0, b: 1}\n                    }\n                }\n                if (pseudoParam) pseudo.param = pseudoParam\n\n                currentRule.pseudo.push(pseudo)\n            } else if (attrAll) {\n                // 属性选择器\n                const currentRule = segment[segment.length - 1]\n\n                currentRule.attr = currentRule.attr || []\n                currentRule.attr.push({\n                    name: attrName,\n                    opr: attrOpr,\n                    val: attrVal\n                })\n            } else if (kinshipAll) {\n                // 亲属选择器\n                segment[segment.length - 1].kinship = kinship\n                segment.push({tag: '*'}) // 插入新规则\n            }\n\n            return ''\n        }\n\n        // 逐个选择器解析\n        let lastParse\n        selector = selector.replace(regexp, onProcess)\n\n        while (lastParse !== selector) {\n            lastParse = selector\n            selector = selector.replace(regexp, onProcess)\n        }\n\n        return selector ? '' : segment\n    }\n\n    /**\n     * 查询符合条件的节点\n     */\n    exec(selector, extra) {\n        selector = selector.trim().replace(/\\s+/g, ' ').replace(/\\s*(,|[>\\s+~](?!=)|[*^$|~!]?=)\\s*/g, '$1')\n        const {idMap, tagMap, classMap} = extra\n\n        // 查询缓存\n        let segment = this.getParseCache(selector)\n\n        // 无缓存，进行解析\n        if (!segment) {\n            segment = this.parse(selector)\n\n            // 无法正常解析\n            if (!segment) return []\n\n            this.setParseCache(selector, segment)\n        }\n\n        // 无解析结果\n        if (!segment[0]) return []\n\n        // 执行解析结果\n        const lastRule = segment[segment.length - 1] // 从右往左\n        const {id, class: classList, tag} = lastRule\n        let hitNodes = []\n\n        // 寻找可能符合要求的节点\n        if (id) {\n            // id 选择器\n            const node = idMap[id]\n            hitNodes = node ? [node] : []\n        } else if (classList && classList.length) {\n            // 类选择器\n            for (const className of classList) {\n                const classNodes = classMap[className]\n                if (classNodes) {\n                    for (const classNode of classNodes) {\n                        if (hitNodes.indexOf(classNode) === -1) hitNodes.push(classNode)\n                    }\n                }\n            }\n        } else if (tag && tag !== '*') {\n            // 标签选择器，查询指定标签，支持内置组件\n            const tagName = tool.checkIsWxComponent(tag.toLowerCase(), false) ? 'WX-COMPONENT' : tag.toUpperCase()\n            const tagNodes = tagMap[tagName]\n            if (tagNodes) hitNodes = tagNodes\n        } else {\n            // 标签选择器，查询全部节点\n            Object.keys(tagMap).forEach(key => {\n                const tagNodes = tagMap[key]\n                if (tagNodes) {\n                    for (const tagNode of tagNodes) hitNodes.push(tagNode)\n                }\n            })\n        }\n\n        // 从下往上过滤节点列表\n        if (hitNodes.length && segment.length) {\n            for (let i = hitNodes.length - 1; i >= 0; i--) {\n                let checkNode = hitNodes[i]\n                let isMatched = false\n\n                // 从右往左进行规则过滤\n                for (let j = segment.length - 1; j >= 0; j--) {\n                    const prevRule = segment[j - 1]\n\n                    // 检查待选节点，后续的亲属节点不需要再检查\n                    if (j === segment.length - 1) isMatched = checkHit(checkNode, lastRule)\n\n                    if (isMatched && prevRule) {\n                        // 检查亲属选择器\n                        const kinship = prevRule.kinship\n                        const checkKinship = KINSHIP_CHECK[kinship]\n\n                        if (checkKinship) checkNode = checkKinship(checkNode, prevRule)\n\n                        if (!checkNode) {\n                            // 亲属检查失败\n                            isMatched = false\n                            break\n                        }\n                    } else {\n                        break\n                    }\n                }\n\n                if (!isMatched) hitNodes.splice(i, 1) // 不符合，从待选节点列表中删除\n            }\n        }\n\n        if (hitNodes.length) {\n            // 去重、排序\n            hitNodes = unique(hitNodes)\n            hitNodes = sortNodes(hitNodes)\n        }\n\n        return hitNodes\n    }\n}\n\nmodule.exports = QuerySelector\n","/**\n * 支持的样式属性列表，默认只包含常用的样式属性\n */\n\nmodule.exports = [\n    'position', 'top', 'bottom', 'right', 'left', 'float', 'clear',\n    'display', 'width', 'height', 'maxHeight', 'maxWidth', 'minHeight', 'minWidth', 'flex', 'flexBasis', 'flexGrow', 'flexShrink', 'flexDirection', 'flexWrap', 'justifyContent', 'alignItems', 'order',\n    'padding', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop',\n    'margin', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop',\n\n    'background', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPosition', 'backgroundRepeat', 'backgroundSize',\n    'border', 'borderRadius', 'borderBottomColor', 'borderBottomLeftRadius', 'borderBottomRightRadius', 'borderBottomStyle', 'borderBottomWidth', 'borderCollapse', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderTopStyle', 'borderTopWidth',\n    'borderTop', 'borderBottom', 'borderRight', 'borderLeft',\n    'outline', 'borderWidth', 'borderStyle', 'borderColor',\n\n    'animation', 'animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction',\n    'transition', 'transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction',\n    'transform', 'transformOrigin', 'perspective', 'perspectiveOrigin', 'backfaceVisibility',\n\n    'font', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight',\n    'color', 'textAlign', 'textDecoration', 'textIndent', 'textRendering', 'textShadow', 'textOverflow', 'textTransform',\n    'wordBreak', 'wordSpacing', 'wordWrap', 'lineHeight', 'letterSpacing', 'whiteSpace', 'userSelect',\n\n    'visibility', 'opacity', 'zIndex', 'zoom', 'overflow', 'overflowX', 'overflowY',\n    'boxShadow', 'boxSizing', 'content', 'cursor', 'direction', 'listStyle', 'objectFit', 'pointerEvents', 'resize', 'verticalAlign', 'willChange', 'clip', 'clipPath', 'fill',\n\n    'touchAction', 'WebkitAppearance'\n]\n","/**\n * 感谢 John Resig： https://johnresig.com/files/htmlparser.js\n */\n\n// 正则声明\nconst doctypeReg = /^<!\\s*doctype((?:\\s+[\\w:]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/i\nconst startTagReg = /^<([-A-Za-z0-9_]+)((?:\\s+[-A-Za-z0-9_:@.]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/i\nconst endTagReg = /^<\\/([-A-Za-z0-9_]+)[^>]*>/i\nconst attrReg = /([-A-Za-z0-9_:@.]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g\n\n// 空元素 - https://www.w3.org/TR/html/syntax.html#void-elements\nconst voidMap = {};\n['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'].forEach(n => voidMap[n] = true)\n\n// 块级元素 - https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements#Elements\nconst blockMap = {};\n['address', 'article', 'aside', 'blockquote', 'canvas', 'dd', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'li', 'main', 'nav', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table', 'tfoot', 'ul', 'video'].forEach(n => blockMap[n] = true)\n\n// 行内元素 - https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements#Elements\nconst inlineMap = {};\n['a', 'abbr', 'acronym', 'b', 'bdo', 'big', 'br', 'button', 'cite', 'code', 'dfn', 'em', 'i', 'img', 'input', 'kbd', 'label', 'map', 'object', 'q', 'samp', 'script', 'select', 'small', 'span', 'strong', 'sub', 'sup', 'textarea', 'time', 'tt', 'var'].forEach(n => inlineMap[n] = true)\n\n// 可能包含任意内容的元素 - https://www.w3.org/TR/html/syntax.html#raw-text\nconst rawTextMap = {};\n['script', 'style'].forEach(n => rawTextMap[n] = true)\n\nconst longAttributeCache = {}\nlet seed = 0\n\n/**\n * 分词\n */\nfunction tokenize(content, handler) {\n    const stack = []\n    let last = content\n\n    stack.last = function() {\n        return this[this.length - 1]\n    }\n\n    while (content) {\n        let isText = true\n\n        if (!stack.last() || !rawTextMap[stack.last()]) {\n            if (content.indexOf('<!--') === 0) {\n                // comment\n                const index = content.indexOf('-->')\n\n                if (index >= 0) {\n                    if (handler.comment) handler.comment(content.substring(4, index))\n                    content = content.substring(index + 3)\n                    isText = false\n                }\n            } else if (content.indexOf('</') === 0) {\n                // end tag\n                const match = content.match(endTagReg)\n\n                if (match) {\n                    content = content.substring(match[0].length)\n                    match[0].replace(endTagReg, parseEndTag)\n                    isText = false\n                }\n            } else if (content.indexOf('<') === 0) {\n                // start tag\n                let match = content.match(startTagReg)\n\n                if (match) {\n                    content = content.substring(match[0].length)\n                    match[0].replace(startTagReg, parseStartTag)\n                    isText = false\n                } else {\n                    // 检测 doctype\n                    match = content.match(doctypeReg)\n\n                    if (match) {\n                        content = content.substring(match[0].length)\n                        isText = false\n                    }\n                }\n            }\n\n            if (isText) {\n                const indexStart = content.indexOf('<')\n                const indexEnd = content.indexOf('>')\n\n                // 简单自动纠错，只有 <、只有 >、> 在 < 前面、< 和 > 中间没有内容\n                let text = ''\n                if (indexStart === -1 || indexStart >= 0 && indexEnd === -1 || indexStart > indexEnd || (indexEnd > indexStart && !content.substring(indexStart + 1, indexEnd).trim())) {\n                    text = content.replace(/>/g, '&gt;').replace(/</g, '&lt;')\n                    content = ''\n                } else {\n                    text = content.substring(0, indexStart)\n                    content = content.substring(indexStart)\n                }\n\n                if (handler.text && text) handler.text(text)\n            }\n        } else {\n            const execRes = (new RegExp(`</${stack.last()}[^>]*>`)).exec(content)\n\n            if (execRes) {\n                const text = content.substring(0, execRes.index)\n                content = content.substring(execRes.index + execRes[0].length)\n\n                text.replace(/<!--(.*?)-->/g, '')\n                if (text && handler.text) handler.text(text)\n            }\n\n            parseEndTag('', stack.last())\n        }\n\n        if (content === last) throw new Error(`parse error: ${content}`)\n        last = content\n    }\n\n    // 关闭栈内的标签\n    parseEndTag()\n\n    function parseStartTag(tag, tagName, rest, unary) {\n        tagName = tagName.toLowerCase()\n        unary = !!unary\n\n        // 放宽规则，允许行内元素包含块级元素\n        // if (blockMap[tagName]) {\n        //     while (stack.last() && inlineMap[stack.last()]) {\n        //         // 自动关闭栈内的行内元素\n        //         parseEndTag('', stack.last())\n        //     }\n        // }\n\n        unary = voidMap[tagName] || !!unary\n\n        if (!unary) stack.push(tagName)\n\n        if (handler.start) {\n            const attrs = []\n\n            try {\n                rest.replace(attrReg, (all, $1, $2, $3, $4) => {\n                    const value = $2 || $3 || $4\n\n                    attrs.push({\n                        name: $1,\n                        value,\n                    })\n                })\n            } catch (err) {\n                // 某些安卓机遇到过长的字符串执行属性正则替换会跪（主要是 base 64），这里就先临时过滤掉这种特殊情况\n                rest = rest.replace(/url\\([^)]+\\)/ig, all => {\n                    const id = `url(:#|${++seed}|#:)`\n                    longAttributeCache[id] = all\n                    return id\n                })\n                rest.replace(attrReg, (all, $1, $2, $3, $4) => {\n                    const value = $2 || $3 || $4\n\n                    attrs.push({\n                        name: $1,\n                        value: value.replace(/url\\(:#\\|\\d+\\|#:\\)/ig, all => longAttributeCache[all] || 'url()'),\n                    })\n                })\n            }\n\n            handler.start(tagName, attrs, unary)\n        }\n    }\n\n    function parseEndTag(tag, tagName) {\n        let pos\n\n        if (!tagName) {\n            pos = 0\n        } else {\n            // 找到同名的开始标签\n            tagName = tagName.toLowerCase()\n\n            for (pos = stack.length - 1; pos >= 0; pos--) {\n                if (stack[pos] === tagName) break\n            }\n        }\n\n        if (pos >= 0) {\n            // 关闭开始标签和结束标签中的所有标签\n            for (let i = stack.length - 1; i >= pos; i--) {\n                if (handler.end) handler.end(stack[i])\n            }\n\n            stack.length = pos\n        }\n    }\n}\n\n/**\n * 解析\n */\nfunction parse(html) {\n    const r = {\n        children: [],\n    }\n    const stack = [r]\n\n    stack.last = function() {\n        return this[this.length - 1]\n    }\n\n    tokenize(html, {\n        start(tagName, attrs, unary) {\n            const node = {\n                type: 'element',\n                tagName,\n                attrs,\n                unary,\n                children: [],\n            }\n\n            stack.last().children.push(node)\n\n            if (!unary) {\n                stack.push(node)\n            }\n        },\n        // eslint-disable-next-line no-unused-vars\n        end(tagName) {\n            const node = stack.pop()\n\n            if (node.tagName === 'table') {\n                // 补充插入 tbody\n                let hasTbody = false\n\n                for (const child of node.children) {\n                    if (child.tagName === 'tbody') {\n                        hasTbody = true\n                        break\n                    }\n                }\n\n                if (!hasTbody) {\n                    node.children = [{\n                        type: 'element',\n                        tagName: 'tbody',\n                        attrs: [],\n                        unary: false,\n                        children: node.children,\n                    }]\n                }\n            }\n        },\n        text(content) {\n            content = content.trim()\n            if (!content) return\n\n            stack.last().children.push({\n                type: 'text',\n                content,\n            })\n        },\n        comment(content) {\n            content = content.trim()\n\n            stack.last().children.push({\n                type: 'comment',\n                content,\n            })\n        },\n    })\n\n    return r.children\n}\n\nmodule.exports = {\n    tokenize,\n    parse,\n    voidMap,\n    blockMap,\n    inlineMap,\n    rawTextMap,\n}\n","const Element = require('../element')\nconst Location = require('../../bom/location')\nconst cache = require('../../util/cache')\nconst Pool = require('../../util/pool')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLAnchorElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLAnchorElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n\n        this.$_protocol = 'http:'\n        this.$_hostname = ''\n        this.$_port = ''\n        this.$_pathname = '/'\n        this.$_search = ''\n        this.$_hash = ''\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_protocol = null\n        this.$_hostname = null\n        this.$_port = null\n        this.$_pathname = null\n        this.$_search = null\n        this.$_hash = null\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$_children.forEach(child => child.$$recycle())\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const href = node.href\n        if (href) html += ` href=\"${tool.escapeForHtmlGeneration(href)}\"`\n\n        const target = node.target\n        if (target) html += ` target=\"${tool.escapeForHtmlGeneration(target)}\"`\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.href = node.href || ''\n        this.target = node.target || ''\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            href: this.href,\n            target: this.target,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get href() {\n        return this.$_attrs.get('href')\n    }\n\n    set href(value) {\n        value = '' + value\n\n        if (value.indexOf('//') === -1) {\n            const {origin} = cache.getConfig()\n            value = origin + (value[0] === '/' ? value : `/${value}`)\n        }\n\n        this.$_attrs.set('href', value)\n        const {\n            protocol, hostname, port, pathname, search, hash\n        } = Location.$$parse(value)\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n    }\n\n    get protocol() {\n        return this.$_protocol\n    }\n\n    get hostname() {\n        return this.$_hostname\n    }\n\n    get port() {\n        return this.$_port\n    }\n\n    get pathname() {\n        return this.$_pathname\n    }\n\n    get search() {\n        return this.$_search\n    }\n\n    get hash() {\n        return this.$_hash\n    }\n\n    get target() {\n        return this.$_attrs.get('target')\n    }\n\n    set target(value) {\n        value = '' + value\n        this.$_attrs.set('target', value)\n    }\n}\n\nmodule.exports = HTMLAnchorElement\n","const Element = require('../element')\nconst Event = require('../../event/event')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass Image extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Image(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        const width = options.width\n        const height = options.height\n\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\n\n        super.$$init(options, tree)\n\n        this.$_naturalWidth = 0\n        this.$_naturalHeight = 0\n\n        this.$_initRect()\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_naturalWidth = null\n        this.$_naturalHeight = null\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        this.$_initRect()\n        super.$_triggerParentUpdate()\n    }\n\n    /**\n     * 初始化长宽\n     */\n    $_initRect() {\n        const width = this.$_attrs.get('width')\n        const height = this.$_attrs.get('height')\n\n        const widthNum = +width\n        if (!isNaN(+widthNum) && +widthNum >= 0) this.$_style.width = `${width}px`\n        else if (width && typeof width === 'string') this.$_style.width = width // 可能设置 width=\"100%\"\n\n        const heightNum = +height\n        if (!isNaN(+heightNum) && +heightNum >= 0) this.$_style.height = `${height}px`\n        else if (height && typeof height === 'string') this.$_style.height = height // 可能设置 width=\"100%\"\n    }\n\n    /**\n     * 重置长宽\n     */\n    $_resetRect(rect = {}) {\n        this.$_naturalWidth = rect.width || 0\n        this.$_naturalHeight = rect.height || 0\n\n        this.$_initRect()\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get src() {\n        return this.$_attrs.get('src') || ''\n    }\n\n    set src(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$_attrs.set('src', value)\n\n        setTimeout(() => {\n            wx.getImageInfo({\n                src: this.src,\n                success: res => {\n                    // 加载成功，调整图片的宽高\n                    this.$_resetRect(res)\n\n                    // 触发 load 事件\n                    this.$$trigger('load', {\n                        event: new Event({\n                            name: 'load',\n                            target: this,\n                            eventPhase: Event.AT_TARGET\n                        }),\n                        currentTarget: this,\n                    })\n                },\n                fail: () => {\n                    // 加载失败，调整图片的宽高\n                    this.$_resetRect({width: 0, height: 0})\n\n                    // 触发 error 事件\n                    this.$$trigger('error', {\n                        event: new Event({\n                            name: 'error',\n                            target: this,\n                            eventPhase: Event.AT_TARGET\n                        }),\n                        currentTarget: this,\n                    })\n                },\n            })\n        }, 0)\n    }\n\n    get width() {\n        return parseFloat(this.$_attrs.get('width'), 10) || 0\n    }\n\n    set width(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        this.$_attrs.set('width', value)\n        this.$_initRect()\n    }\n\n    get height() {\n        return parseFloat(this.$_attrs.get('height'), 10) || 0\n    }\n\n    set height(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        this.$_attrs.set('height', value)\n        this.$_initRect()\n    }\n\n    get naturalWidth() {\n        return this.$_naturalWidth\n    }\n\n    get naturalHeight() {\n        return this.$_naturalHeight\n    }\n}\n\nmodule.exports = Image\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLInputElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLInputElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const type = node.type\n        if (type) html += ` type=\"${tool.escapeForHtmlGeneration(type)}\"`\n\n        const value = node.value\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\n\n        const disabled = node.disabled\n        if (disabled) html += ' disabled'\n\n        const maxlength = node.maxlength\n        if (maxlength) html += ` maxlength=\"${tool.escapeForHtmlGeneration(maxlength)}\"`\n\n        const placeholder = node.placeholder\n        if (placeholder) html += ` placeholder=\"${tool.escapeForHtmlGeneration(placeholder)}\"`\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.name = node.name || ''\n        this.type = node.type || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.maxlength = node.maxlength\n        this.placeholder = node.placeholder || ''\n\n        // 特殊字段\n        this.mpplaceholderclass = node.mpplaceholderclass || ''\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            type: this.type,\n            value: this.value,\n            disabled: this.disabled,\n            maxlength: this.maxlength,\n            placeholder: this.placeholder,\n\n            // 特殊字段\n            mpplaceholderclass: this.mpplaceholderclass,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get name() {\n        return this.$_attrs.get('name')\n    }\n\n    set name(value) {\n        value = '' + value\n        this.$_attrs.set('name', value)\n    }\n\n    get type() {\n        return this.$_attrs.get('type') || 'text'\n    }\n\n    set type(value) {\n        value = '' + value\n        this.$_attrs.set('type', value)\n    }\n\n    get value() {\n        const type = this.$_attrs.get('type')\n        const value = this.$_attrs.get('value')\n\n        if ((type === 'radio' || type === 'checkbox') && value === undefined) return 'on'\n        return value\n    }\n\n    set value(value) {\n        value = '' + value\n        this.$_attrs.set('value', value)\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    get maxlength() {\n        return this.$_attrs.get('maxlength')\n    }\n\n    set maxlength(value) {\n        this.$_attrs.set('maxlength', value)\n    }\n\n    get placeholder() {\n        return this.$_attrs.get('placeholder') || ''\n    }\n\n    set placeholder(value) {\n        value = '' + value\n        this.$_attrs.set('placeholder', value)\n    }\n\n    get autofocus() {\n        return !!this.$_attrs.get('autofocus')\n    }\n\n    set autofocus(value) {\n        value = !!value\n        this.$_attrs.set('autofocus', value)\n    }\n\n    set checked(value) {\n        this.$_attrs.set('checked', value)\n    }\n\n    get checked() {\n        return this.$_attrs.get('checked') || ''\n    }\n\n    focus() {\n        this.$_attrs.set('focus', true)\n    }\n\n    blur() {\n        this.$_attrs.set('focus', false)\n    }\n}\n\nmodule.exports = HTMLInputElement\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\nconst tool = require('../../util/tool')\r\n\r\nconst pool = new Pool()\r\n\r\nclass HTMLTextAreaElement extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new HTMLTextAreaElement(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\r\n     */\r\n    $$dealWithAttrsForGenerateHtml(html, node) {\r\n        const type = node.type\r\n        if (type) html += ` type=\"${tool.escapeForHtmlGeneration(type)}\"`\r\n\r\n        const value = node.value\r\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\r\n\r\n        const disabled = node.disabled\r\n        if (disabled) html += ' disabled'\r\n\r\n        const maxlength = node.maxlength\r\n        if (maxlength) html += ` maxlength=\"${tool.escapeForHtmlGeneration(maxlength)}\"`\r\n\r\n        const placeholder = node.placeholder\r\n        if (placeholder) html += ` placeholder=\"${tool.escapeForHtmlGeneration(placeholder.replace(/\"/g, '\\\\\"'))}\"`\r\n\r\n        return html\r\n    }\r\n\r\n    /**\r\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\r\n     */\r\n    $$dealWithAttrsForOuterHTML(node) {\r\n        this.name = node.name || ''\r\n        this.type = node.type || ''\r\n        this.value = node.value || ''\r\n        this.disabled = !!node.disabled\r\n        this.maxlength = node.maxlength\r\n        this.placeholder = node.placeholder || ''\r\n\r\n        // 特殊字段\r\n        this.mpplaceholderclass = node.mpplaceholderclass || ''\r\n    }\r\n\r\n    /**\r\n     * 调用 cloneNode 接口时用于处理额外的属性\r\n     */\r\n    $$dealWithAttrsForCloneNode() {\r\n        return {\r\n            type: this.type,\r\n            value: this.value,\r\n            disabled: this.disabled,\r\n            maxlength: this.maxlength,\r\n            placeholder: this.placeholder,\r\n\r\n            // 特殊字段\r\n            mpplaceholderclass: this.mpplaceholderclass,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get type() {\r\n        return this.$_attrs.get('type') || 'textarea'\r\n    }\r\n\r\n    set type(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('type', value)\r\n    }\r\n\r\n    get value() {\r\n        return this.$_attrs.get('value')\r\n    }\r\n\r\n    set value(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('value', value)\r\n    }\r\n\r\n    get disabled() {\r\n        return !!this.$_attrs.get('disabled')\r\n    }\r\n\r\n    set disabled(value) {\r\n        value = !!value\r\n        this.$_attrs.set('disabled', value)\r\n    }\r\n\r\n    get maxlength() {\r\n        return this.$_attrs.get('maxlength')\r\n    }\r\n\r\n    set maxlength(value) {\r\n        this.$_attrs.set('maxlength', value)\r\n    }\r\n\r\n    get placeholder() {\r\n        return this.$_attrs.get('placeholder') || ''\r\n    }\r\n\r\n    set placeholder(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('placeholder', value)\r\n    }\r\n\r\n    get autofocus() {\r\n        return !!this.$_attrs.get('autofocus')\r\n    }\r\n\r\n    set autofocus(value) {\r\n        value = !!value\r\n        this.$_attrs.set('autofocus', value)\r\n    }\r\n\r\n    get selectionStart() {\r\n        const value = +this.$_attrs.get('selection-start')\r\n        return value !== undefined ? value : -1\r\n    }\r\n\r\n    set selectionStart(value) {\r\n        this.$_attrs.set('selection-start', value)\r\n    }\r\n\r\n    get selectionEnd() {\r\n        const value = +this.$_attrs.get('selection-end')\r\n        return value !== undefined ? value : -1\r\n    }\r\n\r\n    set selectionEnd(value) {\r\n        this.$_attrs.set('selection-end', value)\r\n    }\r\n\r\n    focus() {\r\n        this.$_attrs.set('focus', true)\r\n    }\r\n\r\n    blur() {\r\n        this.$_attrs.set('focus', false)\r\n    }\r\n}\r\n\r\nmodule.exports = HTMLTextAreaElement\r\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\n\r\nconst pool = new Pool()\r\n\r\nclass HTMLVideoElement extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new HTMLVideoElement(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$init 方法\r\n     */\r\n    $$init(options, tree) {\r\n        const width = options.width\r\n        const height = options.height\r\n\r\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\r\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\r\n\r\n        super.$$init(options, tree)\r\n\r\n        this.$_initRect()\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新父组件树\r\n     */\r\n    $_triggerParentUpdate() {\r\n        this.$_initRect()\r\n        super.$_triggerParentUpdate()\r\n    }\r\n\r\n    /**\r\n     * 初始化长宽\r\n     */\r\n    $_initRect() {\r\n        const width = parseInt(this.$_attrs.get('width'), 10)\r\n        const height = parseInt(this.$_attrs.get('height'), 10)\r\n\r\n        if (typeof width === 'number' && width >= 0) this.$_style.width = `${width}px`\r\n        if (typeof height === 'number' && height >= 0) this.$_style.height = `${height}px`\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get src() {\r\n        return this.$_attrs.get('src') || ''\r\n    }\r\n\r\n    set src(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('src', value)\r\n    }\r\n\r\n    get width() {\r\n        return +this.$_attrs.get('width') || 0\r\n    }\r\n\r\n    set width(value) {\r\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\r\n\r\n        this.$_attrs.set('width', value)\r\n        this.$_initRect()\r\n    }\r\n\r\n    get height() {\r\n        return +this.$_attrs.get('height') || 0\r\n    }\r\n\r\n    set height(value) {\r\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\r\n\r\n        this.$_attrs.set('height', value)\r\n        this.$_initRect()\r\n    }\r\n\r\n    get autoplay() {\r\n        return !!this.$_attrs.get('autoplay')\r\n    }\r\n\r\n    set autoplay(value) {\r\n        value = !!value\r\n        this.$_attrs.set('autoplay', value)\r\n    }\r\n\r\n    get loop() {\r\n        return !!this.$_attrs.get('loop')\r\n    }\r\n\r\n    set loop(value) {\r\n        value = !!value\r\n        this.$_attrs.set('loop', value)\r\n    }\r\n\r\n    get muted() {\r\n        return !!this.$_attrs.get('muted')\r\n    }\r\n\r\n    set muted(value) {\r\n        value = !!value\r\n        this.$_attrs.set('muted', value)\r\n    }\r\n\r\n    get controls() {\r\n        const value = this.$_attrs.get('controls')\r\n        return value !== undefined ? !!value : true\r\n    }\r\n\r\n    set controls(value) {\r\n        this.$_attrs.set('controls', value)\r\n    }\r\n\r\n    get poster() {\r\n        return this.$_attrs.get('poster')\r\n    }\r\n\r\n    set poster(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('poster', value)\r\n    }\r\n\r\n    get currentTime() {\r\n        return +this.$_attrs.get('currentTime') || 0\r\n    }\r\n\r\n    get buffered() {\r\n        return this.$_attrs.get('buffered')\r\n    }\r\n}\r\n\r\nmodule.exports = HTMLVideoElement\r\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass HTMLCanvasElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLCanvasElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        const width = options.width\n        const height = options.height\n\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\n\n        super.$$init(options, tree)\n\n        this.$_node = null\n\n        this.$_initRect()\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 准备 canvas 节点\n     */\n    $$prepare() {\n        return new Promise((resolve, reject) => {\n            this.$$getNodesRef().then(nodesRef => nodesRef.node(res => {\n                const {width, height} = this\n                this.$_node = res.node\n\n                // 设置 canvas 宽高\n                this.$_node.width = width\n                this.$_node.height = height\n\n                resolve(this)\n            }).exec()).catch(reject)\n        })\n    }\n\n    get $$node() {\n        return this.$_node\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        this.$_initRect()\n        super.$_triggerParentUpdate()\n    }\n\n    /**\n     * 初始化长宽\n     */\n    $_initRect() {\n        const width = parseInt(this.$_attrs.get('width'), 10)\n        const height = parseInt(this.$_attrs.get('height'), 10)\n\n        if (typeof width === 'number' && width >= 0) {\n            this.$_style.width = `${width}px`\n        }\n        if (typeof height === 'number' && height >= 0) {\n            this.$_style.height = `${height}px`\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get width() {\n        if (this.$_node) return this.$_node.width\n        else return +this.$_attrs.get('width') || 0\n    }\n\n    set width(value) {\n        value = parseFloat(value)\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        if (this.$_node) this.$_node.width = value\n        else this.$_attrs.set('width', value)\n    }\n\n    get height() {\n        if (this.$_node) return this.$_node.height\n        else return +this.$_attrs.get('height') || 0\n    }\n\n    set height(value) {\n        value = parseFloat(value)\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        if (this.$_node) this.$_node.height = value\n        else this.$_attrs.set('height', value)\n    }\n\n    getContext(type) {\n        if (!this.$_node) {\n            console.warn('canvas is not prepared, please call $$prepare method first')\n            return\n        }\n        return this.$_node.getContext(type)\n    }\n\n    createPath2D(...args) {\n        return this.$_node.createPath2D(...args)\n    }\n\n    createImage(...args) {\n        return this.$_node.createImage(...args)\n    }\n\n    createImageData(...args) {\n        return this.$_node.createImageData(...args)\n    }\n\n    requestAnimationFrame(...args) {\n        return this.$_node.requestAnimationFrame(...args)\n    }\n\n    cancelAnimationFrame(...args) {\n        return this.$_node.cancelAnimationFrame(...args)\n    }\n\n    toDataURL(...args) {\n        return this.$_node.toDataURL(...args)\n    }\n}\n\nmodule.exports = HTMLCanvasElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLSelectElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLSelectElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n        this.$$resetOptions()\n    }\n\n    /**\n     * 重置 options 显示\n     */\n    $$resetOptions() {\n        const value = this.value\n\n        if (value !== undefined) {\n            this.options.forEach(child => child.$$updateSelected(child.value === value))\n        } else {\n            this.options.forEach((child, index) => child.$$updateSelected(index === 0))\n        }\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const value = node.value\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\n\n        const disabled = node.disabled\n        if (disabled) html += ' disabled'\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.name = node.name || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.selectedIndex = node.selectedIndex || 0\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            value: this.value,\n            disabled: this.disabled,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get name() {\n        return this.$_attrs.get('name')\n    }\n\n    set name(value) {\n        value = '' + value\n        return this.$_attrs.set('name', value)\n    }\n\n    get value() {\n        let value = this.$_attrs.get('value')\n        if (value === undefined) {\n            // 没有设置 value 的时候，取 options 中被选中那项的 value\n            const option = this.options.find(option => !!option.selected)\n            if (option) {\n                value = option.value\n                this.$$setAttributeWithoutUpdate('value', value)\n            }\n        }\n        return value\n    }\n\n    set value(value) {\n        value = '' + value\n\n        this.$_attrs.set('value', value)\n\n        // 同步更新 selectedIndex 属性\n        this.$_attrs.set('selectedIndex', this.options.findIndex(option => option.value === value))\n\n        // 同步更新 options 的 selected\n        this.$$resetOptions()\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    get selectedIndex() {\n        return +this.$_attrs.get('selectedIndex')\n    }\n\n    set selectedIndex(value) {\n        value = +value\n\n        this.$_attrs.set('selectedIndex', value)\n\n        // 同步更新 value 属性\n        this.$_attrs.set('value', this.options[value] && this.options[value].value || '')\n\n        // 同步更新 options 的 selected\n        this.$$resetOptions()\n    }\n\n    get options() {\n        // 只考虑儿子节点中的 option\n        return this.$_children.filter(child => child.tagName === 'OPTION' && !child.disabled)\n    }\n}\n\nmodule.exports = HTMLSelectElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLOptionElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLOptionElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const value = node.value\n        if (value) html += ` value=\"${tool.tool.escapeForHtmlGeneration(value)}\"`\n\n        const label = node.label\n        if (label) html += ` label=\"${tool.tool.escapeForHtmlGeneration(label)}\"`\n\n        const selected = node.selected\n        if (selected) html += ' selected'\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.label = node.label || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.selected = !!node.selected\n    }\n\n    /**\n     * 更新 selected，不触发 select 的更新\n     */\n    $$updateSelected(value) {\n        value = !!value\n        this.$_attrs.set('selected', value)\n    }\n\n    get label() {\n        return this.$_attrs.get('label') || this.textContent\n    }\n\n    set label(value) {\n        value = '' + value\n        this.$_attrs.set('label', value)\n    }\n\n    get value() {\n        const value = this.$_attrs.get('value')\n        return value !== undefined ? value : this.label\n    }\n\n    set value(value) {\n        value = '' + value\n        this.$_attrs.set('value', value)\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    set selected(value) {\n        this.$$updateSelected(value)\n\n        // 同步更新 select 的 selectedIndex 和 value，只考虑父亲节点中 select\n        const parentNode = this.parentNode\n        if (parentNode && parentNode.tagName === 'SELECT') {\n            parentNode.value = this.value\n        }\n    }\n\n    get selected() {\n        return !!this.$_attrs.get('selected')\n    }\n}\n\nmodule.exports = HTMLOptionElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass NotSupport extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new NotSupport(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n\n        // 处理特殊节点\n        const window = cache.getWindow(this.$_pageId)\n        if (window.onDealWithNotSupportDom) window.onDealWithNotSupportDom(this)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    get behavior() {\n        return 'not-support'\n    }\n}\n\nmodule.exports = NotSupport\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\nconst tool = require('../../util/tool')\r\n\r\nconst pool = new Pool()\r\n\r\nclass WxComponent extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new WxComponent(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    get behavior() {\r\n        return this.$_attrs.get('behavior') || ''\r\n    }\r\n\r\n    set behavior(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('behavior', value)\r\n    }\r\n\r\n    get value() {\r\n        return this.$_attrs.get('value')\r\n    }\r\n\r\n    set value(value) {\r\n        this.$_attrs.set('value', value)\r\n    }\r\n\r\n    get scrollTop() {\r\n        return this.$_attrs.get('scroll-top') || 0\r\n    }\r\n\r\n    set scrollTop(value) {\r\n        value = parseInt(value, 10)\r\n\r\n        if (!isNaN(value)) {\r\n            this.$_attrs.set('scroll-top', value)\r\n        }\r\n    }\r\n\r\n    get scrollLeft() {\r\n        return this.$_attrs.get('scroll-left') || 0\r\n    }\r\n\r\n    set scrollLeft(value) {\r\n        value = parseInt(value, 10)\r\n\r\n        if (!isNaN(value)) {\r\n            this.$_attrs.set('scroll-left', value)\r\n        }\r\n    }\r\n\r\n    setAttribute(name, value) {\r\n        super.setAttribute(name, value)\r\n\r\n        if (name === 'scroll-into-view') {\r\n            // TODO：scroll-into-view 先转成 scroll-top 来处理，等基础库支持\r\n            tool.flushThrottleCache() // 先清空 setData\r\n            Promise.resolve().then(() => {\r\n                const scrollItem = this.ownerDocument.getElementById(value)\r\n                if (!scrollItem) return\r\n\r\n                const propName = this.getAttribute('scroll-x') ? 'scroll-left' : this.getAttribute('scroll-y') ? 'scroll-top' : ''\r\n                if (!propName) return\r\n\r\n                const window = cache.getWindow(this.$_pageId)\r\n                Promise.all([\r\n                    new Promise(resolve => window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).fields({rect: true, scrollOffset: true}).exec(resolve)),\r\n                    scrollItem.$$getBoundingClientRect()\r\n                ]).then(res => {\r\n                    const rectName = propName === 'scroll-left' ? 'left' : 'top'\r\n                    const scrollRect = res[0][0]\r\n                    const itemRect = res[1]\r\n\r\n                    super.setAttribute(propName, itemRect[rectName] - scrollRect[rectName] + scrollRect[tool.toCamel(propName)])\r\n                }).catch(console.error)\r\n            }).catch(console.error)\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = WxComponent\r\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\n\r\nconst pool = new Pool()\r\n\r\nclass WxCustomComponent extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new WxCustomComponent(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$init 方法\r\n     */\r\n    $$init(options, tree) {\r\n        this.$_behavior = options.componentName\r\n\r\n        super.$$init(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$destroy 方法\r\n     */\r\n    $$destroy() {\r\n        super.$$destroy()\r\n\r\n        this.$_behavior = null\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    get behavior() {\r\n        return this.$_behavior\r\n    }\r\n\r\n    setAttribute(name, value) {\r\n        if (name.indexOf('kbone-func-') === 0) {\r\n            // 特殊属性，用于传入函数\r\n            const realName = name.slice('kbone-func-'.length)\r\n            if (typeof value === 'function') {\r\n                super.setAttribute(realName, value)\r\n            } else {\r\n                const window = cache.getWindow(this.$_pageId)\r\n                super.setAttribute(realName, window[value])\r\n            }\r\n        } else {\r\n            super.setAttribute(name, value)\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = WxCustomComponent\r\n","const Location = require('./location')\nconst cache = require('../util/cache')\n\nclass Cookie {\n    constructor(pageName) {\n        const config = cache.getConfig()\n        const runtime = config.runtime || {}\n        this.cookieStore = runtime.cookieStore\n        this.$_pageName = pageName\n\n        if (this.cookieStore !== 'storage' && this.cookieStore !== 'memory') {\n            // 需要全局共享\n            this.$_map = cache.getCookie()\n        } else {\n            this.$_map = {} // 三维数组，domain - path - key\n        }\n    }\n\n    static parse(cookieStr) {\n        if (!cookieStr && typeof cookieStr !== 'string') return null\n\n        cookieStr = cookieStr.trim().split(';')\n\n        // key-value\n        const parseKeyValue = /^([^=;\\x00-\\x1F]+)=([^;\\n\\r\\0\\x00-\\x1F]*).*/.exec(cookieStr.shift())\n        if (!parseKeyValue) return null\n\n        const key = (parseKeyValue[1] || '').trim()\n        const value = (parseKeyValue[2] || '').trim()\n\n        // 其他字段\n        let path = null\n        let domain = null\n        let expires = null\n        let maxAge = null\n        let secure = false\n        let httpOnly = false\n\n        for (let item of cookieStr) {\n            item = item.trim()\n            if (!item) continue\n\n            let [key, value] = item.split('=')\n            key = (key || '').trim().toLowerCase()\n            value = (value || '').trim()\n\n            if (!key) continue\n\n            switch (key) {\n            case 'path':\n                if (value[0] === '/') path = value\n                break\n            case 'domain':\n                value = value.replace(/^\\./, '').toLowerCase()\n                if (value) domain = value\n                break\n            case 'expires':\n                if (value) {\n                    const timeStamp = Date.parse(value)\n                    if (timeStamp) expires = timeStamp\n                }\n                break\n            case 'max-age':\n                if (/^-?[0-9]+$/.test(value)) maxAge = +value * 1000\n                break\n            case 'secure':\n                secure = true\n                break\n            case 'httponly':\n                httpOnly = true\n                break\n            default:\n                // ignore\n                break\n            }\n        }\n\n        return {\n            key, value, path, domain, expires, maxAge, secure, httpOnly\n        }\n    }\n\n    /**\n     * 判断 domain\n     */\n    $_checkDomain(host, cookieDomain) {\n        if (host === cookieDomain) return true\n\n        const index = host.indexOf(`.${cookieDomain}`)\n\n        return index > 0 && cookieDomain.length + index + 1 === host.length\n    }\n\n    /**\n     * 判断 path\n     */\n    $_checkPath(path, cookiePath) {\n        if (path === cookiePath) return true\n\n        cookiePath = cookiePath === '/' ? '' : cookiePath\n        return path.indexOf(`${cookiePath}/`) === 0\n    }\n\n    /**\n     * 判断过期\n     */\n    $_checkExpires(cookie) {\n        const now = Date.now()\n\n        // maxAge 优先\n        if (cookie.maxAge !== null) return cookie.createTime + cookie.maxAge > now\n\n        // 判断 expires\n        if (cookie.expires !== null) return cookie.expires > now\n\n        return true\n    }\n\n    /**\n     * 设置 cookie\n     */\n    setCookie(cookie, url) {\n        cookie = Cookie.parse(cookie)\n\n        if (!cookie) return\n\n        const {hostname, port, pathname} = Location.$$parse(url)\n        const host = ((hostname || '') + (port ? ':' + port : '')) || ''\n        const path = (pathname || '')[0] === '/' ? pathname : '/'\n\n        if (cookie.domain) {\n            // 判断 domain\n            if (!this.$_checkDomain(host, cookie.domain)) return\n        } else {\n            // 使用 host 作为默认的 domain\n            cookie.domain = host\n        }\n\n        // 需要设置 path 字段的情况，取 url 中除去最后一节的 path\n        if (!cookie.path || cookie.path[0] !== '/') {\n            const lastIndex = path.lastIndexOf('/')\n\n            cookie.path = lastIndex === 0 ? path : path.substr(0, lastIndex)\n        }\n\n        // 存入 cookie\n        const map = this.$_map\n        const cookieDomain = cookie.domain\n        const cookiePath = cookie.path\n        const cookieKey = cookie.key\n\n        if (!map[cookieDomain]) map[cookieDomain] = {}\n        if (!map[cookieDomain][cookiePath]) map[cookieDomain][cookiePath] = {}\n\n        const oldCookie = map[cookieDomain][cookiePath][cookieKey]\n        cookie.createTime = oldCookie && oldCookie.createTime || Date.now()\n\n        if (this.$_checkExpires(cookie)) {\n            // 未过期\n            map[cookieDomain][cookiePath][cookieKey] = cookie\n        } else if (oldCookie) {\n            // 存在旧 cookie，且被设置为已过期\n            delete map[cookieDomain][cookiePath][cookieKey]\n        }\n\n        // 持久化 cookie\n        if (this.cookieStore !== 'memory' && this.cookieStore !== 'globalmemory') {\n            const key = this.cookieStore === 'storage' ? `PAGE_COOKIE_${this.$_pageName}` : 'PAGE_COOKIE'\n            wx.setStorage({\n                key,\n                data: this.serialize(),\n            })\n        }\n    }\n\n    /**\n     * 拉取 cookie\n     */\n    getCookie(url, includeHttpOnly) {\n        const {\n            protocol, hostname, port, pathname\n        } = Location.$$parse(url)\n        const host = ((hostname || '') + (port ? ':' + port : '')) || ''\n        const path = (pathname || '')[0] === '/' ? pathname : '/'\n        const res = []\n\n        const map = this.$_map\n        const domainList = Object.keys(map)\n\n        for (const domainItem of domainList) {\n            // 判断 domain\n            if (this.$_checkDomain(host, domainItem)) {\n                const domainMap = map[domainItem] || {}\n                const pathList = Object.keys(domainMap)\n\n                for (const pathItem of pathList) {\n                    // 判断 path\n                    if (this.$_checkPath(path, pathItem)) {\n                        const pathMap = map[domainItem][pathItem] || {}\n\n                        Object.keys(pathMap).forEach(key => {\n                            const cookie = pathMap[key]\n\n                            if (!cookie) return\n\n                            // 判断协议\n                            if (cookie.secure && protocol !== 'https:' && protocol !== 'wss:') return\n                            if (!includeHttpOnly && cookie.httpOnly && protocol && protocol !== 'http:') return\n\n                            // 判断过期\n                            if (this.$_checkExpires(cookie)) {\n                                res.push(cookie)\n                            } else {\n                                // 过期，删掉\n                                delete map[domainItem][pathItem][key]\n                            }\n                        })\n                    }\n                }\n            }\n        }\n\n        return res\n            .sort((a, b) => {\n                const gap = a.createTime - b.createTime\n\n                if (!gap) {\n                    return a.key < b.key ? -1 : 1\n                } else {\n                    return gap\n                }\n            })\n            .map(cookie => `${cookie.key}=${cookie.value}`)\n            .join('; ')\n    }\n\n    /**\n     * 序列化\n     */\n    serialize() {\n        try {\n            return JSON.stringify(this.$_map)\n        } catch (err) {\n            console.log('cannot serialize the cookie')\n            return ''\n        }\n    }\n\n    /**\n     * 反序列化\n     */\n    deserialize(str) {\n        let map = {}\n        try {\n            map = JSON.parse(str)\n        } catch (err) {\n            console.log('cannot deserialize the cookie')\n            map = {}\n        }\n\n        // 合并 cookie\n        const domainList = Object.keys(map)\n\n        for (const domainItem of domainList) {\n            const domainMap = map[domainItem] || {}\n            const pathList = Object.keys(domainMap)\n\n            for (const pathItem of pathList) {\n                const pathMap = map[domainItem][pathItem] || {}\n\n                Object.keys(pathMap).forEach(key => {\n                    const cookie = pathMap[key]\n\n                    if (!cookie) return\n\n                    // 已存在则不覆盖\n                    if (!this.$_map[domainItem]) this.$_map[domainItem] = {}\n                    if (!this.$_map[domainItem][pathItem]) this.$_map[domainItem][pathItem] = {}\n                    if (!this.$_map[domainItem][pathItem][key]) this.$_map[domainItem][pathItem][key] = cookie\n                })\n            }\n        }\n    }\n}\n\nmodule.exports = Cookie\n","class Navigator {\n    constructor() {\n        this.$_language = ''\n        this.$_wxVersion = ''\n        this.$_brand = '' // 手机品牌\n        this.$_model = '' // 手机型号\n        this.$_platform = ''\n        this.$_system = '' // 操作系统版本\n\n        this.$_userAgent = ''\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(info) {\n        this.$_language = info.language\n        this.$_wxVersion = info.version\n        this.$_brand = info.brand\n        this.$_model = info.model\n        this.$_platform = info.platform\n        this.$_system = info.system\n\n        // 拼装 userAgent\n        const appVersion = '5.0'\n        const appleWebKitVersion = '602.3.12'\n        let platformContext\n        if (this.$_platform === 'ios') {\n            // 拆分系统版本号\n            let systemVersion = this.$_system.split(' ')\n            if (systemVersion.length >= 2) {\n                systemVersion = systemVersion[1].split('.').join('_')\n            } else {\n                systemVersion = ''\n            }\n\n            platformContext = `${this.$_brand}; CPU ${this.$_brand} OS ${systemVersion} like Mac OS X`\n        } else if (this.$_platform === 'android') {\n            platformContext = `Linux; ${this.$_system}; ${this.$_model}`\n        } else {\n            // 在开发者工具上，默认在 windows x64 上运行\n            platformContext = 'Windows NT 6.1; win64; x64'\n        }\n\n        this.$_userAgent = `${this.appCodeName}/${appVersion} (${platformContext}) AppleWebKit/${appleWebKitVersion} (KHTML, like Gecko) Mobile MicroMessenger/${this.$_wxVersion} Language/${this.language}`\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get userAgent() {\n        return this.$_userAgent\n    }\n\n    get appCodeName() {\n        return 'Mozilla'\n    }\n\n    get appName() {\n        return 'Netscape'\n    }\n\n    get language() {\n        return this.$_language\n    }\n\n    get languages() {\n        return [this.$_language]\n    }\n\n    get platform() {\n        return this.$_platform\n    }\n\n    get product() {\n        return 'Gecko'\n    }\n}\n\nmodule.exports = Navigator\n","const EventTarget = require('../event/event-target')\n\nclass Screen extends EventTarget {\n    constructor() {\n        super()\n\n        this.$_width = 0\n        this.$_height = 0\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(info) {\n        this.$_width = info.screenWidth\n        this.$_height = info.screenHeight\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get width() {\n        return this.$_width\n    }\n\n    get height() {\n        return this.$_height\n    }\n}\n\nmodule.exports = Screen\n","/**\n * 暂不维护跳转后页面的历史，不做页面刷新的操作\n */\nconst Location = require('./location')\nconst EventTarget = require('../event/event-target')\n\nclass History extends EventTarget {\n    constructor(location) {\n        super()\n\n        this.$_location = location\n        this.$_stack = [{\n            state: null,\n            title: '',\n            url: location.href,\n        }]\n        this.$_currentIndex = 0\n\n        this.$_location.addEventListener('$_addToHistory', evt => {\n            this.$_currentIndex++\n            this.$_stack = this.$_stack.slice(0, this.$_currentIndex)\n            this.$_stack.push({\n                state: null,\n                title: '',\n                url: evt.href\n            })\n        })\n    }\n\n    /**\n     * 检查是否同源\n     */\n    $_checkOrigin(url) {\n        const {protocol, hostname, port} = Location.$$parse(url)\n\n        return (!protocol || this.$_location.protocol === protocol) && (!hostname || this.$_location.hostname === hostname) && ((!hostname && !port) || this.$_location.port === port)\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset() {\n        this.$_stack = [{\n            state: null,\n            title: '',\n            url: this.$_location.href,\n        }]\n        this.$_currentIndex = 0\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get state() {\n        const current = this.$_stack[this.$_currentIndex]\n        return current && current.state || null\n    }\n\n    get length() {\n        return this.$_stack.length\n    }\n\n    back() {\n        this.go(-1)\n    }\n\n    forward() {\n        this.go(1)\n    }\n\n    go(delta) {\n        if (typeof delta === 'number') {\n            const next = this.$_currentIndex + delta\n\n            if (next >= 0 && next < this.$_stack.length && this.$_currentIndex !== next) {\n                this.$_currentIndex = next\n                // 替换 href，但不做跳转（理论上此处应该做跳转，但是在小程序环境里不适合）\n                this.$_location.$$startCheckHash()\n                this.$_location.$$setHrefWithoutCheck(this.$_stack[this.$_currentIndex].url)\n                this.$_location.$$endCheckHash(true) // 因为不跳转，所以要强制触发 hashchange 检测\n\n                this.$$trigger('popstate', {\n                    event: {\n                        state: this.state\n                    }\n                })\n            }\n        } else {\n            // 刷新当前页面\n            this.$_location.reload()\n        }\n    }\n\n    pushState(state = null, title, url) {\n        if (!url || typeof url !== 'string') return\n\n        if (this.$_checkOrigin(url)) {\n            // 同源才允许操作\n            if (title && typeof title === 'string') {\n                // 设置标题\n                wx.setNavigationBarTitle({title})\n            }\n\n\n            this.$_currentIndex++\n            this.$_stack = this.$_stack.slice(0, this.$_currentIndex)\n\n            // 替换 href，但不做跳转\n            this.$_location.$$setHrefWithoutCheck(url)\n\n            this.$_stack.push({state, title, url: this.$_location.href})\n        }\n    }\n\n    replaceState(state = null, title, url) {\n        if (!url || typeof url !== 'string') return\n\n        if (this.$_checkOrigin(url)) {\n            // 同源才允许操作\n            if (title && typeof title === 'string') {\n                // 设置标题\n                wx.setNavigationBarTitle({title})\n            }\n\n            // 替换 href，但不做跳转\n            this.$_location.$$setHrefWithoutCheck(url)\n\n            this.$_stack.splice(this.$_currentIndex, 1, {state, title, url: this.$_location.href})\n        }\n    }\n}\n\nmodule.exports = History\n","const cache = require('../util/cache')\n\nlet pageUrlRouteMap = null\n\nclass Miniprogram {\n    constructor(pageId) {\n        this.$_pageId = pageId\n        this.$_pageUrl = '' // 页面真实 url\n        this.$_subpackagesMap = {} // 分包名映射表\n    }\n\n    get window() {\n        return cache.getWindow(this.$_pageId) || null\n    }\n\n    get document() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get config() {\n        return cache.getConfig()\n    }\n\n    get subpackagesMap() {\n        return this.$_subpackagesMap\n    }\n\n    /**\n     * 初始化\n     */\n    init(url) {\n        if (typeof url === 'string') this.$_pageUrl = url // 设置真实 url\n        const {\n            origin, entry, router, runtime = {}\n        } = cache.getConfig()\n        const subpackagesMap = runtime.subpackagesMap || {}\n\n        this.$_pageUrl = this.$_pageUrl || (origin + entry)\n        this.$_subpackagesMap = subpackagesMap\n        this.window.location.$$reset(this.$_pageUrl)\n        this.window.history.$$reset()\n\n        if (!pageUrlRouteMap) {\n            // 需要初始化页面 url - 小程序页面路由映射表\n            pageUrlRouteMap = {}\n\n            Object.keys(router).forEach(pageName => {\n                const regexpList = []\n\n                router[pageName].forEach(pathObj => {\n                    // 构造正则表达式\n                    const regexp = new RegExp(pathObj.regexp, pathObj.options)\n                    regexpList.push(regexp)\n                })\n\n                // 将每个页面的路由改造成函数，方便后续做匹配用\n                pageUrlRouteMap[pageName] = pathname => {\n                    for (const regexp of regexpList) {\n                        const parseRes = regexp.exec(pathname)\n                        regexp.lastIndex = 0\n\n                        if (parseRes) {\n                            // 匹配成功\n                            const packageName = subpackagesMap[pageName]\n                            return `/${packageName ? packageName + '/' : ''}pages/${pageName}/index`\n                        }\n                    }\n\n                    return null\n                }\n            })\n        }\n    }\n\n    /**\n     * 需要匹配对应路由的 route\n     */\n    getMatchRoute(pathname) {\n        const keys = Object.keys(pageUrlRouteMap)\n        for (const key of keys) {\n            const matchRes = pageUrlRouteMap[key](pathname)\n\n            if (matchRes) return matchRes // 匹配成功\n        }\n\n        return null\n    }\n\n    /**\n     * 判断是否 tabBar 页面\n     */\n    isTabBarPage(pageRoute) {\n        const {\n            runtime = {}\n        } = cache.getConfig()\n        const tabBarMap = runtime.tabBarMap || {}\n        return !!tabBarMap[pageRoute]\n    }\n}\n\nmodule.exports = Miniprogram\n","const Event = require('../event/event')\nconst cache = require('../util/cache')\n\nclass Storage {\n    constructor(pageId) {\n        this.$_pageId = pageId\n        this.$_keys = []\n    }\n\n    /**\n     * 触发 window 的 storage 事件\n     */\n    $_triggerStorage(key, newValue, oldValue, force) {\n        if (!force && newValue === oldValue) return\n\n        const currentWindow = cache.getWindow(this.$_pageId)\n        const windowList = cache.getWindowList() || []\n        windowList.forEach(window => {\n            if (window && window !== currentWindow) {\n                window.$$trigger('storage', {\n                    event: new Event({\n                        name: 'storage',\n                        target: window,\n                        $$extra: {\n                            key,\n                            newValue,\n                            oldValue,\n                            storageArea: this,\n                            url: currentWindow.location.href,\n                        }\n                    })\n                })\n            }\n        })\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get length() {\n        return this.$_keys && this.$_keys.length || 0\n    }\n\n    key(num) {\n        if (typeof num !== 'number' || !isFinite(num) || num < 0) return null\n        return this.$_keys[num] || null\n    }\n}\n\nclass SessionStorage extends Storage {\n    constructor(pageId) {\n        super(pageId)\n        this.$_map = {}\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    getItem(key) {\n        if (!key || typeof key !== 'string') return null\n        return this.$_map[key] || null\n    }\n\n    setItem(key, data) {\n        if (!key || typeof key !== 'string') return\n        data = '' + data\n\n        const oldValue = this.$_map[key] || null\n        this.$_map[key] = data\n\n        // 调整顺序\n        const index = this.$_keys.indexOf(key)\n        if (index >= 0) this.$_keys.splice(index, 1)\n        this.$_keys.push(key)\n\n        this.$_triggerStorage(key, data, oldValue)\n    }\n\n    removeItem(key) {\n        if (!key || typeof key !== 'string') return\n\n        const oldValue = this.$_map[key] || null\n        delete this.$_map[key]\n\n        // 删除 key\n        const index = this.$_keys.indexOf(key)\n        if (index >= 0) this.$_keys.splice(index, 1)\n\n        this.$_triggerStorage(key, null, oldValue)\n    }\n\n    clear() {\n        this.$_map = {}\n        this.$_keys.length = 0\n        this.$_triggerStorage(null, null, null, true)\n    }\n}\n\nclass LocalStorage extends Storage {\n    /**\n     * 更新 storage 信息\n     */\n    $_updateInfo() {\n        try {\n            const info = wx.getStorageInfoSync()\n            const windowList = cache.getWindowList() || []\n            windowList.forEach(window => {\n                if (window) {\n                    window.localStorage.$$keys = info.keys\n                }\n            })\n        } catch (err) {\n            console.warn('getStorageInfoSync fail')\n        }\n    }\n\n    set $$keys(keys) {\n        this.$_keys = keys\n    }\n\n    /**\n     * 对外属性和方法\n     */\n\n    getItem(key) {\n        if (!key || typeof key !== 'string') return null\n\n        return wx.getStorageSync(key) || null\n    }\n\n    setItem(key, data) {\n        if (!key || typeof key !== 'string') return\n        data = '' + data\n\n        const oldValue = wx.getStorageSync(key) || null\n\n        wx.setStorageSync(key, data)\n        this.$_updateInfo()\n        this.$_triggerStorage(key, data, oldValue)\n    }\n\n    removeItem(key) {\n        if (!key || typeof key !== 'string') return\n\n        const oldValue = wx.getStorageSync(key) || null\n\n        wx.removeStorageSync(key)\n        this.$_updateInfo()\n        this.$_triggerStorage(key, null, oldValue)\n    }\n\n    clear() {\n        wx.clearStorageSync()\n        this.$_updateInfo()\n        this.$_triggerStorage(null, null, null, true)\n    }\n}\n\nmodule.exports = {\n    SessionStorage,\n    LocalStorage,\n}\n","/**\n * 受限于小程序环境，不支持 data url 和 options 参数\n */\nconst Event = require('../event/event')\nconst EventTarget = require('../event/event-target')\nconst cache = require('../util/cache')\n\nlet wxWorker = null\nlet wxWorkerPath = null\nlet callbackList = []\nlet sharedWorkerInstCount = 0\nconst workerMap = {}\nconst sharedWorkerMap = {}\n\n/**\n * 获取 worker 所在目录\n */\nfunction getWorkersDir() {\n    const config = cache.getConfig()\n    const generate = config.generate\n    return generate && generate.worker\n}\n\n/**\n * 获取 worker 路径\n */\nfunction getWorkerUrl(url) {\n    const fileName = url.split('/').pop()\n    return getWorkersDir() + '/' + fileName\n}\n\n/**\n * 监听 worker 消息回调\n */\nfunction onWorkerMessage(worker, callback) {\n    callbackList.push(callback)\n    if (!worker._hasRegisterCb) {\n        worker.onMessage(res => {\n            callbackList.forEach(func => func(res))\n        })\n        worker._hasRegisterCb = true\n    }\n}\n\nclass Worker extends EventTarget {\n    constructor(url, pageId, isSharedWorker) {\n        super()\n\n        const filePath = getWorkerUrl(url)\n\n        if (wxWorker) {\n            // 小程序只允许创建一个 worker 实例\n            if (!isSharedWorker || (filePath !== wxWorkerPath)) throw new Error('exceed max concurrent workers limit')\n        }\n\n        this.$_pageId = pageId\n        this.isSharedWorker = isSharedWorker\n        wxWorkerPath = filePath\n        wxWorker = wxWorker || this.$_tryCatch(() => wx.createWorker(wxWorkerPath))\n\n        if (wxWorker) {\n            this.$_onMessage = res => {\n                if (res.type === 'message' && res.pageId === this.$_pageId) {\n                    this.$$trigger('message', {\n                        event: new Event({\n                            name: 'message',\n                            target: this,\n                            $$extra: {\n                                data: res.data,\n                            },\n                        })\n                    })\n                }\n            }\n            onWorkerMessage(wxWorker, this.$_onMessage)\n\n            const navigator = {}\n            const location = {}\n            const window = cache.getWindow(this.$_pageId)\n            if (window && !isSharedWorker) {\n                ['userAgent', 'appCodeName', 'appName', 'language', 'languages', 'platform', 'product'].forEach(key => navigator[key] = window.navigator[key]);\n                ['protocol', 'host', 'hostname', 'port', 'origin', 'pathname', 'search', 'hash', 'href'].forEach(key => location[key] = window.location[key])\n            }\n            this.$_tryCatch(() => wxWorker.postMessage({\n                type: 'connect', pageId: this.$_pageId, navigator, location\n            }))\n        }\n\n        if (!this.isSharedWorker) workerMap[this.$_pageId] = this\n    }\n\n    /**\n     * 处理方法的 try catch 调用\n     */\n    $_tryCatch(func) {\n        try {\n            return func.call(this)\n        } catch (error) {\n            console.error(error)\n            this.$$trigger('error', {\n                event: new Event({\n                    name: 'error',\n                    target: this,\n                    $$extra: {\n                        error,\n                        message: error.message || '',\n                        filename: wxWorkerPath,\n                    }\n                })\n            })\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    postMessage(data) {\n        if (this.$_pageId && wxWorker) this.$_tryCatch(() => wxWorker.postMessage({type: 'message', pageId: this.$_pageId, data}))\n    }\n\n    terminate() {\n        if (this.$_pageId && wxWorker) {\n            this.$_pageId = null\n            if (!this.isSharedWorker) delete workerMap[this.$_pageId]\n            this.$_tryCatch(() => wxWorker.terminate())\n            wxWorker = null\n            wxWorkerPath = null\n            callbackList = []\n        }\n    }\n}\n\nclass SharedWorker extends EventTarget {\n    constructor(url, pageId) {\n        super()\n\n        this.$_worker = new Worker(url, pageId, true)\n        this.$_worker.close = () => {\n            sharedWorkerInstCount--\n            callbackList.splice(callbackList.indexOf(this.$_worker.$_onMessage), 1)\n            if (!sharedWorkerInstCount) this.$_worker.terminate()\n            if (sharedWorkerMap[pageId]) sharedWorkerMap[pageId].splice(sharedWorkerMap[pageId].indexOf(this), 1)\n        }\n        this.$_worker.start = () => {}\n        sharedWorkerInstCount++\n        sharedWorkerMap[pageId] = sharedWorkerMap[pageId] || []\n        sharedWorkerMap[pageId].push(this)\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get port() {\n        return this.$_worker\n    }\n}\n\n/**\n * 页面删除\n */\nfunction destroy(pageId) {\n    if (sharedWorkerMap[pageId]) sharedWorkerMap[pageId].forEach(sharedWorker => sharedWorker.port.close())\n    sharedWorkerMap[pageId] = null\n    if (workerMap[pageId]) workerMap[pageId].terminate()\n    workerMap[pageId] = null\n}\n\n\nmodule.exports = {\n    Worker,\n    SharedWorker,\n    destroy,\n}\n","class Performance {\n    constructor(timeOrigin) {\n        this.$_timeOrigin = timeOrigin\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get navigation() {\n        console.warn('performance.navigation is not supported')\n        return null\n    }\n\n    get timing() {\n        console.warn('performance.timing is not supported')\n        return null\n    }\n\n    get timeOrigin() {\n        return this.$_timeOrigin\n    }\n\n    now() {\n        return +new Date() - this.$_timeOrigin\n    }\n}\n\nmodule.exports = Performance\n","const Location = require('./location')\nconst EventTarget = require('../event/event-target')\nconst cache = require('../util/cache')\n\nconst SUPPORT_METHOD = ['OPTIONS', 'GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'TRACE', 'CONNECT']\nconst STATUS_TEXT_MAP = {\n    100: 'Continue',\n    101: 'Switching protocols',\n\n    200: 'OK',\n    201: 'Created',\n    202: 'Accepted',\n    203: 'Non-Authoritative Information',\n    204: 'No Content',\n    205: 'Reset Content',\n    206: 'Partial Content',\n\n    300: 'Multiple Choices',\n    301: 'Moved Permanently',\n    302: 'Found',\n    303: 'See Other',\n    304: 'Not Modified',\n    305: 'Use Proxy',\n    307: 'Temporary Redirect',\n\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Request Entity Too Large',\n    414: 'Request-URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Requested Range Not Suitable',\n    417: 'Expectation Failed',\n\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n}\n\nclass XMLHttpRequest extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        this.$_pageId = pageId\n        this.$_method = ''\n        this.$_url = ''\n        this.$_data = null\n        this.$_status = 0\n        this.$_statusText = ''\n        this.$_readyState = XMLHttpRequest.UNSENT\n        this.$_header = {\n            Accept: '*/*'\n        }\n        this.$_responseType = ''\n        this.$_resHeader = null\n        this.$_response = null\n        this.$_timeout = 0\n        this.$_startTime = null\n        this.$_withCredentials = true // 向前兼容，默认为 true\n\n        this.$_requestTask = null\n        this.$_requestSuccess = this.$_requestSuccess.bind(this)\n        this.$_requestFail = this.$_requestFail.bind(this)\n        this.$_requestComplete = this.$_requestComplete.bind(this)\n    }\n\n    /**\n     * readyState 变化\n     */\n    $_callReadyStateChange(readyState) {\n        const hasChange = readyState !== this.$_readyState\n        this.$_readyState = readyState\n\n        if (hasChange) this.$$trigger('readystatechange')\n    }\n\n    /**\n     * 执行请求\n     */\n    $_callRequest() {\n        const window = cache.getWindow(this.$_pageId)\n        if (!window || !window.document) {\n            console.warn('this page has been unloaded, so this request will be canceled.')\n            return\n        }\n\n        if (this.$_timeout) {\n            this.$_startTime = +new Date()\n\n            setTimeout(() => {\n                if (!this.$_status && this.$_readyState !== XMLHttpRequest.DONE) {\n                    // 超时\n                    if (this.$_requestTask) this.$_requestTask.abort()\n                    this.$_callReadyStateChange(XMLHttpRequest.DONE)\n                    this.$$trigger('timeout')\n                }\n            }, this.$_timeout)\n        }\n\n        // 重置各种状态\n        this.$_status = 0\n        this.$_statusText = ''\n        this.$_readyState = XMLHttpRequest.OPENED\n        this.$_resHeader = null\n        this.$_response = null\n\n        // 补完 url\n        let url = this.$_url\n        url = url.indexOf('//') === -1 ? window.location.origin + url : url\n\n        // 头信息\n        const header = Object.assign({}, this.$_header)\n        header.cookie = window.document.$$cookie\n        if (!this.withCredentials) {\n            // 不同源，要求 withCredentials 为 true 才携带 cookie\n            const {origin} = Location.$$parse(url)\n            if (origin !== window.location.origin) delete header.cookie\n        }\n\n        this.$_requestTask = wx.request({\n            url,\n            data: this.$_data || {},\n            header,\n            method: this.$_method,\n            dataType: this.$_responseType === 'json' ? 'json' : 'text',\n            responseType: this.$_responseType === 'arraybuffer' ? 'arraybuffer' : 'text',\n            success: this.$_requestSuccess,\n            fail: this.$_requestFail,\n            complete: this.$_requestComplete,\n        })\n    }\n\n    /**\n     * 请求成功\n     */\n    $_requestSuccess({data, statusCode, header}) {\n        const window = cache.getWindow(this.$_pageId)\n        if (!window || !window.document) {\n            console.warn('this page has been unloaded, so this request will be canceled.')\n            return\n        }\n\n        this.$_status = statusCode\n        this.$_resHeader = header\n\n        this.$_callReadyStateChange(XMLHttpRequest.HEADERS_RECEIVED)\n\n        // 处理 set-cookie\n        if (window) {\n            const setCookie = header['Set-Cookie']\n\n            if (setCookie && typeof setCookie === 'string') {\n                window.document.$$setCookie(setCookie)\n            }\n        }\n\n        // 处理返回数据\n        if (data) {\n            this.$_callReadyStateChange(XMLHttpRequest.LOADING)\n            this.$$trigger('loadstart')\n            this.$_response = data\n            this.$$trigger('loadend')\n        }\n    }\n\n    /**\n     * 请求失败\n     */\n    $_requestFail({errMsg}) {\n        this.$_status = 0\n        this.$_statusText = errMsg\n\n        this.$$trigger('error')\n    }\n\n    /**\n     * 请求完成\n     */\n    $_requestComplete() {\n        this.$_startTime = null\n        this.$_requestTask = null\n        this.$_callReadyStateChange(XMLHttpRequest.DONE)\n\n        if (this.$_status) {\n            this.$$trigger('load')\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get timeout() {\n        return this.$_timeout\n    }\n\n    set timeout(timeout) {\n        if (typeof timeout !== 'number' || !isFinite(timeout) || timeout <= 0) return\n\n        this.$_timeout = timeout\n    }\n\n    get status() {\n        return this.$_status\n    }\n\n    get statusText() {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED) return ''\n\n        return STATUS_TEXT_MAP[this.$_status + ''] || this.$_statusText || ''\n    }\n\n    get readyState() {\n        return this.$_readyState\n    }\n\n    get responseType() {\n        return this.$_responseType\n    }\n\n    set responseType(value) {\n        if (typeof value !== 'string') return\n\n        this.$_responseType = value\n    }\n\n    get responseText() {\n        if (!this.$_responseType || this.$_responseType === 'text') {\n            return this.$_response\n        }\n\n        return null\n    }\n\n    get response() {\n        return this.$_response\n    }\n\n    get withCredentials() {\n        return this.$_withCredentials\n    }\n\n    set withCredentials(value) {\n        this.$_withCredentials = !!value\n    }\n\n    abort() {\n        if (this.$_requestTask) {\n            this.$_requestTask.abort()\n            this.$$trigger('abort')\n        }\n    }\n\n    getAllResponseHeaders() {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED || !this.$_resHeader) return ''\n\n        return Object.keys(this.$_resHeader)\n            .map(key => `${key}: ${this.$_resHeader[key]}`)\n            .join('\\r\\n')\n    }\n\n    getResponseHeader(name) {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED || !this.$_resHeader) return null\n\n        // 处理大小写不敏感\n        const key = Object.keys(this.$_resHeader).find(item => item.toLowerCase() === name.toLowerCase())\n        const value = key ? this.$_resHeader[key] : null\n\n        return typeof value === 'string' ? value : null\n    }\n\n    open(method, url) {\n        if (typeof method === 'string') method = method.toUpperCase()\n\n        if (SUPPORT_METHOD.indexOf(method) < 0) return\n        if (!url || typeof url !== 'string') return\n\n        this.$_method = method\n        this.$_url = url\n\n        this.$_callReadyStateChange(XMLHttpRequest.OPENED)\n    }\n\n    setRequestHeader(header, value) {\n        if (typeof header === 'string' && typeof value === 'string') {\n            this.$_header[header] = value\n        }\n    }\n\n    send(data) {\n        if (this.$_readyState !== XMLHttpRequest.OPENED) return\n\n        this.$_data = data\n        this.$_callRequest()\n    }\n}\n\nXMLHttpRequest.UNSENT = 0\nXMLHttpRequest.OPENED = 1\nXMLHttpRequest.HEADERS_RECEIVED = 2\nXMLHttpRequest.LOADING = 3\nXMLHttpRequest.DONE = 4\n\nmodule.exports = XMLHttpRequest\n"],"sourceRoot":""}